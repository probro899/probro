(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[21],{

/***/ "./client/src/screens/test/SFU/api-test/Course.js":
/*!********************************************************!*\
  !*** ./client/src/screens/test/SFU/api-test/Course.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Course; });\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ \"../../node_modules/@babel/runtime/helpers/asyncToGenerator.js\");\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"../../node_modules/@babel/runtime/helpers/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"../../node_modules/@babel/runtime/helpers/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ \"../../node_modules/@babel/runtime/helpers/inherits.js\");\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \"../../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js\");\n/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \"../../node_modules/@babel/runtime/helpers/getPrototypeOf.js\");\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @babel/runtime/regenerator */ \"../../node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! react */ \"../../node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_7__);\n\n\n\n\n\n\n\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default()(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\nvar Course = /*#__PURE__*/function (_React$Component) {\n  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3___default()(Course, _React$Component);\n\n  var _super = _createSuper(Course);\n\n  function Course() {\n    var _temp, _this;\n\n    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default()(this, Course);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default()(_this, (_temp = _this = _super.call.apply(_super, [this].concat(args)), _this.addCourse = /*#__PURE__*/_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default.a.mark(function _callee() {\n      var _this$props, webRtc, account, apis, uId, res;\n\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default.a.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this$props = _this.props, webRtc = _this$props.webRtc, account = _this$props.account;\n              apis = webRtc.apis;\n              uId = account.user.id;\n              _context.next = 5;\n              return apis.addCourse({\n                createdBy: uId,\n                title: 'Course Title',\n                subTitle: 'Course SunTitle',\n                description: 'Course Description',\n                skill: 'Course Skill',\n                duration: 1000,\n                status: 'REVIEW',\n                level: 'Course level',\n                domain: 'Course Domain',\n                subDomain: 'Course Domain',\n                logo: 'Logo Url',\n                remarks: 'This some remarks about courses'\n              });\n\n            case 5:\n              res = _context.sent;\n              console.log('addCourses apis res', res);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })), _this.updateCourse = /*#__PURE__*/_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default.a.mark(function _callee2() {\n      var _this$props2, webRtc, account, apis, res;\n\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default.a.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this$props2 = _this.props, webRtc = _this$props2.webRtc, account = _this$props2.account;\n              apis = webRtc.apis;\n              _context2.next = 4;\n              return apis.updateCourse([{\n                title: 'Courses title updated'\n              }, {\n                id: 1\n              }]);\n\n            case 4:\n              res = _context2.sent;\n              console.log('course update res', res);\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    })), _this.deleteCourse = /*#__PURE__*/_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default.a.mark(function _callee3() {\n      var _this$props3, webRtc, account, apis, res;\n\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default.a.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _this$props3 = _this.props, webRtc = _this$props3.webRtc, account = _this$props3.account;\n              apis = webRtc.apis;\n              _context3.next = 4;\n              return apis.deleteCourse({\n                id: 1\n              });\n\n            case 4:\n              res = _context3.sent;\n              console.log('course update res', res);\n\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    })), _this.addCourseSection = /*#__PURE__*/_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default.a.mark(function _callee4() {\n      var _this$props4, webRtc, account, apis, uId, res;\n\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default.a.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _this$props4 = _this.props, webRtc = _this$props4.webRtc, account = _this$props4.account;\n              apis = webRtc.apis;\n              uId = account.user.id;\n              _context4.next = 5;\n              return apis.addCourseSection({\n                courseId: 8,\n                title: 'Section title',\n                objective: 'Section objective',\n                duration: 1000,\n                remarks: 'this is section remarks'\n              });\n\n            case 5:\n              res = _context4.sent;\n              console.log('add course section res', res);\n\n            case 7:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    })), _this.updateCourseSection = /*#__PURE__*/_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default.a.mark(function _callee5() {\n      var _this$props5, webRtc, account, apis, res;\n\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default.a.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _this$props5 = _this.props, webRtc = _this$props5.webRtc, account = _this$props5.account;\n              apis = webRtc.apis;\n              _context5.next = 4;\n              return apis.updateCourseSection([{\n                title: 'Section title updated'\n              }, {\n                id: 1\n              }]);\n\n            case 4:\n              res = _context5.sent;\n              console.log('section updated done', res);\n\n            case 6:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    })), _this.deleteCourseSection = /*#__PURE__*/_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default.a.mark(function _callee6() {\n      var _this$props6, webRtc, account, apis, uId, res;\n\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default.a.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _this$props6 = _this.props, webRtc = _this$props6.webRtc, account = _this$props6.account;\n              apis = webRtc.apis;\n              uId = account.user.id;\n              _context6.next = 5;\n              return apis.deleteCourseSection({\n                id: 1\n              });\n\n            case 5:\n              res = _context6.sent;\n              console.log('add course section res', res);\n\n            case 7:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    })), _this.addSectionLecture = /*#__PURE__*/_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default.a.mark(function _callee7() {\n      var _this$props7, webRtc, account, apis, uId, res;\n\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default.a.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _this$props7 = _this.props, webRtc = _this$props7.webRtc, account = _this$props7.account;\n              apis = webRtc.apis;\n              uId = account.user.id;\n              _context7.next = 5;\n              return apis.addSectionLecture({\n                sectionId: 1,\n                title: 'Lecture title',\n                description: 'Lecture description',\n                duration: 10000,\n                remarks: 'remarks in lecture'\n              });\n\n            case 5:\n              res = _context7.sent;\n              console.log('Add section lecture', res);\n\n            case 7:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    })), _this.updateSectionLecture = /*#__PURE__*/_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default.a.mark(function _callee8() {\n      var _this$props8, webRtc, account, apis, res;\n\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default.a.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _this$props8 = _this.props, webRtc = _this$props8.webRtc, account = _this$props8.account;\n              apis = webRtc.apis;\n              _context8.next = 4;\n              return apis.updateSectionLecture([{\n                title: 'Lecture title udated'\n              }, {\n                id: 1\n              }]);\n\n            case 4:\n              res = _context8.sent;\n              console.log('updateSectionLecture res', res);\n\n            case 6:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    })), _this.deleteSectionLecture = /*#__PURE__*/_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default.a.mark(function _callee9() {\n      var _this$props9, webRtc, account, apis, uId, res;\n\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default.a.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              _this$props9 = _this.props, webRtc = _this$props9.webRtc, account = _this$props9.account;\n              apis = webRtc.apis;\n              uId = account.user.id;\n              _context9.next = 5;\n              return apis.deleteSectionLecture({\n                id: 1\n              });\n\n            case 5:\n              res = _context9.sent;\n              console.log('Add section lecture', res);\n\n            case 7:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9);\n    })), _this.addResource = /*#__PURE__*/_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default.a.mark(function _callee10() {\n      var _this$props10, webRtc, account, apis, res;\n\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default.a.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              _this$props10 = _this.props, webRtc = _this$props10.webRtc, account = _this$props10.account;\n              apis = webRtc.apis;\n              _context10.next = 4;\n              return apis.addResource({\n                lecId: 1,\n                type: 'Image',\n                name: 'image-14149812789.jpg',\n                url: '/user/somthing'\n              });\n\n            case 4:\n              res = _context10.sent;\n              console.log('addResource remarks', res);\n\n            case 6:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10);\n    })), _this.updateResource = /*#__PURE__*/_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default.a.mark(function _callee11() {\n      var _this$props11, webRtc, account, apis, res;\n\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default.a.wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              _this$props11 = _this.props, webRtc = _this$props11.webRtc, account = _this$props11.account;\n              apis = webRtc.apis;\n              _context11.next = 4;\n              return apis.updateResource([{\n                type: 'Image',\n                name: 'image-14149812789.jpg updated',\n                url: '/user/somthing'\n              }, {\n                id: 1\n              }]);\n\n            case 4:\n              res = _context11.sent;\n              console.log('addResource remarks', res);\n\n            case 6:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11);\n    })), _this.deleteResource = /*#__PURE__*/_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default.a.mark(function _callee12() {\n      var _this$props12, webRtc, account, apis, res;\n\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default.a.wrap(function _callee12$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              _this$props12 = _this.props, webRtc = _this$props12.webRtc, account = _this$props12.account;\n              apis = webRtc.apis;\n              _context12.next = 4;\n              return apis.deleteResource({\n                id: 1\n              });\n\n            case 4:\n              res = _context12.sent;\n              console.log('addResource remarks', res);\n\n            case 6:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, _callee12);\n    })), _this.addCourseEnroll = /*#__PURE__*/_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default.a.mark(function _callee13() {\n      var _this$props13, webRtc, account, apis, uId, res;\n\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default.a.wrap(function _callee13$(_context13) {\n        while (1) {\n          switch (_context13.prev = _context13.next) {\n            case 0:\n              _this$props13 = _this.props, webRtc = _this$props13.webRtc, account = _this$props13.account;\n              apis = webRtc.apis;\n              uId = account.user.id;\n              _context13.next = 5;\n              return apis.addCourseEnroll({\n                userId: uId,\n                courseId: 1,\n                status: 'status1'\n              });\n\n            case 5:\n              res = _context13.sent;\n              console.log('add course enroll', res);\n\n            case 7:\n            case \"end\":\n              return _context13.stop();\n          }\n        }\n      }, _callee13);\n    })), _this.updateCourseEnroll = /*#__PURE__*/_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default.a.mark(function _callee14() {\n      var _this$props14, webRtc, account, apis, uId, res;\n\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default.a.wrap(function _callee14$(_context14) {\n        while (1) {\n          switch (_context14.prev = _context14.next) {\n            case 0:\n              _this$props14 = _this.props, webRtc = _this$props14.webRtc, account = _this$props14.account;\n              apis = webRtc.apis;\n              uId = account.user.id;\n              _context14.next = 5;\n              return apis.updateCourseEnroll([{\n                userId: uId,\n                courseId: 1,\n                status: 'status1 upated'\n              }, {\n                id: 1\n              }]);\n\n            case 5:\n              res = _context14.sent;\n              console.log('add course enroll', res);\n\n            case 7:\n            case \"end\":\n              return _context14.stop();\n          }\n        }\n      }, _callee14);\n    })), _this.deleteCourseEnroll = /*#__PURE__*/_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default.a.mark(function _callee15() {\n      var _this$props15, webRtc, account, apis, uId, res;\n\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default.a.wrap(function _callee15$(_context15) {\n        while (1) {\n          switch (_context15.prev = _context15.next) {\n            case 0:\n              _this$props15 = _this.props, webRtc = _this$props15.webRtc, account = _this$props15.account;\n              apis = webRtc.apis;\n              uId = account.user.id;\n              _context15.next = 5;\n              return apis.deleteCourseEnroll({\n                id: 1\n              });\n\n            case 5:\n              res = _context15.sent;\n              console.log('add course enroll', res);\n\n            case 7:\n            case \"end\":\n              return _context15.stop();\n          }\n        }\n      }, _callee15);\n    })), _this.addCoursePrice = /*#__PURE__*/_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default.a.mark(function _callee16() {\n      var _this$props16, webRtc, account, apis, uId, res;\n\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default.a.wrap(function _callee16$(_context16) {\n        while (1) {\n          switch (_context16.prev = _context16.next) {\n            case 0:\n              _this$props16 = _this.props, webRtc = _this$props16.webRtc, account = _this$props16.account;\n              apis = webRtc.apis;\n              uId = account.user.id;\n              _context16.next = 5;\n              return apis.addCoursePrice({\n                courseId: 1,\n                price: 1200,\n                discount: 100,\n                currency: 'NRS'\n              });\n\n            case 5:\n              res = _context16.sent;\n              console.log('addCoursePrice res', res);\n\n            case 7:\n            case \"end\":\n              return _context16.stop();\n          }\n        }\n      }, _callee16);\n    })), _this.updateCoursePrice = /*#__PURE__*/_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default.a.mark(function _callee17() {\n      var _this$props17, webRtc, account, apis, uId, res;\n\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default.a.wrap(function _callee17$(_context17) {\n        while (1) {\n          switch (_context17.prev = _context17.next) {\n            case 0:\n              _this$props17 = _this.props, webRtc = _this$props17.webRtc, account = _this$props17.account;\n              apis = webRtc.apis;\n              uId = account.user.id;\n              _context17.next = 5;\n              return apis.updateCoursePrice([{\n                courseId: 1,\n                price: 1200,\n                discount: 100,\n                currency: 'NRS updated'\n              }, {\n                id: 1\n              }]);\n\n            case 5:\n              res = _context17.sent;\n              console.log('addCoursePrice res', res);\n\n            case 7:\n            case \"end\":\n              return _context17.stop();\n          }\n        }\n      }, _callee17);\n    })), _this.deleteCoursePrice = /*#__PURE__*/_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default.a.mark(function _callee18() {\n      var _this$props18, webRtc, account, apis, uId, res;\n\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default.a.wrap(function _callee18$(_context18) {\n        while (1) {\n          switch (_context18.prev = _context18.next) {\n            case 0:\n              _this$props18 = _this.props, webRtc = _this$props18.webRtc, account = _this$props18.account;\n              apis = webRtc.apis;\n              uId = account.user.id;\n              _context18.next = 5;\n              return apis.deleteCoursePrice({\n                id: 1\n              });\n\n            case 5:\n              res = _context18.sent;\n              console.log('addCoursePrice res', res);\n\n            case 7:\n            case \"end\":\n              return _context18.stop();\n          }\n        }\n      }, _callee18);\n    })), _this.addStarRating = /*#__PURE__*/_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default.a.mark(function _callee19() {\n      var _this$props19, webRtc, account, apis, uId, res;\n\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default.a.wrap(function _callee19$(_context19) {\n        while (1) {\n          switch (_context19.prev = _context19.next) {\n            case 0:\n              _this$props19 = _this.props, webRtc = _this$props19.webRtc, account = _this$props19.account;\n              apis = webRtc.apis;\n              uId = account.user.id;\n              _context19.next = 5;\n              return apis.addStarRating({\n                courseId: 1,\n                mentorId: 2,\n                noOfStar: 4,\n                review: 'this star review text',\n                userId: 1,\n                type: 'star type',\n                remarks: 'this is star remarks'\n              });\n\n            case 5:\n              res = _context19.sent;\n              console.log('Add star rating res', res);\n\n            case 7:\n            case \"end\":\n              return _context19.stop();\n          }\n        }\n      }, _callee19);\n    })), _this.updateStarRating = /*#__PURE__*/_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default.a.mark(function _callee20() {\n      var _this$props20, webRtc, account, apis, uId, res;\n\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default.a.wrap(function _callee20$(_context20) {\n        while (1) {\n          switch (_context20.prev = _context20.next) {\n            case 0:\n              _this$props20 = _this.props, webRtc = _this$props20.webRtc, account = _this$props20.account;\n              apis = webRtc.apis;\n              uId = account.user.id;\n              _context20.next = 5;\n              return apis.updateStarRating([{\n                courseId: 1,\n                mentorId: 2,\n                noOfStar: 4,\n                review: 'this star review text updated',\n                userId: 1,\n                type: 'star type',\n                remarks: 'this is star remarks'\n              }, {\n                id: 1\n              }]);\n\n            case 5:\n              res = _context20.sent;\n              console.log('Add star rating res', res);\n\n            case 7:\n            case \"end\":\n              return _context20.stop();\n          }\n        }\n      }, _callee20);\n    })), _this.deleteStarRating = /*#__PURE__*/_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default.a.mark(function _callee21() {\n      var _this$props21, webRtc, account, apis, uId, res;\n\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default.a.wrap(function _callee21$(_context21) {\n        while (1) {\n          switch (_context21.prev = _context21.next) {\n            case 0:\n              _this$props21 = _this.props, webRtc = _this$props21.webRtc, account = _this$props21.account;\n              apis = webRtc.apis;\n              uId = account.user.id;\n              _context21.next = 5;\n              return apis.deleteStarRating({\n                id: 1\n              });\n\n            case 5:\n              res = _context21.sent;\n              console.log('Add star rating res', res);\n\n            case 7:\n            case \"end\":\n              return _context21.stop();\n          }\n        }\n      }, _callee21);\n    })), _temp));\n  }\n\n  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default()(Course, [{\n    key: \"render\",\n    value: function render() {\n      console.log('Props in Courese api test', this.props);\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(\"div\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(\"h4\", null, \"Course Api test\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(\"button\", {\n        onClick: this.addCourse\n      }, \"addCourse\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(\"button\", {\n        onClick: this.updateCourse\n      }, \"updateCourse\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(\"button\", {\n        onClick: this.deleteCourse\n      }, \"deleteCourse\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(\"div\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(\"h4\", null, \"Section Api test\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(\"button\", {\n        onClick: this.addCourseSection\n      }, \"addCourseSection\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(\"button\", {\n        onClick: this.updateCourseSection\n      }, \" updateCourseSection\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(\"button\", {\n        onClick: this.deleteCourseSection\n      }, \" deleteCourseSection\")), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(\"div\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(\"h4\", null, \"Lecture Api test\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(\"button\", {\n        onClick: this.addSectionLecture\n      }, \"addSectionLecture\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(\"button\", {\n        onClick: this.updateSectionLecture\n      }, \"updateSectionLecture\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(\"button\", {\n        onClick: this.deleteSectionLecture\n      }, \" deleteSectionLecture\")), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(\"div\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(\"h4\", null, \"Resource Api test\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(\"button\", {\n        onClick: this.addResource\n      }, \"addResource\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(\"button\", {\n        onClick: this.updateResource\n      }, \"updateResource\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(\"button\", {\n        onClick: this.deleteResource\n      }, \" deleteResource\")), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(\"div\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(\"h4\", null, \"CourseEnroll Api test\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(\"button\", {\n        onClick: this.addCourseEnroll\n      }, \"addCourseEnroll\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(\"button\", {\n        onClick: this.updateCourseEnroll\n      }, \"updateCourseEnroll\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(\"button\", {\n        onClick: this.deleteCourseEnroll\n      }, \" deleteCourseEnroll\")), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(\"div\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(\"h4\", null, \"CoursePrice Api test\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(\"button\", {\n        onClick: this.addCoursePrice\n      }, \"addCoursePrice\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(\"button\", {\n        onClick: this.updateCoursePrice\n      }, \"updateCoursePrice\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(\"button\", {\n        onClick: this.deleteCoursePrice\n      }, \" deleteCoursePrice\")), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(\"div\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(\"h4\", null, \"Star Rating Api test\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(\"button\", {\n        onClick: this.addStarRating\n      }, \"addStarRating\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(\"button\", {\n        onClick: this.updateStarRating\n      }, \"updateStarRating\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(\"button\", {\n        onClick: this.deleteStarRating\n      }, \" deleteStarRating\")));\n    }\n  }]);\n\n  return Course;\n}(react__WEBPACK_IMPORTED_MODULE_7___default.a.Component);\n\n\n\n//# sourceURL=webpack:///./client/src/screens/test/SFU/api-test/Course.js?");

/***/ }),

/***/ "./client/src/screens/test/SFU/api-test/Organization.js":
/*!**************************************************************!*\
  !*** ./client/src/screens/test/SFU/api-test/Organization.js ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Organiation; });\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ \"../../node_modules/@babel/runtime/helpers/asyncToGenerator.js\");\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"../../node_modules/@babel/runtime/helpers/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"../../node_modules/@babel/runtime/helpers/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ \"../../node_modules/@babel/runtime/helpers/inherits.js\");\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \"../../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js\");\n/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \"../../node_modules/@babel/runtime/helpers/getPrototypeOf.js\");\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @babel/runtime/regenerator */ \"../../node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! react */ \"../../node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! axios */ \"../../node_modules/axios/index.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../config */ \"./client/src/config/index.js\");\n\n\n\n\n\n\n\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default()(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/* eslint-disable react/button-has-type */\n\n\n\n\nvar Organiation = /*#__PURE__*/function (_React$Component) {\n  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3___default()(Organiation, _React$Component);\n\n  var _super = _createSuper(Organiation);\n\n  function Organiation(props) {\n    var _this;\n\n    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default()(this, Organiation);\n\n    _this = _super.call(this, props);\n    _this.addOrganization = /*#__PURE__*/_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default.a.mark(function _callee() {\n      var _this$props, webRtc, account, apis, uId, res;\n\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default.a.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this$props = _this.props, webRtc = _this$props.webRtc, account = _this$props.account;\n              apis = webRtc.apis;\n              uId = account.user.id;\n              _context.next = 5;\n              return apis.addOrganization({\n                name: 'Kantipur Engg Colz',\n                address: 'Dhapakhel',\n                email: 'kec@gmail.com',\n                phoneNo: '9844391441',\n                image: 'test-1234.jpg',\n                timeStamp: 12341431,\n                headLine: 'this is headler of organization kev',\n                webSiteUrl: 'http://kec.com.np',\n                uId: uId\n              });\n\n            case 5:\n              res = _context.sent;\n              console.log('Add Organization res', res);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    _this.updateOrganization = /*#__PURE__*/_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default.a.mark(function _callee2() {\n      var _this$props2, webRtc, account, apis, res;\n\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default.a.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this$props2 = _this.props, webRtc = _this$props2.webRtc, account = _this$props2.account;\n              apis = webRtc.apis;\n              _context2.next = 4;\n              return apis.updateOrganization([{\n                name: 'Kantipur Engg Colz updated'\n              }, {\n                id: 1\n              }]);\n\n            case 4:\n              res = _context2.sent;\n              console.log('udate res organization', res);\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    _this.deleteOrganization = /*#__PURE__*/_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default.a.mark(function _callee3() {\n      var webRtc, apis, res;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default.a.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              webRtc = _this.props.webRtc;\n              apis = webRtc.apis;\n              _context3.next = 4;\n              return apis.deleteOrganization({\n                id: 6\n              });\n\n            case 4:\n              res = _context3.sent;\n              console.log('delete organization res', res);\n\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    _this.addOrganizationMember = /*#__PURE__*/_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default.a.mark(function _callee4() {\n      var _this$props3, webRtc, account, apis, uId, res;\n\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default.a.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _this$props3 = _this.props, webRtc = _this$props3.webRtc, account = _this$props3.account;\n              apis = webRtc.apis;\n              uId = account.user.id;\n              _context4.next = 5;\n              return apis.addOrganizationMember({\n                uId: uId,\n                oId: 1,\n                type: 'student',\n                noOfClass: null,\n                status: 'pending'\n              });\n\n            case 5:\n              res = _context4.sent;\n              console.log('addOrganization Memeber', res);\n\n            case 7:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n    _this.updateOrganizationMember = /*#__PURE__*/_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default.a.mark(function _callee5() {\n      var _this$props4, webRtc, account, apis, res;\n\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default.a.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _this$props4 = _this.props, webRtc = _this$props4.webRtc, account = _this$props4.account;\n              apis = webRtc.apis;\n              _context5.next = 4;\n              return apis.updateOrganizationMember([{\n                status: 'verified'\n              }, {\n                id: 1\n              }]);\n\n            case 4:\n              res = _context5.sent;\n              console.log('UpdateOrganizationMember', res);\n\n            case 6:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n    _this.deleteOrganizationMember = /*#__PURE__*/_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default.a.mark(function _callee6() {\n      var _this$props5, webRtc, account, apis, res;\n\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default.a.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _this$props5 = _this.props, webRtc = _this$props5.webRtc, account = _this$props5.account;\n              apis = webRtc.apis;\n              _context6.next = 4;\n              return apis.deleteOrganizationMember({\n                id: 1\n              });\n\n            case 4:\n              res = _context6.sent;\n              console.log('deleteOrganizationMember res', res);\n\n            case 6:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n    _this.verifyUser = /*#__PURE__*/_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default.a.mark(function _callee7() {\n      var account, userId, res;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_6___default.a.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              account = _this.props.account;\n              userId = _this.state.userId ? parseInt(_this.state.userId, 10) : null;\n              _context7.next = 5;\n              return axios__WEBPACK_IMPORTED_MODULE_8___default.a.post(\"\".concat(_config__WEBPACK_IMPORTED_MODULE_9__[\"ENDPOINT\"], \"/web/admin/verify-user\"), {\n                token: account.sessionId,\n                userId: userId\n              });\n\n            case 5:\n              res = _context7.sent;\n              console.log('Error in verifyUser', res);\n              _context7.next = 12;\n              break;\n\n            case 9:\n              _context7.prev = 9;\n              _context7.t0 = _context7[\"catch\"](0);\n              console.error('Error in verify user', _context7.t0);\n\n            case 12:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, null, [[0, 9]]);\n    }));\n\n    _this.onChangeValueHanler = function (e) {\n      console.log('Change value', e.target.value);\n\n      _this.setState({\n        userId: e.target.value\n      });\n    };\n\n    _this.state = {};\n    return _this;\n  }\n\n  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default()(Organiation, [{\n    key: \"render\",\n    value: function render() {\n      // console.log('Apis in api test', this.state);\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(\"div\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(\"h4\", null, \"Organization Api test\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(\"button\", {\n        onClick: this.addOrganization\n      }, \" addOrganization \"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(\"button\", {\n        onClick: this.updateOrganization\n      }, \" updateOrganization \"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(\"button\", {\n        onClick: this.deleteOrganization\n      }, \" deleteOrganization\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(\"div\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(\"h4\", null, \"Organiation member test\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(\"button\", {\n        onClick: this.addOrganizationMember\n      }, \"addOrganizationMember\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(\"button\", {\n        onClick: this.updateOrganizationMember\n      }, \"updateOrganizationMember\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(\"button\", {\n        onClick: this.deleteOrganizationMember\n      }, \"deleteOrganizationMember\")), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(\"div\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(\"h4\", null, \"Verify User\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(\"button\", {\n        onClick: this.verifyUser\n      }, \"Verify User\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_7___default.a.createElement(\"input\", {\n        onChange: this.onChangeValueHanler\n      })));\n    }\n  }]);\n\n  return Organiation;\n}(react__WEBPACK_IMPORTED_MODULE_7___default.a.Component);\n\n\n\n//# sourceURL=webpack:///./client/src/screens/test/SFU/api-test/Organization.js?");

/***/ }),

/***/ "./client/src/screens/test/SFU/api-test/index.js":
/*!*******************************************************!*\
  !*** ./client/src/screens/test/SFU/api-test/index.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ApiTest; });\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"../../node_modules/@babel/runtime/helpers/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"../../node_modules/@babel/runtime/helpers/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ \"../../node_modules/@babel/runtime/helpers/inherits.js\");\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \"../../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js\");\n/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \"../../node_modules/@babel/runtime/helpers/getPrototypeOf.js\");\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react */ \"../../node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _Organization__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Organization */ \"./client/src/screens/test/SFU/api-test/Organization.js\");\n/* harmony import */ var _Course__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Course */ \"./client/src/screens/test/SFU/api-test/Course.js\");\n\n\n\n\n\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default()(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/* eslint-disable react/button-has-type */\n\n\n\n\nvar ApiTest = /*#__PURE__*/function (_React$Component) {\n  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2___default()(ApiTest, _React$Component);\n\n  var _super = _createSuper(ApiTest);\n\n  function ApiTest(props) {\n    var _this;\n\n    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, ApiTest);\n\n    _this = _super.call(this, props);\n    _this.state = {};\n    return _this;\n  }\n\n  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(ApiTest, [{\n    key: \"render\",\n    value: function render() {\n      console.log('Apis in api test', this.state);\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement(\"div\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement(_Course__WEBPACK_IMPORTED_MODULE_7__[\"default\"], this.props), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement(_Organization__WEBPACK_IMPORTED_MODULE_6__[\"default\"], this.props));\n    }\n  }]);\n\n  return ApiTest;\n}(react__WEBPACK_IMPORTED_MODULE_5___default.a.Component);\n\n\n\n//# sourceURL=webpack:///./client/src/screens/test/SFU/api-test/index.js?");

/***/ }),

/***/ "./client/src/screens/test/SFU/echo-test/index.js":
/*!********************************************************!*\
  !*** ./client/src/screens/test/SFU/echo-test/index.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"../../node_modules/@babel/runtime/helpers/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"../../node_modules/@babel/runtime/helpers/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ \"../../node_modules/@babel/runtime/helpers/inherits.js\");\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \"../../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js\");\n/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \"../../node_modules/@babel/runtime/helpers/getPrototypeOf.js\");\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var webrtc_adapter__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! webrtc-adapter */ \"../../node_modules/webrtc-adapter/src/js/adapter_core.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react */ \"../../node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _janus__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../janus */ \"./client/src/screens/test/SFU/janus.js\");\n\n\n\n\n\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default()(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/* eslint-disable jsx-a11y/media-has-caption */\n\n\n\n\nvar Index = /*#__PURE__*/function (_React$Component) {\n  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2___default()(Index, _React$Component);\n\n  var _super = _createSuper(Index);\n\n  function Index(props) {\n    var _this;\n\n    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, Index);\n\n    _this = _super.call(this, props);\n\n    _this.janusAttachment = function () {\n      var janus = _this.state.janus;\n      var echotest = null;\n      janus.attach({\n        plugin: 'janus.plugin.echotest',\n        success: function success(pluginHandle) {\n          // Plugin attached! 'pluginHandle' is our handle\n          console.log('Puligin handle', pluginHandle);\n          echotest = pluginHandle;\n          var body = {\n            audio: true,\n            video: true\n          };\n          echotest.send({\n            message: body\n          });\n          echotest.createOffer({\n            // No media property provided: by default,\n            // it's sendrecv for audio and\n            media: {\n              video: true,\n              audio: true\n            },\n            success: function success(jsep) {\n              // Got our SDP! Send our OFFER to the plugin\n              echotest.send({\n                message: body,\n                jsep: jsep\n              });\n            },\n            error: function error(_error) {\n              // An error occurred...\n              console.error('Error creatign offer', _error);\n            },\n            customizeSdp: function customizeSdp(jsep) {// if you want to modify the original sdp, do as the following\n              // oldSdp = jsep.sdp;\n              // jsep.sdp = yourNewSdp;\n            }\n          });\n        },\n        error: function error(cause) {\n          // Couldn't attach to the plugin\n          console.error('Faild to attach plugin', cause);\n        },\n        consentDialog: function consentDialog(on) {\n          // e.g., Darken the screen if on=true (getUserMedia incoming), restore it otherwise\n          console.log('consetDialog', on);\n        },\n        onmessage: function onmessage(msg, jsep) {\n          // We got a message/event (msg) from the plugin\n          // If jsep is not null, this involves a WebRTC negotiation\n          console.log('onmessage', msg, jsep);\n\n          if (jsep !== undefined && jsep !== null) {\n            // We have the ANSWER from the plugin\n            echotest.handleRemoteJsep({\n              jsep: jsep\n            });\n          }\n        },\n        onlocalstream: function onlocalstream(stream) {\n          // We have a local stream (getUserMedia worked!) to display\n          console.log('onlocalStream', stream);\n          var leftVideoElment = document.getElementById('left-video');\n          leftVideoElment.srcObject = stream;\n        },\n        onremotestream: function onremotestream(stream) {\n          // We have a remote stream (working PeerConnection!) to\n          console.log('onremotestream', stream);\n          var rightVideoElment = document.getElementById('right-video');\n          rightVideoElment.srcObject = stream;\n        },\n        oncleanup: function oncleanup() {\n          // PeerConnection with the plugin closed, clean the UI\n          // The plugin handle is still valid so we can create a new one\n          console.log('onCleanup called');\n        },\n        detached: function detached() {\n          // Connection with the plugin closed, get rid of its features\n          // The plugin handle is not valid anymore\n          console.log('clear the stuff after plugin detach');\n        }\n      });\n    };\n\n    _this.state = {\n      janus: null,\n      isJanusConnected: false\n    };\n    return _this;\n  }\n\n  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(Index, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      _janus__WEBPACK_IMPORTED_MODULE_7__[\"default\"].init({\n        debug: true,\n        dependencies: _janus__WEBPACK_IMPORTED_MODULE_7__[\"default\"].useDefaultDependencies({\n          adapter: webrtc_adapter__WEBPACK_IMPORTED_MODULE_5__[\"default\"]\n        }),\n        // or: Janus.useOldDependencies() to get the behaviour of previous Janus versions\n        callback: function callback() {\n          console.log('working fine janus');\n        }\n      });\n      var janus = new _janus__WEBPACK_IMPORTED_MODULE_7__[\"default\"]({\n        server: 'http://properclass.com:8088/janus',\n        iceServers: [{\n          urls: 'turn:properclass.com:3478?transport=tcp',\n          username: 'properclass',\n          credential: 'proper199201'\n        }],\n        success: function success() {\n          // Done! attach to plugin XYZ\n          console.log('server is conneted now go for plugin atatachment');\n\n          _this2.setState({\n            isJanusConnected: true\n          });\n        },\n        error: function error(cause) {\n          // Error, can't go on...\n          console.error('server config error', cause);\n        },\n        destroyed: function destroyed() {// I should get rid of this\n        }\n      });\n      this.setState({\n        janus: janus\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var isJanusConnected = this.state.isJanusConnected;\n\n      if (isJanusConnected) {\n        this.janusAttachment();\n      }\n\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(\"div\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(\"span\", null, \"local\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(\"video\", {\n        playsInline: true,\n        controlsList: \"noremoteplayback\",\n        autoPlay: true,\n        id: \"left-video\",\n        style: {\n          height: 300,\n          width: 300\n        }\n      }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(\"span\", null, \"remote\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(\"video\", {\n        playsInline: true,\n        controlsList: \"noremoteplayback\",\n        autoPlay: true,\n        id: \"right-video\",\n        style: {\n          height: 300,\n          width: 300\n        }\n      }));\n    }\n  }]);\n\n  return Index;\n}(react__WEBPACK_IMPORTED_MODULE_6___default.a.Component);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Index);\n\n//# sourceURL=webpack:///./client/src/screens/test/SFU/echo-test/index.js?");

/***/ }),

/***/ "./client/src/screens/test/SFU/index.js":
/*!**********************************************!*\
  !*** ./client/src/screens/test/SFU/index.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"../../node_modules/@babel/runtime/helpers/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"../../node_modules/@babel/runtime/helpers/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ \"../../node_modules/@babel/runtime/helpers/inherits.js\");\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \"../../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js\");\n/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \"../../node_modules/@babel/runtime/helpers/getPrototypeOf.js\");\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-redux */ \"../../node_modules/react-redux/es/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react */ \"../../node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _echo_test__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./echo-test */ \"./client/src/screens/test/SFU/echo-test/index.js\");\n/* harmony import */ var _videoCall__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./videoCall */ \"./client/src/screens/test/SFU/videoCall/index.js\");\n/* harmony import */ var _videoConference__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./videoConference */ \"./client/src/screens/test/SFU/videoConference/index.js\");\n/* harmony import */ var _streaming__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./streaming */ \"./client/src/screens/test/SFU/streaming/index.js\");\n/* harmony import */ var _api_test__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./api-test */ \"./client/src/screens/test/SFU/api-test/index.js\");\n\n\n\n\n\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default()(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\n\n\n\n\nvar Index = /*#__PURE__*/function (_React$Component) {\n  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2___default()(Index, _React$Component);\n\n  var _super = _createSuper(Index);\n\n  function Index(props) {\n    var _this;\n\n    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, Index);\n\n    _this = _super.call(this, props);\n\n    _this.renderTest = function () {\n      var currentTest = _this.state.currentTest;\n\n      switch (currentTest) {\n        case 'echo':\n          return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(_echo_test__WEBPACK_IMPORTED_MODULE_7__[\"default\"], null);\n\n        case 'videoCall':\n          return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(_videoCall__WEBPACK_IMPORTED_MODULE_8__[\"default\"], null);\n\n        case 'videoConference':\n          return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(_videoConference__WEBPACK_IMPORTED_MODULE_9__[\"default\"], null);\n\n        case 'streaming':\n          return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(_streaming__WEBPACK_IMPORTED_MODULE_10__[\"default\"], _this.props);\n\n        case 'apiTest':\n          return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(_api_test__WEBPACK_IMPORTED_MODULE_11__[\"default\"], _this.props);\n\n        default:\n          return null;\n      }\n    };\n\n    _this.state = {\n      currentTest: null\n    };\n    return _this;\n  }\n\n  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(Index, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log('props in test', this.props);\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(\"div\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(\"div\", {\n        style: {\n          display: 'flex'\n        }\n      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(\"button\", {\n        style: {\n          margin: 10,\n          backgroundColor: 'green'\n        },\n        text: \"Echo server\",\n        onClick: function onClick() {\n          return _this2.setState({\n            currentTest: 'echo'\n          });\n        }\n      }, \"Echo server\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(\"button\", {\n        style: {\n          margin: 10,\n          backgroundColor: 'green'\n        },\n        text: \"Video Call\",\n        onClick: function onClick() {\n          return _this2.setState({\n            currentTest: 'videoCall'\n          });\n        }\n      }, \"Video Call\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(\"button\", {\n        style: {\n          margin: 10,\n          backgroundColor: 'green'\n        },\n        text: \"Video Conference\",\n        onClick: function onClick() {\n          return _this2.setState({\n            currentTest: 'videoConference'\n          });\n        }\n      }, \"Video Conference\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(\"button\", {\n        style: {\n          margin: 10,\n          backgroundColor: 'green'\n        },\n        text: \"Streaming\",\n        onClick: function onClick() {\n          return _this2.setState({\n            currentTest: 'streaming'\n          });\n        }\n      }, \"Streaming\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(\"button\", {\n        style: {\n          margin: 10,\n          backgroundColor: 'green'\n        },\n        text: \"Streaming\",\n        onClick: function onClick() {\n          return _this2.setState({\n            currentTest: 'streaming'\n          });\n        }\n      }, \"Streaming\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(\"button\", {\n        style: {\n          margin: 10,\n          backgroundColor: 'green'\n        },\n        onClick: function onClick() {\n          return _this2.setState({\n            currentTest: 'apiTest'\n          });\n        }\n      }, \"Api Test\")), this.renderTest());\n    }\n  }]);\n\n  return Index;\n}(react__WEBPACK_IMPORTED_MODULE_6___default.a.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return state;\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_5__[\"connect\"])(mapStateToProps)(Index));\n\n//# sourceURL=webpack:///./client/src/screens/test/SFU/index.js?");

/***/ }),

/***/ "./client/src/screens/test/SFU/janus.js":
/*!**********************************************!*\
  !*** ./client/src/screens/test/SFU/janus.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/typeof */ \"../../node_modules/@babel/runtime/helpers/typeof.js\");\n/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__);\n\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/* eslint-disable */\n\n/*\n * Module shim for rollup.js to work with.\n * Simply re-export Janus from janus.js, the real 'magic' is in the rollup config.\n *\n * Since this counts as 'autogenerated' code, ESLint is instructed to ignore the contents of this file when linting your project.\n */\n\n/*\n\tThe MIT License (MIT)\n\n\tCopyright (c) 2016 Meetecho\n\n\tPermission is hereby granted, free of charge, to any person obtaining\n\ta copy of this software and associated documentation files (the \"Software\"),\n\tto deal in the Software without restriction, including without limitation\n\tthe rights to use, copy, modify, merge, publish, distribute, sublicense,\n\tand/or sell copies of the Software, and to permit persons to whom the\n\tSoftware is furnished to do so, subject to the following conditions:\n\n\tThe above copyright notice and this permission notice shall be included\n\tin all copies or substantial portions of the Software.\n\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\tOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n\tTHE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR\n\tOTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n\tARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\tOTHER DEALINGS IN THE SOFTWARE.\n */\n// List of sessions\nJanus.sessions = {};\n\nJanus.isExtensionEnabled = function () {\n  if (navigator.mediaDevices && navigator.mediaDevices.getDisplayMedia) {\n    // No need for the extension, getDisplayMedia is supported\n    return true;\n  }\n\n  if (window.navigator.userAgent.match('Chrome')) {\n    var chromever = parseInt(window.navigator.userAgent.match(/Chrome\\/(.*) /)[1], 10);\n    var maxver = 33;\n    if (window.navigator.userAgent.match('Linux')) maxver = 35; // \"known\" crash in chrome 34 and 35 on linux\n\n    if (chromever >= 26 && chromever <= maxver) {\n      // Older versions of Chrome don't support this extension-based approach, so lie\n      return true;\n    }\n\n    return Janus.extension.isInstalled();\n  } else {\n    // Firefox of others, no need for the extension (but this doesn't mean it will work)\n    return true;\n  }\n};\n\nvar defaultExtension = {\n  // Screensharing Chrome Extension ID\n  extensionId: 'hapfgfdkleiggjjpfpenajgdnfckjpaj',\n  isInstalled: function isInstalled() {\n    return document.querySelector('#janus-extension-installed') !== null;\n  },\n  getScreen: function getScreen(callback) {\n    var pending = window.setTimeout(function () {\n      var error = new Error('NavigatorUserMediaError');\n      error.name = 'The required Chrome extension is not installed: click <a href=\"#\">here</a> to install it. (NOTE: this will need you to refresh the page)';\n      return callback(error);\n    }, 1000);\n    this.cache[pending] = callback;\n    window.postMessage({\n      type: 'janusGetScreen',\n      id: pending\n    }, '*');\n  },\n  init: function init() {\n    var cache = {};\n    this.cache = cache; // Wait for events from the Chrome Extension\n\n    window.addEventListener('message', function (event) {\n      if (event.origin != window.location.origin) return;\n\n      if (event.data.type == 'janusGotScreen' && cache[event.data.id]) {\n        var callback = cache[event.data.id];\n        delete cache[event.data.id];\n\n        if (event.data.sourceId === '') {\n          // user canceled\n          var error = new Error('NavigatorUserMediaError');\n          error.name = 'You cancelled the request for permission, giving up...';\n          callback(error);\n        } else {\n          callback(null, event.data.sourceId);\n        }\n      } else if (event.data.type == 'janusGetScreenPending') {\n        console.log('clearing ', event.data.id);\n        window.clearTimeout(event.data.id);\n      }\n    });\n  }\n};\n\nJanus.useDefaultDependencies = function (deps) {\n  var f = deps && deps.fetch || fetch;\n  var p = deps && deps.Promise || Promise;\n  var socketCls = deps && deps.WebSocket || WebSocket;\n  return {\n    newWebSocket: function newWebSocket(server, proto) {\n      return new socketCls(server, proto);\n    },\n    extension: deps && deps.extension || defaultExtension,\n    isArray: function isArray(arr) {\n      return Array.isArray(arr);\n    },\n    webRTCAdapter: deps && deps.adapter || adapter,\n    httpAPICall: function httpAPICall(url, options) {\n      var fetchOptions = {\n        method: options.verb,\n        headers: {\n          'Accept': 'application/json, text/plain, */*'\n        },\n        cache: 'no-cache'\n      };\n\n      if (options.verb === \"POST\") {\n        fetchOptions.headers['Content-Type'] = 'application/json';\n      }\n\n      if (options.withCredentials !== undefined) {\n        fetchOptions.credentials = options.withCredentials === true ? 'include' : options.withCredentials ? options.withCredentials : 'omit';\n      }\n\n      if (options.body) {\n        fetchOptions.body = JSON.stringify(options.body);\n      }\n\n      var fetching = f(url, fetchOptions)[\"catch\"](function (error) {\n        return p.reject({\n          message: 'Probably a network error, is the server down?',\n          error: error\n        });\n      });\n      /*\n       * fetch() does not natively support timeouts.\n       * Work around this by starting a timeout manually, and racing it agains the fetch() to see which thing resolves first.\n       */\n\n      if (options.timeout) {\n        var timeout = new p(function (resolve, reject) {\n          var timerId = setTimeout(function () {\n            clearTimeout(timerId);\n            return reject({\n              message: 'Request timed out',\n              timeout: options.timeout\n            });\n          }, options.timeout);\n        });\n        fetching = p.race([fetching, timeout]);\n      }\n\n      fetching.then(function (response) {\n        if (response.ok) {\n          if (_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(options.success) === _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(Janus.noop)) {\n            return response.json().then(function (parsed) {\n              options.success(parsed);\n            })[\"catch\"](function (error) {\n              return p.reject({\n                message: 'Failed to parse response body',\n                error: error,\n                response: response\n              });\n            });\n          }\n        } else {\n          return p.reject({\n            message: 'API call failed',\n            response: response\n          });\n        }\n      })[\"catch\"](function (error) {\n        if (_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(options.error) === _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(Janus.noop)) {\n          options.error(error.message || '<< internal error >>', error);\n        }\n      });\n      return fetching;\n    }\n  };\n};\n\nJanus.useOldDependencies = function (deps) {\n  var jq = deps && deps.jQuery || jQuery;\n  var socketCls = deps && deps.WebSocket || WebSocket;\n  return {\n    newWebSocket: function newWebSocket(server, proto) {\n      return new socketCls(server, proto);\n    },\n    isArray: function isArray(arr) {\n      return jq.isArray(arr);\n    },\n    extension: deps && deps.extension || defaultExtension,\n    webRTCAdapter: deps && deps.adapter || adapter,\n    httpAPICall: function httpAPICall(url, options) {\n      var payload = options.body !== undefined ? {\n        contentType: 'application/json',\n        data: JSON.stringify(options.body)\n      } : {};\n      var credentials = options.withCredentials !== undefined ? {\n        xhrFields: {\n          withCredentials: options.withCredentials\n        }\n      } : {};\n      return jq.ajax(jq.extend(payload, credentials, {\n        url: url,\n        type: options.verb,\n        cache: false,\n        dataType: 'json',\n        async: options.async,\n        timeout: options.timeout,\n        success: function success(result) {\n          if (_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(options.success) === _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(Janus.noop)) {\n            options.success(result);\n          }\n        },\n        error: function error(xhr, status, err) {\n          if (_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(options.error) === _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(Janus.noop)) {\n            options.error(status, err);\n          }\n        }\n      }));\n    }\n  };\n};\n\nJanus.noop = function () {};\n\nJanus.dataChanDefaultLabel = \"JanusDataChannel\"; // Note: in the future we may want to change this, e.g., as was\n// attempted in https://github.com/meetecho/janus-gateway/issues/1670\n\nJanus.endOfCandidates = null; // Initialization\n\nJanus.init = function (options) {\n  options = options || {};\n  options.callback = typeof options.callback == \"function\" ? options.callback : Janus.noop;\n\n  if (Janus.initDone) {\n    // Already initialized\n    options.callback();\n  } else {\n    if (typeof console == \"undefined\" || typeof console.log == \"undefined\") {\n      console = {\n        log: function log() {}\n      };\n    } // Console logging (all debugging disabled by default)\n\n\n    Janus.trace = Janus.noop;\n    Janus.debug = Janus.noop;\n    Janus.vdebug = Janus.noop;\n    Janus.log = Janus.noop;\n    Janus.warn = Janus.noop;\n    Janus.error = Janus.noop;\n\n    if (options.debug === true || options.debug === \"all\") {\n      // Enable all debugging levels\n      Janus.trace = console.trace.bind(console);\n      Janus.debug = console.debug.bind(console);\n      Janus.vdebug = console.debug.bind(console);\n      Janus.log = console.log.bind(console);\n      Janus.warn = console.warn.bind(console);\n      Janus.error = console.error.bind(console);\n    } else if (Array.isArray(options.debug)) {\n      var _iterator = _createForOfIteratorHelper(options.debug),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var d = _step.value;\n\n          switch (d) {\n            case \"trace\":\n              Janus.trace = console.trace.bind(console);\n              break;\n\n            case \"debug\":\n              Janus.debug = console.debug.bind(console);\n              break;\n\n            case \"vdebug\":\n              Janus.vdebug = console.debug.bind(console);\n              break;\n\n            case \"log\":\n              Janus.log = console.log.bind(console);\n              break;\n\n            case \"warn\":\n              Janus.warn = console.warn.bind(console);\n              break;\n\n            case \"error\":\n              Janus.error = console.error.bind(console);\n              break;\n\n            default:\n              console.error(\"Unknown debugging option '\" + d + \"' (supported: 'trace', 'debug', 'vdebug', 'log', warn', 'error')\");\n              break;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n\n    Janus.log(\"Initializing library\");\n    var usedDependencies = options.dependencies || Janus.useDefaultDependencies();\n    Janus.isArray = usedDependencies.isArray;\n    Janus.webRTCAdapter = usedDependencies.webRTCAdapter;\n    Janus.httpAPICall = usedDependencies.httpAPICall;\n    Janus.newWebSocket = usedDependencies.newWebSocket;\n    Janus.extension = usedDependencies.extension;\n    Janus.extension.init(); // Helper method to enumerate devices\n\n    Janus.listDevices = function (callback, config) {\n      callback = typeof callback == \"function\" ? callback : Janus.noop;\n      if (config == null) config = {\n        audio: true,\n        video: true\n      };\n\n      if (Janus.isGetUserMediaAvailable()) {\n        navigator.mediaDevices.getUserMedia(config).then(function (stream) {\n          navigator.mediaDevices.enumerateDevices().then(function (devices) {\n            Janus.debug(devices);\n            callback(devices); // Get rid of the now useless stream\n\n            try {\n              var tracks = stream.getTracks();\n\n              var _iterator2 = _createForOfIteratorHelper(tracks),\n                  _step2;\n\n              try {\n                for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                  var mst = _step2.value;\n                  if (mst) mst.stop();\n                }\n              } catch (err) {\n                _iterator2.e(err);\n              } finally {\n                _iterator2.f();\n              }\n            } catch (e) {}\n          });\n        })[\"catch\"](function (err) {\n          Janus.error(err);\n          callback([]);\n        });\n      } else {\n        Janus.warn(\"navigator.mediaDevices unavailable\");\n        callback([]);\n      }\n    }; // Helper methods to attach/reattach a stream to a video element (previously part of adapter.js)\n\n\n    Janus.attachMediaStream = function (element, stream) {\n      try {\n        element.srcObject = stream;\n      } catch (e) {\n        try {\n          element.src = URL.createObjectURL(stream);\n        } catch (e) {\n          Janus.error(\"Error attaching stream to element\");\n        }\n      }\n    };\n\n    Janus.reattachMediaStream = function (to, from) {\n      try {\n        to.srcObject = from.srcObject;\n      } catch (e) {\n        try {\n          to.src = from.src;\n        } catch (e) {\n          Janus.error(\"Error reattaching stream to element\");\n        }\n      }\n    }; // Detect tab close: make sure we don't loose existing onbeforeunload handlers\n    // (note: for iOS we need to subscribe to a different event, 'pagehide', see\n    // https://gist.github.com/thehunmonkgroup/6bee8941a49b86be31a787fe8f4b8cfe)\n\n\n    var iOS = ['iPad', 'iPhone', 'iPod'].indexOf(navigator.platform) >= 0;\n    var eventName = iOS ? 'pagehide' : 'beforeunload';\n    var oldOBF = window[\"on\" + eventName];\n    window.addEventListener(eventName, function (event) {\n      Janus.log(\"Closing window\");\n\n      for (var s in Janus.sessions) {\n        if (Janus.sessions[s] && Janus.sessions[s].destroyOnUnload) {\n          Janus.log(\"Destroying session \" + s);\n          Janus.sessions[s].destroy({\n            unload: true,\n            notifyDestroyed: false\n          });\n        }\n      }\n\n      if (oldOBF && typeof oldOBF == \"function\") {\n        oldOBF();\n      }\n    }); // If this is a Safari Technology Preview, check if VP8 is supported\n\n    Janus.safariVp8 = false;\n\n    if (Janus.webRTCAdapter.browserDetails.browser === 'safari' && Janus.webRTCAdapter.browserDetails.version >= 605) {\n      // Let's see if RTCRtpSender.getCapabilities() is there\n      if (RTCRtpSender && RTCRtpSender.getCapabilities && RTCRtpSender.getCapabilities(\"video\") && RTCRtpSender.getCapabilities(\"video\").codecs && RTCRtpSender.getCapabilities(\"video\").codecs.length) {\n        var _iterator3 = _createForOfIteratorHelper(RTCRtpSender.getCapabilities(\"video\").codecs),\n            _step3;\n\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var codec = _step3.value;\n\n            if (codec && codec.mimeType && codec.mimeType.toLowerCase() === \"video/vp8\") {\n              Janus.safariVp8 = true;\n              break;\n            }\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n\n        if (Janus.safariVp8) {\n          Janus.log(\"This version of Safari supports VP8\");\n        } else {\n          Janus.warn(\"This version of Safari does NOT support VP8: if you're using a Technology Preview, \" + \"try enabling the 'WebRTC VP8 codec' setting in the 'Experimental Features' Develop menu\");\n        }\n      } else {\n        // We do it in a very ugly way, as there's no alternative...\n        // We create a PeerConnection to see if VP8 is in an offer\n        var testpc = new RTCPeerConnection({});\n        testpc.createOffer({\n          offerToReceiveVideo: true\n        }).then(function (offer) {\n          Janus.safariVp8 = offer.sdp.indexOf(\"VP8\") !== -1;\n\n          if (Janus.safariVp8) {\n            Janus.log(\"This version of Safari supports VP8\");\n          } else {\n            Janus.warn(\"This version of Safari does NOT support VP8: if you're using a Technology Preview, \" + \"try enabling the 'WebRTC VP8 codec' setting in the 'Experimental Features' Develop menu\");\n          }\n\n          testpc.close();\n          testpc = null;\n        });\n      }\n    } // Check if this browser supports Unified Plan and transceivers\n    // Based on https://codepen.io/anon/pen/ZqLwWV?editors=0010\n\n\n    Janus.unifiedPlan = false;\n\n    if (Janus.webRTCAdapter.browserDetails.browser === 'firefox' && Janus.webRTCAdapter.browserDetails.version >= 59) {\n      // Firefox definitely does, starting from version 59\n      Janus.unifiedPlan = true;\n    } else if (Janus.webRTCAdapter.browserDetails.browser === 'chrome' && Janus.webRTCAdapter.browserDetails.version < 72) {\n      // Chrome does, but it's only usable from version 72 on\n      Janus.unifiedPlan = false;\n    } else if (!window.RTCRtpTransceiver || !('currentDirection' in RTCRtpTransceiver.prototype)) {\n      // Safari supports addTransceiver() but not Unified Plan when\n      // currentDirection is not defined (see codepen above).\n      Janus.unifiedPlan = false;\n    } else {\n      // Check if addTransceiver() throws an exception\n      var tempPc = new RTCPeerConnection();\n\n      try {\n        tempPc.addTransceiver('audio');\n        Janus.unifiedPlan = true;\n      } catch (e) {}\n\n      tempPc.close();\n    }\n\n    Janus.initDone = true;\n    options.callback();\n  }\n}; // Helper method to check whether WebRTC is supported by this browser\n\n\nJanus.isWebrtcSupported = function () {\n  return !!window.RTCPeerConnection;\n}; // Helper method to check whether devices can be accessed by this browser (e.g., not possible via plain HTTP)\n\n\nJanus.isGetUserMediaAvailable = function () {\n  return navigator.mediaDevices && navigator.mediaDevices.getUserMedia;\n}; // Helper method to create random identifiers (e.g., transaction)\n\n\nJanus.randomString = function (len) {\n  var charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  var randomString = '';\n\n  for (var i = 0; i < len; i++) {\n    var randomPoz = Math.floor(Math.random() * charSet.length);\n    randomString += charSet.substring(randomPoz, randomPoz + 1);\n  }\n\n  return randomString;\n};\n\nfunction Janus(gatewayCallbacks) {\n  gatewayCallbacks = gatewayCallbacks || {};\n  gatewayCallbacks.success = typeof gatewayCallbacks.success == \"function\" ? gatewayCallbacks.success : Janus.noop;\n  gatewayCallbacks.error = typeof gatewayCallbacks.error == \"function\" ? gatewayCallbacks.error : Janus.noop;\n  gatewayCallbacks.destroyed = typeof gatewayCallbacks.destroyed == \"function\" ? gatewayCallbacks.destroyed : Janus.noop;\n\n  if (!Janus.initDone) {\n    gatewayCallbacks.error(\"Library not initialized\");\n    return {};\n  }\n\n  if (!Janus.isWebrtcSupported()) {\n    gatewayCallbacks.error(\"WebRTC not supported by this browser\");\n    return {};\n  }\n\n  Janus.log(\"Library initialized: \" + Janus.initDone);\n\n  if (!gatewayCallbacks.server) {\n    gatewayCallbacks.error(\"Invalid server url\");\n    return {};\n  }\n\n  var websockets = false;\n  var ws = null;\n  var wsHandlers = {};\n  var wsKeepaliveTimeoutId = null;\n  var servers = null;\n  var serversIndex = 0;\n  var server = gatewayCallbacks.server;\n\n  if (Janus.isArray(server)) {\n    Janus.log(\"Multiple servers provided (\" + server.length + \"), will use the first that works\");\n    server = null;\n    servers = gatewayCallbacks.server;\n    Janus.debug(servers);\n  } else {\n    if (server.indexOf(\"ws\") === 0) {\n      websockets = true;\n      Janus.log(\"Using WebSockets to contact Janus: \" + server);\n    } else {\n      websockets = false;\n      Janus.log(\"Using REST API to contact Janus: \" + server);\n    }\n  }\n\n  var iceServers = gatewayCallbacks.iceServers || [{\n    urls: \"stun:stun.l.google.com:19302\"\n  }];\n  var iceTransportPolicy = gatewayCallbacks.iceTransportPolicy;\n  var bundlePolicy = gatewayCallbacks.bundlePolicy; // Whether IPv6 candidates should be gathered\n\n  var ipv6Support = gatewayCallbacks.ipv6 === true; // Whether we should enable the withCredentials flag for XHR requests\n\n  var withCredentials = false;\n  if (gatewayCallbacks.withCredentials !== undefined && gatewayCallbacks.withCredentials !== null) withCredentials = gatewayCallbacks.withCredentials === true; // Optional max events\n\n  var maxev = 10;\n  if (gatewayCallbacks.max_poll_events !== undefined && gatewayCallbacks.max_poll_events !== null) maxev = gatewayCallbacks.max_poll_events;\n  if (maxev < 1) maxev = 1; // Token to use (only if the token based authentication mechanism is enabled)\n\n  var token = null;\n  if (gatewayCallbacks.token !== undefined && gatewayCallbacks.token !== null) token = gatewayCallbacks.token; // API secret to use (only if the shared API secret is enabled)\n\n  var apisecret = null;\n  if (gatewayCallbacks.apisecret !== undefined && gatewayCallbacks.apisecret !== null) apisecret = gatewayCallbacks.apisecret; // Whether we should destroy this session when onbeforeunload is called\n\n  this.destroyOnUnload = true;\n  if (gatewayCallbacks.destroyOnUnload !== undefined && gatewayCallbacks.destroyOnUnload !== null) this.destroyOnUnload = gatewayCallbacks.destroyOnUnload === true; // Some timeout-related values\n\n  var keepAlivePeriod = 25000;\n  if (gatewayCallbacks.keepAlivePeriod !== undefined && gatewayCallbacks.keepAlivePeriod !== null) keepAlivePeriod = gatewayCallbacks.keepAlivePeriod;\n  if (isNaN(keepAlivePeriod)) keepAlivePeriod = 25000;\n  var longPollTimeout = 60000;\n  if (gatewayCallbacks.longPollTimeout !== undefined && gatewayCallbacks.longPollTimeout !== null) longPollTimeout = gatewayCallbacks.longPollTimeout;\n  if (isNaN(longPollTimeout)) longPollTimeout = 60000; // overrides for default maxBitrate values for simulcasting\n\n  function getMaxBitrates(simulcastMaxBitrates) {\n    var maxBitrates = {\n      high: 900000,\n      medium: 300000,\n      low: 100000\n    };\n\n    if (simulcastMaxBitrates !== undefined && simulcastMaxBitrates !== null) {\n      if (simulcastMaxBitrates.high) maxBitrates.high = simulcastMaxBitrates.high;\n      if (simulcastMaxBitrates.medium) maxBitrates.medium = simulcastMaxBitrates.medium;\n      if (simulcastMaxBitrates.low) maxBitrates.low = simulcastMaxBitrates.low;\n    }\n\n    return maxBitrates;\n  }\n\n  var connected = false;\n  var sessionId = null;\n  var pluginHandles = {};\n  var that = this;\n  var retries = 0;\n  var transactions = {};\n  createSession(gatewayCallbacks); // Public methods\n\n  this.getServer = function () {\n    return server;\n  };\n\n  this.isConnected = function () {\n    return connected;\n  };\n\n  this.reconnect = function (callbacks) {\n    callbacks = callbacks || {};\n    callbacks.success = typeof callbacks.success == \"function\" ? callbacks.success : Janus.noop;\n    callbacks.error = typeof callbacks.error == \"function\" ? callbacks.error : Janus.noop;\n    callbacks[\"reconnect\"] = true;\n    createSession(callbacks);\n  };\n\n  this.getSessionId = function () {\n    return sessionId;\n  };\n\n  this.destroy = function (callbacks) {\n    destroySession(callbacks);\n  };\n\n  this.attach = function (callbacks) {\n    createHandle(callbacks);\n  };\n\n  function eventHandler() {\n    if (sessionId == null) return;\n    Janus.debug('Long poll...');\n\n    if (!connected) {\n      Janus.warn(\"Is the server down? (connected=false)\");\n      return;\n    }\n\n    var longpoll = server + \"/\" + sessionId + \"?rid=\" + new Date().getTime();\n    if (maxev) longpoll = longpoll + \"&maxev=\" + maxev;\n    if (token) longpoll = longpoll + \"&token=\" + encodeURIComponent(token);\n    if (apisecret) longpoll = longpoll + \"&apisecret=\" + encodeURIComponent(apisecret);\n    Janus.httpAPICall(longpoll, {\n      verb: 'GET',\n      withCredentials: withCredentials,\n      success: handleEvent,\n      timeout: longPollTimeout,\n      error: function error(textStatus, errorThrown) {\n        Janus.error(textStatus + \":\", errorThrown);\n        retries++;\n\n        if (retries > 3) {\n          // Did we just lose the server? :-(\n          connected = false;\n          gatewayCallbacks.error(\"Lost connection to the server (is it down?)\");\n          return;\n        }\n\n        eventHandler();\n      }\n    });\n  } // Private event handler: this will trigger plugin callbacks, if set\n\n\n  function handleEvent(json, skipTimeout) {\n    retries = 0;\n    if (!websockets && sessionId !== undefined && sessionId !== null && skipTimeout !== true) eventHandler();\n\n    if (!websockets && Janus.isArray(json)) {\n      // We got an array: it means we passed a maxev > 1, iterate on all objects\n      for (var i = 0; i < json.length; i++) {\n        handleEvent(json[i], true);\n      }\n\n      return;\n    }\n\n    if (json[\"janus\"] === \"keepalive\") {\n      // Nothing happened\n      Janus.vdebug(\"Got a keepalive on session \" + sessionId);\n      return;\n    } else if (json[\"janus\"] === \"ack\") {\n      // Just an ack, we can probably ignore\n      Janus.debug(\"Got an ack on session \" + sessionId);\n      Janus.debug(json);\n      var transaction = json[\"transaction\"];\n\n      if (transaction) {\n        var reportSuccess = transactions[transaction];\n        if (reportSuccess) reportSuccess(json);\n        delete transactions[transaction];\n      }\n\n      return;\n    } else if (json[\"janus\"] === \"success\") {\n      // Success!\n      Janus.debug(\"Got a success on session \" + sessionId);\n      Janus.debug(json);\n      var transaction = json[\"transaction\"];\n\n      if (transaction) {\n        var reportSuccess = transactions[transaction];\n        if (reportSuccess) reportSuccess(json);\n        delete transactions[transaction];\n      }\n\n      return;\n    } else if (json[\"janus\"] === \"trickle\") {\n      // We got a trickle candidate from Janus\n      var sender = json[\"sender\"];\n\n      if (!sender) {\n        Janus.warn(\"Missing sender...\");\n        return;\n      }\n\n      var pluginHandle = pluginHandles[sender];\n\n      if (!pluginHandle) {\n        Janus.debug(\"This handle is not attached to this session\");\n        return;\n      }\n\n      var candidate = json[\"candidate\"];\n      Janus.debug(\"Got a trickled candidate on session \" + sessionId);\n      Janus.debug(candidate);\n      var config = pluginHandle.webrtcStuff;\n\n      if (config.pc && config.remoteSdp) {\n        // Add candidate right now\n        Janus.debug(\"Adding remote candidate:\", candidate);\n\n        if (!candidate || candidate.completed === true) {\n          // end-of-candidates\n          config.pc.addIceCandidate(Janus.endOfCandidates);\n        } else {\n          // New candidate\n          config.pc.addIceCandidate(candidate);\n        }\n      } else {\n        // We didn't do setRemoteDescription (trickle got here before the offer?)\n        Janus.debug(\"We didn't do setRemoteDescription (trickle got here before the offer?), caching candidate\");\n        if (!config.candidates) config.candidates = [];\n        config.candidates.push(candidate);\n        Janus.debug(config.candidates);\n      }\n    } else if (json[\"janus\"] === \"webrtcup\") {\n      // The PeerConnection with the server is up! Notify this\n      Janus.debug(\"Got a webrtcup event on session \" + sessionId);\n      Janus.debug(json);\n      var sender = json[\"sender\"];\n\n      if (!sender) {\n        Janus.warn(\"Missing sender...\");\n        return;\n      }\n\n      var pluginHandle = pluginHandles[sender];\n\n      if (!pluginHandle) {\n        Janus.debug(\"This handle is not attached to this session\");\n        return;\n      }\n\n      pluginHandle.webrtcState(true);\n      return;\n    } else if (json[\"janus\"] === \"hangup\") {\n      // A plugin asked the core to hangup a PeerConnection on one of our handles\n      Janus.debug(\"Got a hangup event on session \" + sessionId);\n      Janus.debug(json);\n      var sender = json[\"sender\"];\n\n      if (!sender) {\n        Janus.warn(\"Missing sender...\");\n        return;\n      }\n\n      var pluginHandle = pluginHandles[sender];\n\n      if (!pluginHandle) {\n        Janus.debug(\"This handle is not attached to this session\");\n        return;\n      }\n\n      pluginHandle.webrtcState(false, json[\"reason\"]);\n      pluginHandle.hangup();\n    } else if (json[\"janus\"] === \"detached\") {\n      // A plugin asked the core to detach one of our handles\n      Janus.debug(\"Got a detached event on session \" + sessionId);\n      Janus.debug(json);\n      var sender = json[\"sender\"];\n\n      if (!sender) {\n        Janus.warn(\"Missing sender...\");\n        return;\n      }\n\n      var pluginHandle = pluginHandles[sender];\n\n      if (!pluginHandle) {\n        // Don't warn here because destroyHandle causes this situation.\n        return;\n      }\n\n      pluginHandle.detached = true;\n      pluginHandle.ondetached();\n      pluginHandle.detach();\n    } else if (json[\"janus\"] === \"media\") {\n      // Media started/stopped flowing\n      Janus.debug(\"Got a media event on session \" + sessionId);\n      Janus.debug(json);\n      var sender = json[\"sender\"];\n\n      if (!sender) {\n        Janus.warn(\"Missing sender...\");\n        return;\n      }\n\n      var pluginHandle = pluginHandles[sender];\n\n      if (!pluginHandle) {\n        Janus.debug(\"This handle is not attached to this session\");\n        return;\n      }\n\n      pluginHandle.mediaState(json[\"type\"], json[\"receiving\"]);\n    } else if (json[\"janus\"] === \"slowlink\") {\n      Janus.debug(\"Got a slowlink event on session \" + sessionId);\n      Janus.debug(json); // Trouble uplink or downlink\n\n      var sender = json[\"sender\"];\n\n      if (!sender) {\n        Janus.warn(\"Missing sender...\");\n        return;\n      }\n\n      var pluginHandle = pluginHandles[sender];\n\n      if (!pluginHandle) {\n        Janus.debug(\"This handle is not attached to this session\");\n        return;\n      }\n\n      pluginHandle.slowLink(json[\"uplink\"], json[\"lost\"]);\n    } else if (json[\"janus\"] === \"error\") {\n      // Oops, something wrong happened\n      Janus.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason); // FIXME\n\n      Janus.debug(json);\n      var transaction = json[\"transaction\"];\n\n      if (transaction) {\n        var reportSuccess = transactions[transaction];\n\n        if (reportSuccess) {\n          reportSuccess(json);\n        }\n\n        delete transactions[transaction];\n      }\n\n      return;\n    } else if (json[\"janus\"] === \"event\") {\n      Janus.debug(\"Got a plugin event on session \" + sessionId);\n      Janus.debug(json);\n      var sender = json[\"sender\"];\n\n      if (!sender) {\n        Janus.warn(\"Missing sender...\");\n        return;\n      }\n\n      var plugindata = json[\"plugindata\"];\n\n      if (!plugindata) {\n        Janus.warn(\"Missing plugindata...\");\n        return;\n      }\n\n      Janus.debug(\"  -- Event is coming from \" + sender + \" (\" + plugindata[\"plugin\"] + \")\");\n      var data = plugindata[\"data\"];\n      Janus.debug(data);\n      var pluginHandle = pluginHandles[sender];\n\n      if (!pluginHandle) {\n        Janus.warn(\"This handle is not attached to this session\");\n        return;\n      }\n\n      var jsep = json[\"jsep\"];\n\n      if (jsep) {\n        Janus.debug(\"Handling SDP as well...\");\n        Janus.debug(jsep);\n      }\n\n      var callback = pluginHandle.onmessage;\n\n      if (callback) {\n        Janus.debug(\"Notifying application...\"); // Send to callback specified when attaching plugin handle\n\n        callback(data, jsep);\n      } else {\n        // Send to generic callback (?)\n        Janus.debug(\"No provided notification callback\");\n      }\n    } else if (json[\"janus\"] === \"timeout\") {\n      Janus.error(\"Timeout on session \" + sessionId);\n      Janus.debug(json);\n\n      if (websockets) {\n        ws.close(3504, \"Gateway timeout\");\n      }\n\n      return;\n    } else {\n      Janus.warn(\"Unknown message/event  '\" + json[\"janus\"] + \"' on session \" + sessionId);\n      Janus.debug(json);\n    }\n  } // Private helper to send keep-alive messages on WebSockets\n\n\n  function keepAlive() {\n    if (!server || !websockets || !connected) return;\n    wsKeepaliveTimeoutId = setTimeout(keepAlive, keepAlivePeriod);\n    var request = {\n      \"janus\": \"keepalive\",\n      \"session_id\": sessionId,\n      \"transaction\": Janus.randomString(12)\n    };\n    if (token) request[\"token\"] = token;\n    if (apisecret) request[\"apisecret\"] = apisecret;\n    ws.send(JSON.stringify(request));\n  } // Private method to create a session\n\n\n  function createSession(callbacks) {\n    var transaction = Janus.randomString(12);\n    var request = {\n      \"janus\": \"create\",\n      \"transaction\": transaction\n    };\n\n    if (callbacks[\"reconnect\"]) {\n      // We're reconnecting, claim the session\n      connected = false;\n      request[\"janus\"] = \"claim\";\n      request[\"session_id\"] = sessionId; // If we were using websockets, ignore the old connection\n\n      if (ws) {\n        ws.onopen = null;\n        ws.onerror = null;\n        ws.onclose = null;\n\n        if (wsKeepaliveTimeoutId) {\n          clearTimeout(wsKeepaliveTimeoutId);\n          wsKeepaliveTimeoutId = null;\n        }\n      }\n    }\n\n    if (token) request[\"token\"] = token;\n    if (apisecret) request[\"apisecret\"] = apisecret;\n\n    if (!server && Janus.isArray(servers)) {\n      // We still need to find a working server from the list we were given\n      server = servers[serversIndex];\n\n      if (server.indexOf(\"ws\") === 0) {\n        websockets = true;\n        Janus.log(\"Server #\" + (serversIndex + 1) + \": trying WebSockets to contact Janus (\" + server + \")\");\n      } else {\n        websockets = false;\n        Janus.log(\"Server #\" + (serversIndex + 1) + \": trying REST API to contact Janus (\" + server + \")\");\n      }\n    }\n\n    if (websockets) {\n      ws = Janus.newWebSocket(server, 'janus-protocol');\n      wsHandlers = {\n        'error': function error() {\n          Janus.error(\"Error connecting to the Janus WebSockets server... \" + server);\n\n          if (Janus.isArray(servers) && !callbacks[\"reconnect\"]) {\n            serversIndex++;\n\n            if (serversIndex === servers.length) {\n              // We tried all the servers the user gave us and they all failed\n              callbacks.error(\"Error connecting to any of the provided Janus servers: Is the server down?\");\n              return;\n            } // Let's try the next server\n\n\n            server = null;\n            setTimeout(function () {\n              createSession(callbacks);\n            }, 200);\n            return;\n          }\n\n          callbacks.error(\"Error connecting to the Janus WebSockets server: Is the server down?\");\n        },\n        'open': function open() {\n          // We need to be notified about the success\n          transactions[transaction] = function (json) {\n            Janus.debug(json);\n\n            if (json[\"janus\"] !== \"success\") {\n              Janus.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason); // FIXME\n\n              callbacks.error(json[\"error\"].reason);\n              return;\n            }\n\n            wsKeepaliveTimeoutId = setTimeout(keepAlive, keepAlivePeriod);\n            connected = true;\n            sessionId = json[\"session_id\"] ? json[\"session_id\"] : json.data[\"id\"];\n\n            if (callbacks[\"reconnect\"]) {\n              Janus.log(\"Claimed session: \" + sessionId);\n            } else {\n              Janus.log(\"Created session: \" + sessionId);\n            }\n\n            Janus.sessions[sessionId] = that;\n            callbacks.success();\n          };\n\n          ws.send(JSON.stringify(request));\n        },\n        'message': function message(event) {\n          handleEvent(JSON.parse(event.data));\n        },\n        'close': function close() {\n          if (!server || !connected) {\n            return;\n          }\n\n          connected = false; // FIXME What if this is called when the page is closed?\n\n          gatewayCallbacks.error(\"Lost connection to the server (is it down?)\");\n        }\n      };\n\n      for (var eventName in wsHandlers) {\n        ws.addEventListener(eventName, wsHandlers[eventName]);\n      }\n\n      return;\n    }\n\n    Janus.httpAPICall(server, {\n      verb: 'POST',\n      withCredentials: withCredentials,\n      body: request,\n      success: function success(json) {\n        Janus.debug(json);\n\n        if (json[\"janus\"] !== \"success\") {\n          Janus.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason); // FIXME\n\n          callbacks.error(json[\"error\"].reason);\n          return;\n        }\n\n        connected = true;\n        sessionId = json[\"session_id\"] ? json[\"session_id\"] : json.data[\"id\"];\n\n        if (callbacks[\"reconnect\"]) {\n          Janus.log(\"Claimed session: \" + sessionId);\n        } else {\n          Janus.log(\"Created session: \" + sessionId);\n        }\n\n        Janus.sessions[sessionId] = that;\n        eventHandler();\n        callbacks.success();\n      },\n      error: function error(textStatus, errorThrown) {\n        Janus.error(textStatus + \":\", errorThrown); // FIXME\n\n        if (Janus.isArray(servers) && !callbacks[\"reconnect\"]) {\n          serversIndex++;\n\n          if (serversIndex === servers.length) {\n            // We tried all the servers the user gave us and they all failed\n            callbacks.error(\"Error connecting to any of the provided Janus servers: Is the server down?\");\n            return;\n          } // Let's try the next server\n\n\n          server = null;\n          setTimeout(function () {\n            createSession(callbacks);\n          }, 200);\n          return;\n        }\n\n        if (errorThrown === \"\") callbacks.error(textStatus + \": Is the server down?\");else callbacks.error(textStatus + \": \" + errorThrown);\n      }\n    });\n  } // Private method to destroy a session\n\n\n  function destroySession(callbacks) {\n    callbacks = callbacks || {}; // FIXME This method triggers a success even when we fail\n\n    callbacks.success = typeof callbacks.success == \"function\" ? callbacks.success : Janus.noop;\n    callbacks.error = typeof callbacks.error == \"function\" ? callbacks.error : Janus.noop;\n    var unload = callbacks.unload === true;\n    var notifyDestroyed = true;\n    if (callbacks.notifyDestroyed !== undefined && callbacks.notifyDestroyed !== null) notifyDestroyed = callbacks.notifyDestroyed === true;\n    var cleanupHandles = callbacks.cleanupHandles === true;\n    Janus.log(\"Destroying session \" + sessionId + \" (unload=\" + unload + \")\");\n\n    if (!sessionId) {\n      Janus.warn(\"No session to destroy\");\n      callbacks.success();\n      if (notifyDestroyed) gatewayCallbacks.destroyed();\n      return;\n    }\n\n    if (cleanupHandles) {\n      for (var handleId in pluginHandles) {\n        destroyHandle(handleId, {\n          noRequest: true\n        });\n      }\n    }\n\n    if (!connected) {\n      Janus.warn(\"Is the server down? (connected=false)\");\n      sessionId = null;\n      callbacks.success();\n      return;\n    } // No need to destroy all handles first, Janus will do that itself\n\n\n    var request = {\n      \"janus\": \"destroy\",\n      \"transaction\": Janus.randomString(12)\n    };\n    if (token) request[\"token\"] = token;\n    if (apisecret) request[\"apisecret\"] = apisecret;\n\n    if (unload) {\n      // We're unloading the page: use sendBeacon for HTTP instead,\n      // or just close the WebSocket connection if we're using that\n      if (websockets) {\n        ws.onclose = null;\n        ws.close();\n        ws = null;\n      } else {\n        navigator.sendBeacon(server + \"/\" + sessionId, JSON.stringify(request));\n      }\n\n      Janus.log(\"Destroyed session:\");\n      sessionId = null;\n      connected = false;\n      callbacks.success();\n      if (notifyDestroyed) gatewayCallbacks.destroyed();\n      return;\n    }\n\n    if (websockets) {\n      request[\"session_id\"] = sessionId;\n\n      var unbindWebSocket = function unbindWebSocket() {\n        for (var eventName in wsHandlers) {\n          ws.removeEventListener(eventName, wsHandlers[eventName]);\n        }\n\n        ws.removeEventListener('message', onUnbindMessage);\n        ws.removeEventListener('error', onUnbindError);\n\n        if (wsKeepaliveTimeoutId) {\n          clearTimeout(wsKeepaliveTimeoutId);\n        }\n\n        ws.close();\n      };\n\n      var onUnbindMessage = function onUnbindMessage(event) {\n        var data = JSON.parse(event.data);\n\n        if (data.session_id == request.session_id && data.transaction == request.transaction) {\n          unbindWebSocket();\n          callbacks.success();\n          if (notifyDestroyed) gatewayCallbacks.destroyed();\n        }\n      };\n\n      var onUnbindError = function onUnbindError(event) {\n        unbindWebSocket();\n        callbacks.error(\"Failed to destroy the server: Is the server down?\");\n        if (notifyDestroyed) gatewayCallbacks.destroyed();\n      };\n\n      ws.addEventListener('message', onUnbindMessage);\n      ws.addEventListener('error', onUnbindError);\n      ws.send(JSON.stringify(request));\n      return;\n    }\n\n    Janus.httpAPICall(server + \"/\" + sessionId, {\n      verb: 'POST',\n      withCredentials: withCredentials,\n      body: request,\n      success: function success(json) {\n        Janus.log(\"Destroyed session:\");\n        Janus.debug(json);\n        sessionId = null;\n        connected = false;\n\n        if (json[\"janus\"] !== \"success\") {\n          Janus.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason); // FIXME\n        }\n\n        callbacks.success();\n        if (notifyDestroyed) gatewayCallbacks.destroyed();\n      },\n      error: function error(textStatus, errorThrown) {\n        Janus.error(textStatus + \":\", errorThrown); // FIXME\n        // Reset everything anyway\n\n        sessionId = null;\n        connected = false;\n        callbacks.success();\n        if (notifyDestroyed) gatewayCallbacks.destroyed();\n      }\n    });\n  } // Private method to create a plugin handle\n\n\n  function createHandle(callbacks) {\n    callbacks = callbacks || {};\n    callbacks.success = typeof callbacks.success == \"function\" ? callbacks.success : Janus.noop;\n    callbacks.error = typeof callbacks.error == \"function\" ? callbacks.error : Janus.noop;\n    callbacks.consentDialog = typeof callbacks.consentDialog == \"function\" ? callbacks.consentDialog : Janus.noop;\n    callbacks.iceState = typeof callbacks.iceState == \"function\" ? callbacks.iceState : Janus.noop;\n    callbacks.mediaState = typeof callbacks.mediaState == \"function\" ? callbacks.mediaState : Janus.noop;\n    callbacks.webrtcState = typeof callbacks.webrtcState == \"function\" ? callbacks.webrtcState : Janus.noop;\n    callbacks.slowLink = typeof callbacks.slowLink == \"function\" ? callbacks.slowLink : Janus.noop;\n    callbacks.onmessage = typeof callbacks.onmessage == \"function\" ? callbacks.onmessage : Janus.noop;\n    callbacks.onlocalstream = typeof callbacks.onlocalstream == \"function\" ? callbacks.onlocalstream : Janus.noop;\n    callbacks.onremotestream = typeof callbacks.onremotestream == \"function\" ? callbacks.onremotestream : Janus.noop;\n    callbacks.ondata = typeof callbacks.ondata == \"function\" ? callbacks.ondata : Janus.noop;\n    callbacks.ondataopen = typeof callbacks.ondataopen == \"function\" ? callbacks.ondataopen : Janus.noop;\n    callbacks.oncleanup = typeof callbacks.oncleanup == \"function\" ? callbacks.oncleanup : Janus.noop;\n    callbacks.ondetached = typeof callbacks.ondetached == \"function\" ? callbacks.ondetached : Janus.noop;\n\n    if (!connected) {\n      Janus.warn(\"Is the server down? (connected=false)\");\n      callbacks.error(\"Is the server down? (connected=false)\");\n      return;\n    }\n\n    var plugin = callbacks.plugin;\n\n    if (!plugin) {\n      Janus.error(\"Invalid plugin\");\n      callbacks.error(\"Invalid plugin\");\n      return;\n    }\n\n    var opaqueId = callbacks.opaqueId;\n    var handleToken = callbacks.token ? callbacks.token : token;\n    var transaction = Janus.randomString(12);\n    var request = {\n      \"janus\": \"attach\",\n      \"plugin\": plugin,\n      \"opaque_id\": opaqueId,\n      \"transaction\": transaction\n    };\n    if (handleToken) request[\"token\"] = handleToken;\n    if (apisecret) request[\"apisecret\"] = apisecret;\n\n    if (websockets) {\n      transactions[transaction] = function (json) {\n        Janus.debug(json);\n\n        if (json[\"janus\"] !== \"success\") {\n          Janus.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason); // FIXME\n\n          callbacks.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason);\n          return;\n        }\n\n        var handleId = json.data[\"id\"];\n        Janus.log(\"Created handle: \" + handleId);\n        var pluginHandle = {\n          session: that,\n          plugin: plugin,\n          id: handleId,\n          token: handleToken,\n          detached: false,\n          webrtcStuff: {\n            started: false,\n            myStream: null,\n            streamExternal: false,\n            remoteStream: null,\n            mySdp: null,\n            mediaConstraints: null,\n            pc: null,\n            dataChannel: {},\n            dtmfSender: null,\n            trickle: true,\n            iceDone: false,\n            volume: {\n              value: null,\n              timer: null\n            },\n            bitrate: {\n              value: null,\n              bsnow: null,\n              bsbefore: null,\n              tsnow: null,\n              tsbefore: null,\n              timer: null\n            }\n          },\n          getId: function getId() {\n            return handleId;\n          },\n          getPlugin: function getPlugin() {\n            return plugin;\n          },\n          getVolume: function getVolume() {\n            return _getVolume(handleId, true);\n          },\n          getRemoteVolume: function getRemoteVolume() {\n            return _getVolume(handleId, true);\n          },\n          getLocalVolume: function getLocalVolume() {\n            return _getVolume(handleId, false);\n          },\n          isAudioMuted: function isAudioMuted() {\n            return isMuted(handleId, false);\n          },\n          muteAudio: function muteAudio() {\n            return mute(handleId, false, true);\n          },\n          unmuteAudio: function unmuteAudio() {\n            return mute(handleId, false, false);\n          },\n          isVideoMuted: function isVideoMuted() {\n            return isMuted(handleId, true);\n          },\n          muteVideo: function muteVideo() {\n            return mute(handleId, true, true);\n          },\n          unmuteVideo: function unmuteVideo() {\n            return mute(handleId, true, false);\n          },\n          getBitrate: function getBitrate() {\n            return _getBitrate(handleId);\n          },\n          send: function send(callbacks) {\n            sendMessage(handleId, callbacks);\n          },\n          data: function data(callbacks) {\n            sendData(handleId, callbacks);\n          },\n          dtmf: function dtmf(callbacks) {\n            sendDtmf(handleId, callbacks);\n          },\n          consentDialog: callbacks.consentDialog,\n          iceState: callbacks.iceState,\n          mediaState: callbacks.mediaState,\n          webrtcState: callbacks.webrtcState,\n          slowLink: callbacks.slowLink,\n          onmessage: callbacks.onmessage,\n          createOffer: function createOffer(callbacks) {\n            prepareWebrtc(handleId, true, callbacks);\n          },\n          createAnswer: function createAnswer(callbacks) {\n            prepareWebrtc(handleId, false, callbacks);\n          },\n          handleRemoteJsep: function handleRemoteJsep(callbacks) {\n            prepareWebrtcPeer(handleId, callbacks);\n          },\n          onlocalstream: callbacks.onlocalstream,\n          onremotestream: callbacks.onremotestream,\n          ondata: callbacks.ondata,\n          ondataopen: callbacks.ondataopen,\n          oncleanup: callbacks.oncleanup,\n          ondetached: callbacks.ondetached,\n          hangup: function hangup(sendRequest) {\n            cleanupWebrtc(handleId, sendRequest === true);\n          },\n          detach: function detach(callbacks) {\n            destroyHandle(handleId, callbacks);\n          }\n        };\n        pluginHandles[handleId] = pluginHandle;\n        callbacks.success(pluginHandle);\n      };\n\n      request[\"session_id\"] = sessionId;\n      ws.send(JSON.stringify(request));\n      return;\n    }\n\n    Janus.httpAPICall(server + \"/\" + sessionId, {\n      verb: 'POST',\n      withCredentials: withCredentials,\n      body: request,\n      success: function success(json) {\n        Janus.debug(json);\n\n        if (json[\"janus\"] !== \"success\") {\n          Janus.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason); // FIXME\n\n          callbacks.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason);\n          return;\n        }\n\n        var handleId = json.data[\"id\"];\n        Janus.log(\"Created handle: \" + handleId);\n        var pluginHandle = {\n          session: that,\n          plugin: plugin,\n          id: handleId,\n          token: handleToken,\n          detached: false,\n          webrtcStuff: {\n            started: false,\n            myStream: null,\n            streamExternal: false,\n            remoteStream: null,\n            mySdp: null,\n            mediaConstraints: null,\n            pc: null,\n            dataChannel: {},\n            dtmfSender: null,\n            trickle: true,\n            iceDone: false,\n            volume: {\n              value: null,\n              timer: null\n            },\n            bitrate: {\n              value: null,\n              bsnow: null,\n              bsbefore: null,\n              tsnow: null,\n              tsbefore: null,\n              timer: null\n            }\n          },\n          getId: function getId() {\n            return handleId;\n          },\n          getPlugin: function getPlugin() {\n            return plugin;\n          },\n          getVolume: function getVolume() {\n            return _getVolume(handleId, true);\n          },\n          getRemoteVolume: function getRemoteVolume() {\n            return _getVolume(handleId, true);\n          },\n          getLocalVolume: function getLocalVolume() {\n            return _getVolume(handleId, false);\n          },\n          isAudioMuted: function isAudioMuted() {\n            return isMuted(handleId, false);\n          },\n          muteAudio: function muteAudio() {\n            return mute(handleId, false, true);\n          },\n          unmuteAudio: function unmuteAudio() {\n            return mute(handleId, false, false);\n          },\n          isVideoMuted: function isVideoMuted() {\n            return isMuted(handleId, true);\n          },\n          muteVideo: function muteVideo() {\n            return mute(handleId, true, true);\n          },\n          unmuteVideo: function unmuteVideo() {\n            return mute(handleId, true, false);\n          },\n          getBitrate: function getBitrate() {\n            return _getBitrate(handleId);\n          },\n          send: function send(callbacks) {\n            sendMessage(handleId, callbacks);\n          },\n          data: function data(callbacks) {\n            sendData(handleId, callbacks);\n          },\n          dtmf: function dtmf(callbacks) {\n            sendDtmf(handleId, callbacks);\n          },\n          consentDialog: callbacks.consentDialog,\n          iceState: callbacks.iceState,\n          mediaState: callbacks.mediaState,\n          webrtcState: callbacks.webrtcState,\n          slowLink: callbacks.slowLink,\n          onmessage: callbacks.onmessage,\n          createOffer: function createOffer(callbacks) {\n            prepareWebrtc(handleId, true, callbacks);\n          },\n          createAnswer: function createAnswer(callbacks) {\n            prepareWebrtc(handleId, false, callbacks);\n          },\n          handleRemoteJsep: function handleRemoteJsep(callbacks) {\n            prepareWebrtcPeer(handleId, callbacks);\n          },\n          onlocalstream: callbacks.onlocalstream,\n          onremotestream: callbacks.onremotestream,\n          ondata: callbacks.ondata,\n          ondataopen: callbacks.ondataopen,\n          oncleanup: callbacks.oncleanup,\n          ondetached: callbacks.ondetached,\n          hangup: function hangup(sendRequest) {\n            cleanupWebrtc(handleId, sendRequest === true);\n          },\n          detach: function detach(callbacks) {\n            destroyHandle(handleId, callbacks);\n          }\n        };\n        pluginHandles[handleId] = pluginHandle;\n        callbacks.success(pluginHandle);\n      },\n      error: function error(textStatus, errorThrown) {\n        Janus.error(textStatus + \":\", errorThrown); // FIXME\n\n        if (errorThrown === \"\") callbacks.error(textStatus + \": Is the server down?\");else callbacks.error(textStatus + \": \" + errorThrown);\n      }\n    });\n  } // Private method to send a message\n\n\n  function sendMessage(handleId, callbacks) {\n    callbacks = callbacks || {};\n    callbacks.success = typeof callbacks.success == \"function\" ? callbacks.success : Janus.noop;\n    callbacks.error = typeof callbacks.error == \"function\" ? callbacks.error : Janus.noop;\n\n    if (!connected) {\n      Janus.warn(\"Is the server down? (connected=false)\");\n      callbacks.error(\"Is the server down? (connected=false)\");\n      return;\n    }\n\n    var pluginHandle = pluginHandles[handleId];\n\n    if (!pluginHandle || !pluginHandle.webrtcStuff) {\n      Janus.warn(\"Invalid handle\");\n      callbacks.error(\"Invalid handle\");\n      return;\n    }\n\n    var message = callbacks.message;\n    var jsep = callbacks.jsep;\n    var transaction = Janus.randomString(12);\n    var request = {\n      \"janus\": \"message\",\n      \"body\": message,\n      \"transaction\": transaction\n    };\n    if (pluginHandle.token) request[\"token\"] = pluginHandle.token;\n    if (apisecret) request[\"apisecret\"] = apisecret;\n    if (jsep) request.jsep = jsep;\n    Janus.debug(\"Sending message to plugin (handle=\" + handleId + \"):\");\n    Janus.debug(request);\n\n    if (websockets) {\n      request[\"session_id\"] = sessionId;\n      request[\"handle_id\"] = handleId;\n\n      transactions[transaction] = function (json) {\n        Janus.debug(\"Message sent!\");\n        Janus.debug(json);\n\n        if (json[\"janus\"] === \"success\") {\n          // We got a success, must have been a synchronous transaction\n          var plugindata = json[\"plugindata\"];\n\n          if (!plugindata) {\n            Janus.warn(\"Request succeeded, but missing plugindata...\");\n            callbacks.success();\n            return;\n          }\n\n          Janus.log(\"Synchronous transaction successful (\" + plugindata[\"plugin\"] + \")\");\n          var data = plugindata[\"data\"];\n          Janus.debug(data);\n          callbacks.success(data);\n          return;\n        } else if (json[\"janus\"] !== \"ack\") {\n          // Not a success and not an ack, must be an error\n          if (json[\"error\"]) {\n            Janus.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason); // FIXME\n\n            callbacks.error(json[\"error\"].code + \" \" + json[\"error\"].reason);\n          } else {\n            Janus.error(\"Unknown error\"); // FIXME\n\n            callbacks.error(\"Unknown error\");\n          }\n\n          return;\n        } // If we got here, the plugin decided to handle the request asynchronously\n\n\n        callbacks.success();\n      };\n\n      ws.send(JSON.stringify(request));\n      return;\n    }\n\n    Janus.httpAPICall(server + \"/\" + sessionId + \"/\" + handleId, {\n      verb: 'POST',\n      withCredentials: withCredentials,\n      body: request,\n      success: function success(json) {\n        Janus.debug(\"Message sent!\");\n        Janus.debug(json);\n\n        if (json[\"janus\"] === \"success\") {\n          // We got a success, must have been a synchronous transaction\n          var plugindata = json[\"plugindata\"];\n\n          if (!plugindata) {\n            Janus.warn(\"Request succeeded, but missing plugindata...\");\n            callbacks.success();\n            return;\n          }\n\n          Janus.log(\"Synchronous transaction successful (\" + plugindata[\"plugin\"] + \")\");\n          var data = plugindata[\"data\"];\n          Janus.debug(data);\n          callbacks.success(data);\n          return;\n        } else if (json[\"janus\"] !== \"ack\") {\n          // Not a success and not an ack, must be an error\n          if (json[\"error\"]) {\n            Janus.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason); // FIXME\n\n            callbacks.error(json[\"error\"].code + \" \" + json[\"error\"].reason);\n          } else {\n            Janus.error(\"Unknown error\"); // FIXME\n\n            callbacks.error(\"Unknown error\");\n          }\n\n          return;\n        } // If we got here, the plugin decided to handle the request asynchronously\n\n\n        callbacks.success();\n      },\n      error: function error(textStatus, errorThrown) {\n        Janus.error(textStatus + \":\", errorThrown); // FIXME\n\n        callbacks.error(textStatus + \": \" + errorThrown);\n      }\n    });\n  } // Private method to send a trickle candidate\n\n\n  function sendTrickleCandidate(handleId, candidate) {\n    if (!connected) {\n      Janus.warn(\"Is the server down? (connected=false)\");\n      return;\n    }\n\n    var pluginHandle = pluginHandles[handleId];\n\n    if (!pluginHandle || !pluginHandle.webrtcStuff) {\n      Janus.warn(\"Invalid handle\");\n      return;\n    }\n\n    var request = {\n      \"janus\": \"trickle\",\n      \"candidate\": candidate,\n      \"transaction\": Janus.randomString(12)\n    };\n    if (pluginHandle.token) request[\"token\"] = pluginHandle.token;\n    if (apisecret) request[\"apisecret\"] = apisecret;\n    Janus.vdebug(\"Sending trickle candidate (handle=\" + handleId + \"):\");\n    Janus.vdebug(request);\n\n    if (websockets) {\n      request[\"session_id\"] = sessionId;\n      request[\"handle_id\"] = handleId;\n      ws.send(JSON.stringify(request));\n      return;\n    }\n\n    Janus.httpAPICall(server + \"/\" + sessionId + \"/\" + handleId, {\n      verb: 'POST',\n      withCredentials: withCredentials,\n      body: request,\n      success: function success(json) {\n        Janus.vdebug(\"Candidate sent!\");\n        Janus.vdebug(json);\n\n        if (json[\"janus\"] !== \"ack\") {\n          Janus.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason); // FIXME\n\n          return;\n        }\n      },\n      error: function error(textStatus, errorThrown) {\n        Janus.error(textStatus + \":\", errorThrown); // FIXME\n      }\n    });\n  } // Private method to create a data channel\n\n\n  function createDataChannel(handleId, dclabel, incoming, pendingData) {\n    var pluginHandle = pluginHandles[handleId];\n\n    if (!pluginHandle || !pluginHandle.webrtcStuff) {\n      Janus.warn(\"Invalid handle\");\n      return;\n    }\n\n    var config = pluginHandle.webrtcStuff;\n\n    var onDataChannelMessage = function onDataChannelMessage(event) {\n      Janus.log('Received message on data channel:', event);\n      var label = event.target.label;\n      pluginHandle.ondata(event.data, label);\n    };\n\n    var onDataChannelStateChange = function onDataChannelStateChange(event) {\n      Janus.log('Received state change on data channel:', event);\n      var label = event.target.label;\n      var dcState = config.dataChannel[label] ? config.dataChannel[label].readyState : \"null\";\n      Janus.log('State change on <' + label + '> data channel: ' + dcState);\n\n      if (dcState === 'open') {\n        // Any pending messages to send?\n        if (config.dataChannel[label].pending && config.dataChannel[label].pending.length > 0) {\n          Janus.log(\"Sending pending messages on <\" + label + \">:\", config.dataChannel[label].pending.length);\n\n          var _iterator4 = _createForOfIteratorHelper(config.dataChannel[label].pending),\n              _step4;\n\n          try {\n            for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n              var data = _step4.value;\n              Janus.log(\"Sending data on data channel <\" + label + \">\");\n              Janus.debug(data);\n              config.dataChannel[label].send(data);\n            }\n          } catch (err) {\n            _iterator4.e(err);\n          } finally {\n            _iterator4.f();\n          }\n\n          config.dataChannel[label].pending = [];\n        } // Notify the open data channel\n\n\n        pluginHandle.ondataopen(label);\n      }\n    };\n\n    var onDataChannelError = function onDataChannelError(error) {\n      Janus.error('Got error on data channel:', error); // TODO\n    };\n\n    if (!incoming) {\n      // FIXME Add options (ordered, maxRetransmits, etc.)\n      config.dataChannel[dclabel] = config.pc.createDataChannel(dclabel, {\n        ordered: true\n      });\n    } else {\n      // The channel was created by Janus\n      config.dataChannel[dclabel] = incoming;\n    }\n\n    config.dataChannel[dclabel].onmessage = onDataChannelMessage;\n    config.dataChannel[dclabel].onopen = onDataChannelStateChange;\n    config.dataChannel[dclabel].onclose = onDataChannelStateChange;\n    config.dataChannel[dclabel].onerror = onDataChannelError;\n    config.dataChannel[dclabel].pending = [];\n    if (pendingData) config.dataChannel[dclabel].pending.push(pendingData);\n  } // Private method to send a data channel message\n\n\n  function sendData(handleId, callbacks) {\n    callbacks = callbacks || {};\n    callbacks.success = typeof callbacks.success == \"function\" ? callbacks.success : Janus.noop;\n    callbacks.error = typeof callbacks.error == \"function\" ? callbacks.error : Janus.noop;\n    var pluginHandle = pluginHandles[handleId];\n\n    if (!pluginHandle || !pluginHandle.webrtcStuff) {\n      Janus.warn(\"Invalid handle\");\n      callbacks.error(\"Invalid handle\");\n      return;\n    }\n\n    var config = pluginHandle.webrtcStuff;\n    var data = callbacks.text || callbacks.data;\n\n    if (!data) {\n      Janus.warn(\"Invalid data\");\n      callbacks.error(\"Invalid data\");\n      return;\n    }\n\n    var label = callbacks.label ? callbacks.label : Janus.dataChanDefaultLabel;\n\n    if (!config.dataChannel[label]) {\n      // Create new data channel and wait for it to open\n      createDataChannel(handleId, label, false, data);\n      callbacks.success();\n      return;\n    }\n\n    if (config.dataChannel[label].readyState !== \"open\") {\n      config.dataChannel[label].pending.push(data);\n      callbacks.success();\n      return;\n    }\n\n    Janus.log(\"Sending data on data channel <\" + label + \">\");\n    Janus.debug(data);\n    config.dataChannel[label].send(data);\n    callbacks.success();\n  } // Private method to send a DTMF tone\n\n\n  function sendDtmf(handleId, callbacks) {\n    callbacks = callbacks || {};\n    callbacks.success = typeof callbacks.success == \"function\" ? callbacks.success : Janus.noop;\n    callbacks.error = typeof callbacks.error == \"function\" ? callbacks.error : Janus.noop;\n    var pluginHandle = pluginHandles[handleId];\n\n    if (!pluginHandle || !pluginHandle.webrtcStuff) {\n      Janus.warn(\"Invalid handle\");\n      callbacks.error(\"Invalid handle\");\n      return;\n    }\n\n    var config = pluginHandle.webrtcStuff;\n\n    if (!config.dtmfSender) {\n      // Create the DTMF sender the proper way, if possible\n      if (config.pc) {\n        var senders = config.pc.getSenders();\n        var audioSender = senders.find(function (sender) {\n          return sender.track && sender.track.kind === 'audio';\n        });\n\n        if (!audioSender) {\n          Janus.warn(\"Invalid DTMF configuration (no audio track)\");\n          callbacks.error(\"Invalid DTMF configuration (no audio track)\");\n          return;\n        }\n\n        config.dtmfSender = audioSender.dtmf;\n\n        if (config.dtmfSender) {\n          Janus.log(\"Created DTMF Sender\");\n\n          config.dtmfSender.ontonechange = function (tone) {\n            Janus.debug(\"Sent DTMF tone: \" + tone.tone);\n          };\n        }\n      }\n\n      if (!config.dtmfSender) {\n        Janus.warn(\"Invalid DTMF configuration\");\n        callbacks.error(\"Invalid DTMF configuration\");\n        return;\n      }\n    }\n\n    var dtmf = callbacks.dtmf;\n\n    if (!dtmf) {\n      Janus.warn(\"Invalid DTMF parameters\");\n      callbacks.error(\"Invalid DTMF parameters\");\n      return;\n    }\n\n    var tones = dtmf.tones;\n\n    if (!tones) {\n      Janus.warn(\"Invalid DTMF string\");\n      callbacks.error(\"Invalid DTMF string\");\n      return;\n    }\n\n    var duration = typeof dtmf.duration === 'number' ? dtmf.duration : 500; // We choose 500ms as the default duration for a tone\n\n    var gap = typeof dtmf.gap === 'number' ? dtmf.gap : 50; // We choose 50ms as the default gap between tones\n\n    Janus.debug(\"Sending DTMF string \" + tones + \" (duration \" + duration + \"ms, gap \" + gap + \"ms)\");\n    config.dtmfSender.insertDTMF(tones, duration, gap);\n    callbacks.success();\n  } // Private method to destroy a plugin handle\n\n\n  function destroyHandle(handleId, callbacks) {\n    callbacks = callbacks || {};\n    callbacks.success = typeof callbacks.success == \"function\" ? callbacks.success : Janus.noop;\n    callbacks.error = typeof callbacks.error == \"function\" ? callbacks.error : Janus.noop;\n    var noRequest = callbacks.noRequest === true;\n    Janus.log(\"Destroying handle \" + handleId + \" (only-locally=\" + noRequest + \")\");\n    cleanupWebrtc(handleId);\n    var pluginHandle = pluginHandles[handleId];\n\n    if (!pluginHandle || pluginHandle.detached) {\n      // Plugin was already detached by Janus, calling detach again will return a handle not found error, so just exit here\n      delete pluginHandles[handleId];\n      callbacks.success();\n      return;\n    }\n\n    if (noRequest) {\n      // We're only removing the handle locally\n      delete pluginHandles[handleId];\n      callbacks.success();\n      return;\n    }\n\n    if (!connected) {\n      Janus.warn(\"Is the server down? (connected=false)\");\n      callbacks.error(\"Is the server down? (connected=false)\");\n      return;\n    }\n\n    var request = {\n      \"janus\": \"detach\",\n      \"transaction\": Janus.randomString(12)\n    };\n    if (pluginHandle.token) request[\"token\"] = pluginHandle.token;\n    if (apisecret) request[\"apisecret\"] = apisecret;\n\n    if (websockets) {\n      request[\"session_id\"] = sessionId;\n      request[\"handle_id\"] = handleId;\n      ws.send(JSON.stringify(request));\n      delete pluginHandles[handleId];\n      callbacks.success();\n      return;\n    }\n\n    Janus.httpAPICall(server + \"/\" + sessionId + \"/\" + handleId, {\n      verb: 'POST',\n      withCredentials: withCredentials,\n      body: request,\n      success: function success(json) {\n        Janus.log(\"Destroyed handle:\");\n        Janus.debug(json);\n\n        if (json[\"janus\"] !== \"success\") {\n          Janus.error(\"Ooops: \" + json[\"error\"].code + \" \" + json[\"error\"].reason); // FIXME\n        }\n\n        delete pluginHandles[handleId];\n        callbacks.success();\n      },\n      error: function error(textStatus, errorThrown) {\n        Janus.error(textStatus + \":\", errorThrown); // FIXME\n        // We cleanup anyway\n\n        delete pluginHandles[handleId];\n        callbacks.success();\n      }\n    });\n  } // WebRTC stuff\n\n\n  function streamsDone(handleId, jsep, media, callbacks, stream) {\n    var pluginHandle = pluginHandles[handleId];\n\n    if (!pluginHandle || !pluginHandle.webrtcStuff) {\n      Janus.warn(\"Invalid handle\");\n      callbacks.error(\"Invalid handle\");\n      return;\n    }\n\n    var config = pluginHandle.webrtcStuff;\n    Janus.debug(\"streamsDone:\", stream);\n\n    if (stream) {\n      Janus.debug(\"  -- Audio tracks:\", stream.getAudioTracks());\n      Janus.debug(\"  -- Video tracks:\", stream.getVideoTracks());\n    } // We're now capturing the new stream: check if we're updating or if it's a new thing\n\n\n    var addTracks = false;\n\n    if (!config.myStream || !media.update || config.streamExternal) {\n      config.myStream = stream;\n      addTracks = true;\n    } else {\n      // We only need to update the existing stream\n      if ((!media.update && isAudioSendEnabled(media) || media.update && (media.addAudio || media.replaceAudio)) && stream.getAudioTracks() && stream.getAudioTracks().length) {\n        config.myStream.addTrack(stream.getAudioTracks()[0]);\n\n        if (Janus.unifiedPlan) {\n          // Use Transceivers\n          Janus.log((media.replaceAudio ? \"Replacing\" : \"Adding\") + \" audio track:\", stream.getAudioTracks()[0]);\n          var audioTransceiver = null;\n          var transceivers = config.pc.getTransceivers();\n\n          if (transceivers && transceivers.length > 0) {\n            var _iterator5 = _createForOfIteratorHelper(transceivers),\n                _step5;\n\n            try {\n              for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n                var t = _step5.value;\n\n                if (t.sender && t.sender.track && t.sender.track.kind === \"audio\" || t.receiver && t.receiver.track && t.receiver.track.kind === \"audio\") {\n                  audioTransceiver = t;\n                  break;\n                }\n              }\n            } catch (err) {\n              _iterator5.e(err);\n            } finally {\n              _iterator5.f();\n            }\n          }\n\n          if (audioTransceiver && audioTransceiver.sender) {\n            audioTransceiver.sender.replaceTrack(stream.getAudioTracks()[0]);\n          } else {\n            config.pc.addTrack(stream.getAudioTracks()[0], stream);\n          }\n        } else {\n          Janus.log((media.replaceAudio ? \"Replacing\" : \"Adding\") + \" audio track:\", stream.getAudioTracks()[0]);\n          config.pc.addTrack(stream.getAudioTracks()[0], stream);\n        }\n      }\n\n      if ((!media.update && isVideoSendEnabled(media) || media.update && (media.addVideo || media.replaceVideo)) && stream.getVideoTracks() && stream.getVideoTracks().length) {\n        config.myStream.addTrack(stream.getVideoTracks()[0]);\n\n        if (Janus.unifiedPlan) {\n          // Use Transceivers\n          Janus.log((media.replaceVideo ? \"Replacing\" : \"Adding\") + \" video track:\", stream.getVideoTracks()[0]);\n          var videoTransceiver = null;\n          var transceivers = config.pc.getTransceivers();\n\n          if (transceivers && transceivers.length > 0) {\n            var _iterator6 = _createForOfIteratorHelper(transceivers),\n                _step6;\n\n            try {\n              for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n                var t = _step6.value;\n\n                if (t.sender && t.sender.track && t.sender.track.kind === \"video\" || t.receiver && t.receiver.track && t.receiver.track.kind === \"video\") {\n                  videoTransceiver = t;\n                  break;\n                }\n              }\n            } catch (err) {\n              _iterator6.e(err);\n            } finally {\n              _iterator6.f();\n            }\n          }\n\n          if (videoTransceiver && videoTransceiver.sender) {\n            videoTransceiver.sender.replaceTrack(stream.getVideoTracks()[0]);\n          } else {\n            config.pc.addTrack(stream.getVideoTracks()[0], stream);\n          }\n        } else {\n          Janus.log((media.replaceVideo ? \"Replacing\" : \"Adding\") + \" video track:\", stream.getVideoTracks()[0]);\n          config.pc.addTrack(stream.getVideoTracks()[0], stream);\n        }\n      }\n    } // If we still need to create a PeerConnection, let's do that\n\n\n    if (!config.pc) {\n      var pc_config = {\n        \"iceServers\": iceServers,\n        \"iceTransportPolicy\": iceTransportPolicy,\n        \"bundlePolicy\": bundlePolicy\n      };\n\n      if (Janus.webRTCAdapter.browserDetails.browser === \"chrome\") {\n        // For Chrome versions before 72, we force a plan-b semantic, and unified-plan otherwise\n        pc_config[\"sdpSemantics\"] = Janus.webRTCAdapter.browserDetails.version < 72 ? \"plan-b\" : \"unified-plan\";\n      }\n\n      var pc_constraints = {\n        \"optional\": [{\n          \"DtlsSrtpKeyAgreement\": true\n        }]\n      };\n\n      if (ipv6Support) {\n        pc_constraints.optional.push({\n          \"googIPv6\": true\n        });\n      } // Any custom constraint to add?\n\n\n      if (callbacks.rtcConstraints && _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(callbacks.rtcConstraints) === 'object') {\n        Janus.debug(\"Adding custom PeerConnection constraints:\", callbacks.rtcConstraints);\n\n        for (var i in callbacks.rtcConstraints) {\n          pc_constraints.optional.push(callbacks.rtcConstraints[i]);\n        }\n      }\n\n      if (Janus.webRTCAdapter.browserDetails.browser === \"edge\") {\n        // This is Edge, enable BUNDLE explicitly\n        pc_config.bundlePolicy = \"max-bundle\";\n      }\n\n      Janus.log(\"Creating PeerConnection\");\n      Janus.debug(pc_constraints);\n      config.pc = new RTCPeerConnection(pc_config, pc_constraints);\n      Janus.debug(config.pc);\n\n      if (config.pc.getStats) {\n        // FIXME\n        config.volume = {};\n        config.bitrate.value = \"0 kbits/sec\";\n      }\n\n      Janus.log(\"Preparing local SDP and gathering candidates (trickle=\" + config.trickle + \")\");\n\n      config.pc.oniceconnectionstatechange = function (e) {\n        if (config.pc) pluginHandle.iceState(config.pc.iceConnectionState);\n      };\n\n      config.pc.onicecandidate = function (event) {\n        if (!event.candidate || Janus.webRTCAdapter.browserDetails.browser === 'edge' && event.candidate.candidate.indexOf('endOfCandidates') > 0) {\n          Janus.log(\"End of candidates.\");\n          config.iceDone = true;\n\n          if (config.trickle === true) {\n            // Notify end of candidates\n            sendTrickleCandidate(handleId, {\n              \"completed\": true\n            });\n          } else {\n            // No trickle, time to send the complete SDP (including all candidates)\n            sendSDP(handleId, callbacks);\n          }\n        } else {\n          // JSON.stringify doesn't work on some WebRTC objects anymore\n          // See https://code.google.com/p/chromium/issues/detail?id=467366\n          var candidate = {\n            \"candidate\": event.candidate.candidate,\n            \"sdpMid\": event.candidate.sdpMid,\n            \"sdpMLineIndex\": event.candidate.sdpMLineIndex\n          };\n\n          if (config.trickle === true) {\n            // Send candidate\n            sendTrickleCandidate(handleId, candidate);\n          }\n        }\n      };\n\n      config.pc.ontrack = function (event) {\n        Janus.log(\"Handling Remote Track\");\n        Janus.debug(event);\n        if (!event.streams) return;\n        config.remoteStream = event.streams[0];\n        pluginHandle.onremotestream(config.remoteStream);\n        if (event.track.onended) return;\n        var trackMutedTimeoutId = null;\n        Janus.log(\"Adding onended callback to track:\", event.track);\n\n        event.track.onended = function (ev) {\n          Janus.log(\"Remote track removed:\", ev);\n\n          if (config.remoteStream) {\n            clearTimeout(trackMutedTimeoutId);\n            config.remoteStream.removeTrack(ev.target);\n            pluginHandle.onremotestream(config.remoteStream);\n          }\n        };\n\n        event.track.onmute = function (ev) {\n          Janus.log(\"Remote track muted:\", ev);\n\n          if (config.remoteStream && trackMutedTimeoutId == null) {\n            trackMutedTimeoutId = setTimeout(function () {\n              Janus.log(\"Removing remote track\");\n              config.remoteStream.removeTrack(ev.target);\n              pluginHandle.onremotestream(config.remoteStream);\n              trackMutedTimeoutId = null; // Chrome seems to raise mute events only at multiples of 834ms;\n              // we set the timeout to three times this value (rounded to 840ms)\n            }, 3 * 840);\n          }\n        };\n\n        event.track.onunmute = function (ev) {\n          Janus.log(\"Remote track flowing again:\", ev);\n\n          if (trackMutedTimeoutId != null) {\n            clearTimeout(trackMutedTimeoutId);\n            trackMutedTimeoutId = null;\n          } else {\n            try {\n              config.remoteStream.addTrack(ev.target);\n              pluginHandle.onremotestream(config.remoteStream);\n            } catch (e) {\n              Janus.error(e);\n            }\n          }\n        };\n      };\n    }\n\n    if (addTracks && stream) {\n      Janus.log('Adding local stream');\n      var simulcast2 = callbacks.simulcast2 === true;\n      stream.getTracks().forEach(function (track) {\n        Janus.log('Adding local track:', track);\n\n        if (!simulcast2) {\n          config.pc.addTrack(track, stream);\n        } else {\n          if (track.kind === \"audio\") {\n            config.pc.addTrack(track, stream);\n          } else {\n            Janus.log('Enabling rid-based simulcasting:', track);\n            var maxBitrates = getMaxBitrates(callbacks.simulcastMaxBitrates);\n            config.pc.addTransceiver(track, {\n              direction: \"sendrecv\",\n              streams: [stream],\n              sendEncodings: [{\n                rid: \"h\",\n                active: true,\n                maxBitrate: maxBitrates.high\n              }, {\n                rid: \"m\",\n                active: true,\n                maxBitrate: maxBitrates.medium,\n                scaleResolutionDownBy: 2\n              }, {\n                rid: \"l\",\n                active: true,\n                maxBitrate: maxBitrates.low,\n                scaleResolutionDownBy: 4\n              }]\n            });\n          }\n        }\n      });\n    } // Any data channel to create?\n\n\n    if (isDataEnabled(media) && !config.dataChannel[Janus.dataChanDefaultLabel]) {\n      Janus.log(\"Creating data channel\");\n      createDataChannel(handleId, Janus.dataChanDefaultLabel, false);\n\n      config.pc.ondatachannel = function (event) {\n        Janus.log(\"Data channel created by Janus:\", event);\n        createDataChannel(handleId, event.channel.label, event.channel);\n      };\n    } // If there's a new local stream, let's notify the application\n\n\n    if (config.myStream) {\n      pluginHandle.onlocalstream(config.myStream);\n    } // Create offer/answer now\n\n\n    if (!jsep) {\n      createOffer(handleId, media, callbacks);\n    } else {\n      config.pc.setRemoteDescription(jsep).then(function () {\n        Janus.log(\"Remote description accepted!\");\n        config.remoteSdp = jsep.sdp; // Any trickle candidate we cached?\n\n        if (config.candidates && config.candidates.length > 0) {\n          for (var i = 0; i < config.candidates.length; i++) {\n            var candidate = config.candidates[i];\n            Janus.debug(\"Adding remote candidate:\", candidate);\n\n            if (!candidate || candidate.completed === true) {\n              // end-of-candidates\n              config.pc.addIceCandidate(Janus.endOfCandidates);\n            } else {\n              // New candidate\n              config.pc.addIceCandidate(candidate);\n            }\n          }\n\n          config.candidates = [];\n        } // Create the answer now\n\n\n        createAnswer(handleId, media, callbacks);\n      }, callbacks.error);\n    }\n  }\n\n  function prepareWebrtc(handleId, offer, callbacks) {\n    callbacks = callbacks || {};\n    callbacks.success = typeof callbacks.success == \"function\" ? callbacks.success : Janus.noop;\n    callbacks.error = typeof callbacks.error == \"function\" ? callbacks.error : webrtcError;\n    var jsep = callbacks.jsep;\n\n    if (offer && jsep) {\n      Janus.error(\"Provided a JSEP to a createOffer\");\n      callbacks.error(\"Provided a JSEP to a createOffer\");\n      return;\n    } else if (!offer && (!jsep || !jsep.type || !jsep.sdp)) {\n      Janus.error(\"A valid JSEP is required for createAnswer\");\n      callbacks.error(\"A valid JSEP is required for createAnswer\");\n      return;\n    }\n    /* Check that callbacks.media is a (not null) Object */\n\n\n    callbacks.media = _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(callbacks.media) === 'object' && callbacks.media ? callbacks.media : {\n      audio: true,\n      video: true\n    };\n    var media = callbacks.media;\n    var pluginHandle = pluginHandles[handleId];\n\n    if (!pluginHandle || !pluginHandle.webrtcStuff) {\n      Janus.warn(\"Invalid handle\");\n      callbacks.error(\"Invalid handle\");\n      return;\n    }\n\n    var config = pluginHandle.webrtcStuff;\n    config.trickle = isTrickleEnabled(callbacks.trickle); // Are we updating a session?\n\n    if (!config.pc) {\n      // Nope, new PeerConnection\n      media.update = false;\n      media.keepAudio = false;\n      media.keepVideo = false;\n    } else {\n      Janus.log(\"Updating existing media session\");\n      media.update = true; // Check if there's anything to add/remove/replace, or if we\n      // can go directly to preparing the new SDP offer or answer\n\n      if (callbacks.stream) {\n        // External stream: is this the same as the one we were using before?\n        if (callbacks.stream !== config.myStream) {\n          Janus.log(\"Renegotiation involves a new external stream\");\n        }\n      } else {\n        // Check if there are changes on audio\n        if (media.addAudio) {\n          media.keepAudio = false;\n          media.replaceAudio = false;\n          media.removeAudio = false;\n          media.audioSend = true;\n\n          if (config.myStream && config.myStream.getAudioTracks() && config.myStream.getAudioTracks().length) {\n            Janus.error(\"Can't add audio stream, there already is one\");\n            callbacks.error(\"Can't add audio stream, there already is one\");\n            return;\n          }\n        } else if (media.removeAudio) {\n          media.keepAudio = false;\n          media.replaceAudio = false;\n          media.addAudio = false;\n          media.audioSend = false;\n        } else if (media.replaceAudio) {\n          media.keepAudio = false;\n          media.addAudio = false;\n          media.removeAudio = false;\n          media.audioSend = true;\n        }\n\n        if (!config.myStream) {\n          // No media stream: if we were asked to replace, it's actually an \"add\"\n          if (media.replaceAudio) {\n            media.keepAudio = false;\n            media.replaceAudio = false;\n            media.addAudio = true;\n            media.audioSend = true;\n          }\n\n          if (isAudioSendEnabled(media)) {\n            media.keepAudio = false;\n            media.addAudio = true;\n          }\n        } else {\n          if (!config.myStream.getAudioTracks() || config.myStream.getAudioTracks().length === 0) {\n            // No audio track: if we were asked to replace, it's actually an \"add\"\n            if (media.replaceAudio) {\n              media.keepAudio = false;\n              media.replaceAudio = false;\n              media.addAudio = true;\n              media.audioSend = true;\n            }\n\n            if (isAudioSendEnabled(media)) {\n              media.keepAudio = false;\n              media.addAudio = true;\n            }\n          } else {\n            // We have an audio track: should we keep it as it is?\n            if (isAudioSendEnabled(media) && !media.removeAudio && !media.replaceAudio) {\n              media.keepAudio = true;\n            }\n          }\n        } // Check if there are changes on video\n\n\n        if (media.addVideo) {\n          media.keepVideo = false;\n          media.replaceVideo = false;\n          media.removeVideo = false;\n          media.videoSend = true;\n\n          if (config.myStream && config.myStream.getVideoTracks() && config.myStream.getVideoTracks().length) {\n            Janus.error(\"Can't add video stream, there already is one\");\n            callbacks.error(\"Can't add video stream, there already is one\");\n            return;\n          }\n        } else if (media.removeVideo) {\n          media.keepVideo = false;\n          media.replaceVideo = false;\n          media.addVideo = false;\n          media.videoSend = false;\n        } else if (media.replaceVideo) {\n          media.keepVideo = false;\n          media.addVideo = false;\n          media.removeVideo = false;\n          media.videoSend = true;\n        }\n\n        if (!config.myStream) {\n          // No media stream: if we were asked to replace, it's actually an \"add\"\n          if (media.replaceVideo) {\n            media.keepVideo = false;\n            media.replaceVideo = false;\n            media.addVideo = true;\n            media.videoSend = true;\n          }\n\n          if (isVideoSendEnabled(media)) {\n            media.keepVideo = false;\n            media.addVideo = true;\n          }\n        } else {\n          if (!config.myStream.getVideoTracks() || config.myStream.getVideoTracks().length === 0) {\n            // No video track: if we were asked to replace, it's actually an \"add\"\n            if (media.replaceVideo) {\n              media.keepVideo = false;\n              media.replaceVideo = false;\n              media.addVideo = true;\n              media.videoSend = true;\n            }\n\n            if (isVideoSendEnabled(media)) {\n              media.keepVideo = false;\n              media.addVideo = true;\n            }\n          } else {\n            // We have a video track: should we keep it as it is?\n            if (isVideoSendEnabled(media) && !media.removeVideo && !media.replaceVideo) {\n              media.keepVideo = true;\n            }\n          }\n        } // Data channels can only be added\n\n\n        if (media.addData) {\n          media.data = true;\n        }\n      } // If we're updating and keeping all tracks, let's skip the getUserMedia part\n\n\n      if (isAudioSendEnabled(media) && media.keepAudio && isVideoSendEnabled(media) && media.keepVideo) {\n        pluginHandle.consentDialog(false);\n        streamsDone(handleId, jsep, media, callbacks, config.myStream);\n        return;\n      }\n    } // If we're updating, check if we need to remove/replace one of the tracks\n\n\n    if (media.update && !config.streamExternal) {\n      if (media.removeAudio || media.replaceAudio) {\n        if (config.myStream && config.myStream.getAudioTracks() && config.myStream.getAudioTracks().length) {\n          var at = config.myStream.getAudioTracks()[0];\n          Janus.log(\"Removing audio track:\", at);\n          config.myStream.removeTrack(at);\n\n          try {\n            at.stop();\n          } catch (e) {}\n        }\n\n        if (config.pc.getSenders() && config.pc.getSenders().length) {\n          var ra = true;\n\n          if (media.replaceAudio && Janus.unifiedPlan) {\n            // We can use replaceTrack\n            ra = false;\n          }\n\n          if (ra) {\n            var _iterator7 = _createForOfIteratorHelper(config.pc.getSenders()),\n                _step7;\n\n            try {\n              for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n                var asnd = _step7.value;\n\n                if (asnd && asnd.track && asnd.track.kind === \"audio\") {\n                  Janus.log(\"Removing audio sender:\", asnd);\n                  config.pc.removeTrack(asnd);\n                }\n              }\n            } catch (err) {\n              _iterator7.e(err);\n            } finally {\n              _iterator7.f();\n            }\n          }\n        }\n      }\n\n      if (media.removeVideo || media.replaceVideo) {\n        if (config.myStream && config.myStream.getVideoTracks() && config.myStream.getVideoTracks().length) {\n          var vt = config.myStream.getVideoTracks()[0];\n          Janus.log(\"Removing video track:\", vt);\n          config.myStream.removeTrack(vt);\n\n          try {\n            vt.stop();\n          } catch (e) {}\n        }\n\n        if (config.pc.getSenders() && config.pc.getSenders().length) {\n          var rv = true;\n\n          if (media.replaceVideo && Janus.unifiedPlan) {\n            // We can use replaceTrack\n            rv = false;\n          }\n\n          if (rv) {\n            var _iterator8 = _createForOfIteratorHelper(config.pc.getSenders()),\n                _step8;\n\n            try {\n              for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n                var vsnd = _step8.value;\n\n                if (vsnd && vsnd.track && vsnd.track.kind === \"video\") {\n                  Janus.log(\"Removing video sender:\", vsnd);\n                  config.pc.removeTrack(vsnd);\n                }\n              }\n            } catch (err) {\n              _iterator8.e(err);\n            } finally {\n              _iterator8.f();\n            }\n          }\n        }\n      }\n    } // Was a MediaStream object passed, or do we need to take care of that?\n\n\n    if (callbacks.stream) {\n      var stream = callbacks.stream;\n      Janus.log(\"MediaStream provided by the application\");\n      Janus.debug(stream); // If this is an update, let's check if we need to release the previous stream\n\n      if (media.update) {\n        if (config.myStream && config.myStream !== callbacks.stream && !config.streamExternal) {\n          // We're replacing a stream we captured ourselves with an external one\n          try {\n            // Try a MediaStreamTrack.stop() for each track\n            var tracks = config.myStream.getTracks();\n\n            var _iterator9 = _createForOfIteratorHelper(tracks),\n                _step9;\n\n            try {\n              for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n                var mst = _step9.value;\n                Janus.log(mst);\n                if (mst) mst.stop();\n              }\n            } catch (err) {\n              _iterator9.e(err);\n            } finally {\n              _iterator9.f();\n            }\n          } catch (e) {// Do nothing if this fails\n          }\n\n          config.myStream = null;\n        }\n      } // Skip the getUserMedia part\n\n\n      config.streamExternal = true;\n      pluginHandle.consentDialog(false);\n      streamsDone(handleId, jsep, media, callbacks, stream);\n      return;\n    }\n\n    if (isAudioSendEnabled(media) || isVideoSendEnabled(media)) {\n      if (!Janus.isGetUserMediaAvailable()) {\n        callbacks.error(\"getUserMedia not available\");\n        return;\n      }\n\n      var constraints = {\n        mandatory: {},\n        optional: []\n      };\n      pluginHandle.consentDialog(true);\n      var audioSupport = isAudioSendEnabled(media);\n      if (audioSupport && media && _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(media.audio) === 'object') audioSupport = media.audio;\n      var videoSupport = isVideoSendEnabled(media);\n\n      if (videoSupport && media) {\n        var simulcast = callbacks.simulcast === true;\n        var simulcast2 = callbacks.simulcast2 === true;\n        if ((simulcast || simulcast2) && !jsep && !media.video) media.video = \"hires\";\n\n        if (media.video && media.video != 'screen' && media.video != 'window') {\n          if (_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(media.video) === 'object') {\n            videoSupport = media.video;\n          } else {\n            var width = 0;\n            var height = 0;\n\n            if (media.video === 'lowres') {\n              // Small resolution, 4:3\n              height = 240;\n              width = 320;\n            } else if (media.video === 'lowres-16:9') {\n              // Small resolution, 16:9\n              height = 180;\n              width = 320;\n            } else if (media.video === 'hires' || media.video === 'hires-16:9' || media.video === 'hdres') {\n              // High(HD) resolution is only 16:9\n              height = 720;\n              width = 1280;\n            } else if (media.video === 'fhdres') {\n              // Full HD resolution is only 16:9\n              height = 1080;\n              width = 1920;\n            } else if (media.video === '4kres') {\n              // 4K resolution is only 16:9\n              height = 2160;\n              width = 3840;\n            } else if (media.video === 'stdres') {\n              // Normal resolution, 4:3\n              height = 480;\n              width = 640;\n            } else if (media.video === 'stdres-16:9') {\n              // Normal resolution, 16:9\n              height = 360;\n              width = 640;\n            } else {\n              Janus.log(\"Default video setting is stdres 4:3\");\n              height = 480;\n              width = 640;\n            }\n\n            Janus.log(\"Adding media constraint:\", media.video);\n            videoSupport = {\n              'height': {\n                'ideal': height\n              },\n              'width': {\n                'ideal': width\n              }\n            };\n            Janus.log(\"Adding video constraint:\", videoSupport);\n          }\n        } else if (media.video === 'screen' || media.video === 'window') {\n          // We're going to try and use the extension for Chrome 34+, the old approach\n          // for older versions of Chrome, or the experimental support in Firefox 33+\n          var callbackUserMedia = function callbackUserMedia(error, stream) {\n            pluginHandle.consentDialog(false);\n\n            if (error) {\n              callbacks.error(error);\n            } else {\n              streamsDone(handleId, jsep, media, callbacks, stream);\n            }\n          };\n\n          var getScreenMedia = function getScreenMedia(constraints, gsmCallback, useAudio) {\n            Janus.log(\"Adding media constraint (screen capture)\");\n            Janus.debug(constraints);\n            navigator.mediaDevices.getUserMedia(constraints).then(function (stream) {\n              if (useAudio) {\n                navigator.mediaDevices.getUserMedia({\n                  audio: true,\n                  video: false\n                }).then(function (audioStream) {\n                  stream.addTrack(audioStream.getAudioTracks()[0]);\n                  gsmCallback(null, stream);\n                });\n              } else {\n                gsmCallback(null, stream);\n              }\n            })[\"catch\"](function (error) {\n              pluginHandle.consentDialog(false);\n              gsmCallback(error);\n            });\n          };\n\n          if (navigator.mediaDevices && navigator.mediaDevices.getDisplayMedia) {\n            // The new experimental getDisplayMedia API is available, let's use that\n            // https://groups.google.com/forum/#!topic/discuss-webrtc/Uf0SrR4uxzk\n            // https://webrtchacks.com/chrome-screensharing-getdisplaymedia/\n            constraints.video = {};\n\n            if (media.screenshareFrameRate) {\n              constraints.video.frameRate = media.screenshareFrameRate;\n            }\n\n            if (media.screenshareHeight) {\n              constraints.video.height = media.screenshareHeight;\n            }\n\n            if (media.screenshareWidth) {\n              constraints.video.width = media.screenshareWidth;\n            }\n\n            constraints.audio = media.captureDesktopAudio;\n            navigator.mediaDevices.getDisplayMedia(constraints).then(function (stream) {\n              pluginHandle.consentDialog(false);\n\n              if (isAudioSendEnabled(media) && !media.keepAudio) {\n                navigator.mediaDevices.getUserMedia({\n                  audio: true,\n                  video: false\n                }).then(function (audioStream) {\n                  stream.addTrack(audioStream.getAudioTracks()[0]);\n                  streamsDone(handleId, jsep, media, callbacks, stream);\n                });\n              } else {\n                streamsDone(handleId, jsep, media, callbacks, stream);\n              }\n            }, function (error) {\n              pluginHandle.consentDialog(false);\n              callbacks.error(error);\n            });\n            return;\n          }\n\n          if (Janus.webRTCAdapter.browserDetails.browser === 'chrome') {\n            var chromever = Janus.webRTCAdapter.browserDetails.version;\n            var maxver = 33;\n            if (window.navigator.userAgent.match('Linux')) maxver = 35; // \"known\" crash in chrome 34 and 35 on linux\n\n            if (chromever >= 26 && chromever <= maxver) {\n              // Chrome 26->33 requires some awkward chrome://flags manipulation\n              constraints = {\n                video: {\n                  mandatory: {\n                    googLeakyBucket: true,\n                    maxWidth: window.screen.width,\n                    maxHeight: window.screen.height,\n                    minFrameRate: media.screenshareFrameRate,\n                    maxFrameRate: media.screenshareFrameRate,\n                    chromeMediaSource: 'screen'\n                  }\n                },\n                audio: isAudioSendEnabled(media) && !media.keepAudio\n              };\n              getScreenMedia(constraints, callbackUserMedia);\n            } else {\n              // Chrome 34+ requires an extension\n              Janus.extension.getScreen(function (error, sourceId) {\n                if (error) {\n                  pluginHandle.consentDialog(false);\n                  return callbacks.error(error);\n                }\n\n                constraints = {\n                  audio: false,\n                  video: {\n                    mandatory: {\n                      chromeMediaSource: 'desktop',\n                      maxWidth: window.screen.width,\n                      maxHeight: window.screen.height,\n                      minFrameRate: media.screenshareFrameRate,\n                      maxFrameRate: media.screenshareFrameRate\n                    },\n                    optional: [{\n                      googLeakyBucket: true\n                    }, {\n                      googTemporalLayeredScreencast: true\n                    }]\n                  }\n                };\n                constraints.video.mandatory.chromeMediaSourceId = sourceId;\n                getScreenMedia(constraints, callbackUserMedia, isAudioSendEnabled(media) && !media.keepAudio);\n              });\n            }\n          } else if (Janus.webRTCAdapter.browserDetails.browser === 'firefox') {\n            if (Janus.webRTCAdapter.browserDetails.version >= 33) {\n              // Firefox 33+ has experimental support for screen sharing\n              constraints = {\n                video: {\n                  mozMediaSource: media.video,\n                  mediaSource: media.video\n                },\n                audio: isAudioSendEnabled(media) && !media.keepAudio\n              };\n              getScreenMedia(constraints, function (err, stream) {\n                callbackUserMedia(err, stream); // Workaround for https://bugzilla.mozilla.org/show_bug.cgi?id=1045810\n\n                if (!err) {\n                  var lastTime = stream.currentTime;\n                  var polly = window.setInterval(function () {\n                    if (!stream) window.clearInterval(polly);\n\n                    if (stream.currentTime == lastTime) {\n                      window.clearInterval(polly);\n\n                      if (stream.onended) {\n                        stream.onended();\n                      }\n                    }\n\n                    lastTime = stream.currentTime;\n                  }, 500);\n                }\n              });\n            } else {\n              var error = new Error('NavigatorUserMediaError');\n              error.name = 'Your version of Firefox does not support screen sharing, please install Firefox 33 (or more recent versions)';\n              pluginHandle.consentDialog(false);\n              callbacks.error(error);\n              return;\n            }\n          }\n\n          return;\n        }\n      } // If we got here, we're not screensharing\n\n\n      if (!media || media.video !== 'screen') {\n        // Check whether all media sources are actually available or not\n        navigator.mediaDevices.enumerateDevices().then(function (devices) {\n          var audioExist = devices.some(function (device) {\n            return device.kind === 'audioinput';\n          }),\n              videoExist = isScreenSendEnabled(media) || devices.some(function (device) {\n            return device.kind === 'videoinput';\n          }); // Check whether a missing device is really a problem\n\n          var audioSend = isAudioSendEnabled(media);\n          var videoSend = isVideoSendEnabled(media);\n          var needAudioDevice = isAudioSendRequired(media);\n          var needVideoDevice = isVideoSendRequired(media);\n\n          if (audioSend || videoSend || needAudioDevice || needVideoDevice) {\n            // We need to send either audio or video\n            var haveAudioDevice = audioSend ? audioExist : false;\n            var haveVideoDevice = videoSend ? videoExist : false;\n\n            if (!haveAudioDevice && !haveVideoDevice) {\n              // FIXME Should we really give up, or just assume recvonly for both?\n              pluginHandle.consentDialog(false);\n              callbacks.error('No capture device found');\n              return false;\n            } else if (!haveAudioDevice && needAudioDevice) {\n              pluginHandle.consentDialog(false);\n              callbacks.error('Audio capture is required, but no capture device found');\n              return false;\n            } else if (!haveVideoDevice && needVideoDevice) {\n              pluginHandle.consentDialog(false);\n              callbacks.error('Video capture is required, but no capture device found');\n              return false;\n            }\n          }\n\n          var gumConstraints = {\n            audio: audioExist && !media.keepAudio ? audioSupport : false,\n            video: videoExist && !media.keepVideo ? videoSupport : false\n          };\n          Janus.debug(\"getUserMedia constraints\", gumConstraints);\n\n          if (!gumConstraints.audio && !gumConstraints.video) {\n            pluginHandle.consentDialog(false);\n            streamsDone(handleId, jsep, media, callbacks, stream);\n          } else {\n            navigator.mediaDevices.getUserMedia(gumConstraints).then(function (stream) {\n              pluginHandle.consentDialog(false);\n              streamsDone(handleId, jsep, media, callbacks, stream);\n            })[\"catch\"](function (error) {\n              pluginHandle.consentDialog(false);\n              callbacks.error({\n                code: error.code,\n                name: error.name,\n                message: error.message\n              });\n            });\n          }\n        })[\"catch\"](function (error) {\n          pluginHandle.consentDialog(false);\n          callbacks.error('enumerateDevices error', error);\n        });\n      }\n    } else {\n      // No need to do a getUserMedia, create offer/answer right away\n      streamsDone(handleId, jsep, media, callbacks);\n    }\n  }\n\n  function prepareWebrtcPeer(handleId, callbacks) {\n    callbacks = callbacks || {};\n    callbacks.success = typeof callbacks.success == \"function\" ? callbacks.success : Janus.noop;\n    callbacks.error = typeof callbacks.error == \"function\" ? callbacks.error : webrtcError;\n    var jsep = callbacks.jsep;\n    var pluginHandle = pluginHandles[handleId];\n\n    if (!pluginHandle || !pluginHandle.webrtcStuff) {\n      Janus.warn(\"Invalid handle\");\n      callbacks.error(\"Invalid handle\");\n      return;\n    }\n\n    var config = pluginHandle.webrtcStuff;\n\n    if (jsep) {\n      if (!config.pc) {\n        Janus.warn(\"Wait, no PeerConnection?? if this is an answer, use createAnswer and not handleRemoteJsep\");\n        callbacks.error(\"No PeerConnection: if this is an answer, use createAnswer and not handleRemoteJsep\");\n        return;\n      }\n\n      config.pc.setRemoteDescription(jsep).then(function () {\n        Janus.log(\"Remote description accepted!\");\n        config.remoteSdp = jsep.sdp; // Any trickle candidate we cached?\n\n        if (config.candidates && config.candidates.length > 0) {\n          for (var i = 0; i < config.candidates.length; i++) {\n            var candidate = config.candidates[i];\n            Janus.debug(\"Adding remote candidate:\", candidate);\n\n            if (!candidate || candidate.completed === true) {\n              // end-of-candidates\n              config.pc.addIceCandidate(Janus.endOfCandidates);\n            } else {\n              // New candidate\n              config.pc.addIceCandidate(candidate);\n            }\n          }\n\n          config.candidates = [];\n        } // Done\n\n\n        callbacks.success();\n      }, callbacks.error);\n    } else {\n      callbacks.error(\"Invalid JSEP\");\n    }\n  }\n\n  function createOffer(handleId, media, callbacks) {\n    callbacks = callbacks || {};\n    callbacks.success = typeof callbacks.success == \"function\" ? callbacks.success : Janus.noop;\n    callbacks.error = typeof callbacks.error == \"function\" ? callbacks.error : Janus.noop;\n    callbacks.customizeSdp = typeof callbacks.customizeSdp == \"function\" ? callbacks.customizeSdp : Janus.noop;\n    var pluginHandle = pluginHandles[handleId];\n\n    if (!pluginHandle || !pluginHandle.webrtcStuff) {\n      Janus.warn(\"Invalid handle\");\n      callbacks.error(\"Invalid handle\");\n      return;\n    }\n\n    var config = pluginHandle.webrtcStuff;\n    var simulcast = callbacks.simulcast === true;\n\n    if (!simulcast) {\n      Janus.log(\"Creating offer (iceDone=\" + config.iceDone + \")\");\n    } else {\n      Janus.log(\"Creating offer (iceDone=\" + config.iceDone + \", simulcast=\" + simulcast + \")\");\n    } // https://code.google.com/p/webrtc/issues/detail?id=3508\n\n\n    var mediaConstraints = {};\n\n    if (Janus.unifiedPlan) {\n      // We can use Transceivers\n      var audioTransceiver = null,\n          videoTransceiver = null;\n      var transceivers = config.pc.getTransceivers();\n\n      if (transceivers && transceivers.length > 0) {\n        var _iterator10 = _createForOfIteratorHelper(transceivers),\n            _step10;\n\n        try {\n          for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n            var t = _step10.value;\n\n            if (t.sender && t.sender.track && t.sender.track.kind === \"audio\" || t.receiver && t.receiver.track && t.receiver.track.kind === \"audio\") {\n              if (!audioTransceiver) {\n                audioTransceiver = t;\n              }\n\n              continue;\n            }\n\n            if (t.sender && t.sender.track && t.sender.track.kind === \"video\" || t.receiver && t.receiver.track && t.receiver.track.kind === \"video\") {\n              if (!videoTransceiver) {\n                videoTransceiver = t;\n              }\n\n              continue;\n            }\n          }\n        } catch (err) {\n          _iterator10.e(err);\n        } finally {\n          _iterator10.f();\n        }\n      } // Handle audio (and related changes, if any)\n\n\n      var audioSend = isAudioSendEnabled(media);\n      var audioRecv = isAudioRecvEnabled(media);\n\n      if (!audioSend && !audioRecv) {\n        // Audio disabled: have we removed it?\n        if (media.removeAudio && audioTransceiver) {\n          if (audioTransceiver.setDirection) {\n            audioTransceiver.setDirection(\"inactive\");\n          } else {\n            audioTransceiver.direction = \"inactive\";\n          }\n\n          Janus.log(\"Setting audio transceiver to inactive:\", audioTransceiver);\n        }\n      } else {\n        // Take care of audio m-line\n        if (audioSend && audioRecv) {\n          if (audioTransceiver) {\n            if (audioTransceiver.setDirection) {\n              audioTransceiver.setDirection(\"sendrecv\");\n            } else {\n              audioTransceiver.direction = \"sendrecv\";\n            }\n\n            Janus.log(\"Setting audio transceiver to sendrecv:\", audioTransceiver);\n          }\n        } else if (audioSend && !audioRecv) {\n          if (audioTransceiver) {\n            if (audioTransceiver.setDirection) {\n              audioTransceiver.setDirection(\"sendonly\");\n            } else {\n              audioTransceiver.direction = \"sendonly\";\n            }\n\n            Janus.log(\"Setting audio transceiver to sendonly:\", audioTransceiver);\n          }\n        } else if (!audioSend && audioRecv) {\n          if (audioTransceiver) {\n            if (audioTransceiver.setDirection) {\n              audioTransceiver.setDirection(\"recvonly\");\n            } else {\n              audioTransceiver.direction = \"recvonly\";\n            }\n\n            Janus.log(\"Setting audio transceiver to recvonly:\", audioTransceiver);\n          } else {\n            // In theory, this is the only case where we might not have a transceiver yet\n            audioTransceiver = config.pc.addTransceiver(\"audio\", {\n              direction: \"recvonly\"\n            });\n            Janus.log(\"Adding recvonly audio transceiver:\", audioTransceiver);\n          }\n        }\n      } // Handle video (and related changes, if any)\n\n\n      var videoSend = isVideoSendEnabled(media);\n      var videoRecv = isVideoRecvEnabled(media);\n\n      if (!videoSend && !videoRecv) {\n        // Video disabled: have we removed it?\n        if (media.removeVideo && videoTransceiver) {\n          if (videoTransceiver.setDirection) {\n            videoTransceiver.setDirection(\"inactive\");\n          } else {\n            videoTransceiver.direction = \"inactive\";\n          }\n\n          Janus.log(\"Setting video transceiver to inactive:\", videoTransceiver);\n        }\n      } else {\n        // Take care of video m-line\n        if (videoSend && videoRecv) {\n          if (videoTransceiver) {\n            if (videoTransceiver.setDirection) {\n              videoTransceiver.setDirection(\"sendrecv\");\n            } else {\n              videoTransceiver.direction = \"sendrecv\";\n            }\n\n            Janus.log(\"Setting video transceiver to sendrecv:\", videoTransceiver);\n          }\n        } else if (videoSend && !videoRecv) {\n          if (videoTransceiver) {\n            if (videoTransceiver.setDirection) {\n              videoTransceiver.setDirection(\"sendonly\");\n            } else {\n              videoTransceiver.direction = \"sendonly\";\n            }\n\n            Janus.log(\"Setting video transceiver to sendonly:\", videoTransceiver);\n          }\n        } else if (!videoSend && videoRecv) {\n          if (videoTransceiver) {\n            if (videoTransceiver.setDirection) {\n              videoTransceiver.setDirection(\"recvonly\");\n            } else {\n              videoTransceiver.direction = \"recvonly\";\n            }\n\n            Janus.log(\"Setting video transceiver to recvonly:\", videoTransceiver);\n          } else {\n            // In theory, this is the only case where we might not have a transceiver yet\n            videoTransceiver = config.pc.addTransceiver(\"video\", {\n              direction: \"recvonly\"\n            });\n            Janus.log(\"Adding recvonly video transceiver:\", videoTransceiver);\n          }\n        }\n      }\n    } else {\n      mediaConstraints[\"offerToReceiveAudio\"] = isAudioRecvEnabled(media);\n      mediaConstraints[\"offerToReceiveVideo\"] = isVideoRecvEnabled(media);\n    }\n\n    var iceRestart = callbacks.iceRestart === true;\n\n    if (iceRestart) {\n      mediaConstraints[\"iceRestart\"] = true;\n    }\n\n    Janus.debug(mediaConstraints); // Check if this is Firefox and we've been asked to do simulcasting\n\n    var sendVideo = isVideoSendEnabled(media);\n\n    if (sendVideo && simulcast && Janus.webRTCAdapter.browserDetails.browser === \"firefox\") {\n      // FIXME Based on https://gist.github.com/voluntas/088bc3cc62094730647b\n      Janus.log(\"Enabling Simulcasting for Firefox (RID)\");\n      var sender = config.pc.getSenders().find(function (s) {\n        return s.track.kind === \"video\";\n      });\n\n      if (sender) {\n        var parameters = sender.getParameters();\n\n        if (!parameters) {\n          parameters = {};\n        }\n\n        var maxBitrates = getMaxBitrates(callbacks.simulcastMaxBitrates);\n        parameters.encodings = [{\n          rid: \"h\",\n          active: true,\n          maxBitrate: maxBitrates.high\n        }, {\n          rid: \"m\",\n          active: true,\n          maxBitrate: maxBitrates.medium,\n          scaleResolutionDownBy: 2\n        }, {\n          rid: \"l\",\n          active: true,\n          maxBitrate: maxBitrates.low,\n          scaleResolutionDownBy: 4\n        }];\n        sender.setParameters(parameters);\n      }\n    }\n\n    config.pc.createOffer(mediaConstraints).then(function (offer) {\n      Janus.debug(offer); // JSON.stringify doesn't work on some WebRTC objects anymore\n      // See https://code.google.com/p/chromium/issues/detail?id=467366\n\n      var jsep = {\n        \"type\": offer.type,\n        \"sdp\": offer.sdp\n      };\n      callbacks.customizeSdp(jsep);\n      offer.sdp = jsep.sdp;\n      Janus.log(\"Setting local description\");\n\n      if (sendVideo && simulcast) {\n        // This SDP munging only works with Chrome (Safari STP may support it too)\n        if (Janus.webRTCAdapter.browserDetails.browser === \"chrome\" || Janus.webRTCAdapter.browserDetails.browser === \"safari\") {\n          Janus.log(\"Enabling Simulcasting for Chrome (SDP munging)\");\n          offer.sdp = mungeSdpForSimulcasting(offer.sdp);\n        } else if (Janus.webRTCAdapter.browserDetails.browser !== \"firefox\") {\n          Janus.warn(\"simulcast=true, but this is not Chrome nor Firefox, ignoring\");\n        }\n      }\n\n      config.mySdp = offer.sdp;\n      config.pc.setLocalDescription(offer)[\"catch\"](callbacks.error);\n      config.mediaConstraints = mediaConstraints;\n\n      if (!config.iceDone && !config.trickle) {\n        // Don't do anything until we have all candidates\n        Janus.log(\"Waiting for all candidates...\");\n        return;\n      }\n\n      Janus.log(\"Offer ready\");\n      Janus.debug(callbacks);\n      callbacks.success(offer);\n    }, callbacks.error);\n  }\n\n  function createAnswer(handleId, media, callbacks) {\n    callbacks = callbacks || {};\n    callbacks.success = typeof callbacks.success == \"function\" ? callbacks.success : Janus.noop;\n    callbacks.error = typeof callbacks.error == \"function\" ? callbacks.error : Janus.noop;\n    callbacks.customizeSdp = typeof callbacks.customizeSdp == \"function\" ? callbacks.customizeSdp : Janus.noop;\n    var pluginHandle = pluginHandles[handleId];\n\n    if (!pluginHandle || !pluginHandle.webrtcStuff) {\n      Janus.warn(\"Invalid handle\");\n      callbacks.error(\"Invalid handle\");\n      return;\n    }\n\n    var config = pluginHandle.webrtcStuff;\n    var simulcast = callbacks.simulcast === true;\n\n    if (!simulcast) {\n      Janus.log(\"Creating answer (iceDone=\" + config.iceDone + \")\");\n    } else {\n      Janus.log(\"Creating answer (iceDone=\" + config.iceDone + \", simulcast=\" + simulcast + \")\");\n    }\n\n    var mediaConstraints = null;\n\n    if (Janus.unifiedPlan) {\n      // We can use Transceivers\n      mediaConstraints = {};\n      var audioTransceiver = null,\n          videoTransceiver = null;\n      var transceivers = config.pc.getTransceivers();\n\n      if (transceivers && transceivers.length > 0) {\n        var _iterator11 = _createForOfIteratorHelper(transceivers),\n            _step11;\n\n        try {\n          for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n            var t = _step11.value;\n\n            if (t.sender && t.sender.track && t.sender.track.kind === \"audio\" || t.receiver && t.receiver.track && t.receiver.track.kind === \"audio\") {\n              if (!audioTransceiver) audioTransceiver = t;\n              continue;\n            }\n\n            if (t.sender && t.sender.track && t.sender.track.kind === \"video\" || t.receiver && t.receiver.track && t.receiver.track.kind === \"video\") {\n              if (!videoTransceiver) videoTransceiver = t;\n              continue;\n            }\n          }\n        } catch (err) {\n          _iterator11.e(err);\n        } finally {\n          _iterator11.f();\n        }\n      } // Handle audio (and related changes, if any)\n\n\n      var audioSend = isAudioSendEnabled(media);\n      var audioRecv = isAudioRecvEnabled(media);\n\n      if (!audioSend && !audioRecv) {\n        // Audio disabled: have we removed it?\n        if (media.removeAudio && audioTransceiver) {\n          try {\n            if (audioTransceiver.setDirection) {\n              audioTransceiver.setDirection(\"inactive\");\n            } else {\n              audioTransceiver.direction = \"inactive\";\n            }\n\n            Janus.log(\"Setting audio transceiver to inactive:\", audioTransceiver);\n          } catch (e) {\n            Janus.error(e);\n          }\n        }\n      } else {\n        // Take care of audio m-line\n        if (audioSend && audioRecv) {\n          if (audioTransceiver) {\n            try {\n              if (audioTransceiver.setDirection) {\n                audioTransceiver.setDirection(\"sendrecv\");\n              } else {\n                audioTransceiver.direction = \"sendrecv\";\n              }\n\n              Janus.log(\"Setting audio transceiver to sendrecv:\", audioTransceiver);\n            } catch (e) {\n              Janus.error(e);\n            }\n          }\n        } else if (audioSend && !audioRecv) {\n          try {\n            if (audioTransceiver) {\n              if (audioTransceiver.setDirection) {\n                audioTransceiver.setDirection(\"sendonly\");\n              } else {\n                audioTransceiver.direction = \"sendonly\";\n              }\n\n              Janus.log(\"Setting audio transceiver to sendonly:\", audioTransceiver);\n            }\n          } catch (e) {\n            Janus.error(e);\n          }\n        } else if (!audioSend && audioRecv) {\n          if (audioTransceiver) {\n            try {\n              if (audioTransceiver.setDirection) {\n                audioTransceiver.setDirection(\"recvonly\");\n              } else {\n                audioTransceiver.direction = \"recvonly\";\n              }\n\n              Janus.log(\"Setting audio transceiver to recvonly:\", audioTransceiver);\n            } catch (e) {\n              Janus.error(e);\n            }\n          } else {\n            // In theory, this is the only case where we might not have a transceiver yet\n            audioTransceiver = config.pc.addTransceiver(\"audio\", {\n              direction: \"recvonly\"\n            });\n            Janus.log(\"Adding recvonly audio transceiver:\", audioTransceiver);\n          }\n        }\n      } // Handle video (and related changes, if any)\n\n\n      var videoSend = isVideoSendEnabled(media);\n      var videoRecv = isVideoRecvEnabled(media);\n\n      if (!videoSend && !videoRecv) {\n        // Video disabled: have we removed it?\n        if (media.removeVideo && videoTransceiver) {\n          try {\n            if (videoTransceiver.setDirection) {\n              videoTransceiver.setDirection(\"inactive\");\n            } else {\n              videoTransceiver.direction = \"inactive\";\n            }\n\n            Janus.log(\"Setting video transceiver to inactive:\", videoTransceiver);\n          } catch (e) {\n            Janus.error(e);\n          }\n        }\n      } else {\n        // Take care of video m-line\n        if (videoSend && videoRecv) {\n          if (videoTransceiver) {\n            try {\n              if (videoTransceiver.setDirection) {\n                videoTransceiver.setDirection(\"sendrecv\");\n              } else {\n                videoTransceiver.direction = \"sendrecv\";\n              }\n\n              Janus.log(\"Setting video transceiver to sendrecv:\", videoTransceiver);\n            } catch (e) {\n              Janus.error(e);\n            }\n          }\n        } else if (videoSend && !videoRecv) {\n          if (videoTransceiver) {\n            try {\n              if (videoTransceiver.setDirection) {\n                videoTransceiver.setDirection(\"sendonly\");\n              } else {\n                videoTransceiver.direction = \"sendonly\";\n              }\n\n              Janus.log(\"Setting video transceiver to sendonly:\", videoTransceiver);\n            } catch (e) {\n              Janus.error(e);\n            }\n          }\n        } else if (!videoSend && videoRecv) {\n          if (videoTransceiver) {\n            try {\n              if (videoTransceiver.setDirection) {\n                videoTransceiver.setDirection(\"recvonly\");\n              } else {\n                videoTransceiver.direction = \"recvonly\";\n              }\n\n              Janus.log(\"Setting video transceiver to recvonly:\", videoTransceiver);\n            } catch (e) {\n              Janus.error(e);\n            }\n          } else {\n            // In theory, this is the only case where we might not have a transceiver yet\n            videoTransceiver = config.pc.addTransceiver(\"video\", {\n              direction: \"recvonly\"\n            });\n            Janus.log(\"Adding recvonly video transceiver:\", videoTransceiver);\n          }\n        }\n      }\n    } else {\n      if (Janus.webRTCAdapter.browserDetails.browser === \"firefox\" || Janus.webRTCAdapter.browserDetails.browser === \"edge\") {\n        mediaConstraints = {\n          offerToReceiveAudio: isAudioRecvEnabled(media),\n          offerToReceiveVideo: isVideoRecvEnabled(media)\n        };\n      } else {\n        mediaConstraints = {\n          mandatory: {\n            OfferToReceiveAudio: isAudioRecvEnabled(media),\n            OfferToReceiveVideo: isVideoRecvEnabled(media)\n          }\n        };\n      }\n    }\n\n    Janus.debug(mediaConstraints); // Check if this is Firefox and we've been asked to do simulcasting\n\n    var sendVideo = isVideoSendEnabled(media);\n\n    if (sendVideo && simulcast && Janus.webRTCAdapter.browserDetails.browser === \"firefox\") {\n      // FIXME Based on https://gist.github.com/voluntas/088bc3cc62094730647b\n      Janus.log(\"Enabling Simulcasting for Firefox (RID)\");\n      var sender = config.pc.getSenders()[1];\n      Janus.log(sender);\n      var parameters = sender.getParameters();\n      Janus.log(parameters);\n      var maxBitrates = getMaxBitrates(callbacks.simulcastMaxBitrates);\n      sender.setParameters({\n        encodings: [{\n          rid: \"high\",\n          active: true,\n          priority: \"high\",\n          maxBitrate: maxBitrates.high\n        }, {\n          rid: \"medium\",\n          active: true,\n          priority: \"medium\",\n          maxBitrate: maxBitrates.medium\n        }, {\n          rid: \"low\",\n          active: true,\n          priority: \"low\",\n          maxBitrate: maxBitrates.low\n        }]\n      });\n    }\n\n    config.pc.createAnswer(mediaConstraints).then(function (answer) {\n      Janus.debug(answer); // JSON.stringify doesn't work on some WebRTC objects anymore\n      // See https://code.google.com/p/chromium/issues/detail?id=467366\n\n      var jsep = {\n        \"type\": answer.type,\n        \"sdp\": answer.sdp\n      };\n      callbacks.customizeSdp(jsep);\n      answer.sdp = jsep.sdp;\n      Janus.log(\"Setting local description\");\n\n      if (sendVideo && simulcast) {\n        // This SDP munging only works with Chrome\n        if (Janus.webRTCAdapter.browserDetails.browser === \"chrome\") {\n          // FIXME Apparently trying to simulcast when answering breaks video in Chrome...\n          //~ Janus.log(\"Enabling Simulcasting for Chrome (SDP munging)\");\n          //~ answer.sdp = mungeSdpForSimulcasting(answer.sdp);\n          Janus.warn(\"simulcast=true, but this is an answer, and video breaks in Chrome if we enable it\");\n        } else if (Janus.webRTCAdapter.browserDetails.browser !== \"firefox\") {\n          Janus.warn(\"simulcast=true, but this is not Chrome nor Firefox, ignoring\");\n        }\n      }\n\n      config.mySdp = answer.sdp;\n      config.pc.setLocalDescription(answer)[\"catch\"](callbacks.error);\n      config.mediaConstraints = mediaConstraints;\n\n      if (!config.iceDone && !config.trickle) {\n        // Don't do anything until we have all candidates\n        Janus.log(\"Waiting for all candidates...\");\n        return;\n      }\n\n      callbacks.success(answer);\n    }, callbacks.error);\n  }\n\n  function sendSDP(handleId, callbacks) {\n    callbacks = callbacks || {};\n    callbacks.success = typeof callbacks.success == \"function\" ? callbacks.success : Janus.noop;\n    callbacks.error = typeof callbacks.error == \"function\" ? callbacks.error : Janus.noop;\n    var pluginHandle = pluginHandles[handleId];\n\n    if (!pluginHandle || !pluginHandle.webrtcStuff) {\n      Janus.warn(\"Invalid handle, not sending anything\");\n      return;\n    }\n\n    var config = pluginHandle.webrtcStuff;\n    Janus.log(\"Sending offer/answer SDP...\");\n\n    if (!config.mySdp) {\n      Janus.warn(\"Local SDP instance is invalid, not sending anything...\");\n      return;\n    }\n\n    config.mySdp = {\n      \"type\": config.pc.localDescription.type,\n      \"sdp\": config.pc.localDescription.sdp\n    };\n    if (config.trickle === false) config.mySdp[\"trickle\"] = false;\n    Janus.debug(callbacks);\n    config.sdpSent = true;\n    callbacks.success(config.mySdp);\n  }\n\n  function _getVolume(handleId, remote) {\n    var pluginHandle = pluginHandles[handleId];\n\n    if (!pluginHandle || !pluginHandle.webrtcStuff) {\n      Janus.warn(\"Invalid handle\");\n      return 0;\n    }\n\n    var stream = remote ? \"remote\" : \"local\";\n    var config = pluginHandle.webrtcStuff;\n    if (!config.volume[stream]) config.volume[stream] = {\n      value: 0\n    }; // Start getting the volume, if audioLevel in getStats is supported (apparently\n    // they're only available in Chrome/Safari right now: https://webrtc-stats.callstats.io/)\n\n    if (config.pc.getStats && (Janus.webRTCAdapter.browserDetails.browser === \"chrome\" || Janus.webRTCAdapter.browserDetails.browser === \"safari\")) {\n      if (remote && !config.remoteStream) {\n        Janus.warn(\"Remote stream unavailable\");\n        return 0;\n      } else if (!remote && !config.myStream) {\n        Janus.warn(\"Local stream unavailable\");\n        return 0;\n      }\n\n      if (!config.volume[stream].timer) {\n        Janus.log(\"Starting \" + stream + \" volume monitor\");\n        config.volume[stream].timer = setInterval(function () {\n          config.pc.getStats().then(function (stats) {\n            stats.forEach(function (res) {\n              if (!res || res.kind !== \"audio\") return;\n              if (remote && !res.remoteSource || !remote && res.type !== \"media-source\") return;\n              config.volume[stream].value = res.audioLevel ? res.audioLevel : 0;\n            });\n          });\n        }, 200);\n        return 0; // We don't have a volume to return yet\n      }\n\n      return config.volume[stream].value;\n    } else {\n      // audioInputLevel and audioOutputLevel seem only available in Chrome? audioLevel\n      // seems to be available on Chrome and Firefox, but they don't seem to work\n      Janus.warn(\"Getting the \" + stream + \" volume unsupported by browser\");\n      return 0;\n    }\n  }\n\n  function isMuted(handleId, video) {\n    var pluginHandle = pluginHandles[handleId];\n\n    if (!pluginHandle || !pluginHandle.webrtcStuff) {\n      Janus.warn(\"Invalid handle\");\n      return true;\n    }\n\n    var config = pluginHandle.webrtcStuff;\n\n    if (!config.pc) {\n      Janus.warn(\"Invalid PeerConnection\");\n      return true;\n    }\n\n    if (!config.myStream) {\n      Janus.warn(\"Invalid local MediaStream\");\n      return true;\n    }\n\n    if (video) {\n      // Check video track\n      if (!config.myStream.getVideoTracks() || config.myStream.getVideoTracks().length === 0) {\n        Janus.warn(\"No video track\");\n        return true;\n      }\n\n      return !config.myStream.getVideoTracks()[0].enabled;\n    } else {\n      // Check audio track\n      if (!config.myStream.getAudioTracks() || config.myStream.getAudioTracks().length === 0) {\n        Janus.warn(\"No audio track\");\n        return true;\n      }\n\n      return !config.myStream.getAudioTracks()[0].enabled;\n    }\n  }\n\n  function mute(handleId, video, mute) {\n    var pluginHandle = pluginHandles[handleId];\n\n    if (!pluginHandle || !pluginHandle.webrtcStuff) {\n      Janus.warn(\"Invalid handle\");\n      return false;\n    }\n\n    var config = pluginHandle.webrtcStuff;\n\n    if (!config.pc) {\n      Janus.warn(\"Invalid PeerConnection\");\n      return false;\n    }\n\n    if (!config.myStream) {\n      Janus.warn(\"Invalid local MediaStream\");\n      return false;\n    }\n\n    if (video) {\n      // Mute/unmute video track\n      if (!config.myStream.getVideoTracks() || config.myStream.getVideoTracks().length === 0) {\n        Janus.warn(\"No video track\");\n        return false;\n      }\n\n      config.myStream.getVideoTracks()[0].enabled = !mute;\n      return true;\n    } else {\n      // Mute/unmute audio track\n      if (!config.myStream.getAudioTracks() || config.myStream.getAudioTracks().length === 0) {\n        Janus.warn(\"No audio track\");\n        return false;\n      }\n\n      config.myStream.getAudioTracks()[0].enabled = !mute;\n      return true;\n    }\n  }\n\n  function _getBitrate(handleId) {\n    var pluginHandle = pluginHandles[handleId];\n\n    if (!pluginHandle || !pluginHandle.webrtcStuff) {\n      Janus.warn(\"Invalid handle\");\n      return \"Invalid handle\";\n    }\n\n    var config = pluginHandle.webrtcStuff;\n    if (!config.pc) return \"Invalid PeerConnection\"; // Start getting the bitrate, if getStats is supported\n\n    if (config.pc.getStats) {\n      if (!config.bitrate.timer) {\n        Janus.log(\"Starting bitrate timer (via getStats)\");\n        config.bitrate.timer = setInterval(function () {\n          config.pc.getStats().then(function (stats) {\n            stats.forEach(function (res) {\n              if (!res) return;\n              var inStats = false; // Check if these are statistics on incoming media\n\n              if ((res.mediaType === \"video\" || res.id.toLowerCase().indexOf(\"video\") > -1) && res.type === \"inbound-rtp\" && res.id.indexOf(\"rtcp\") < 0) {\n                // New stats\n                inStats = true;\n              } else if (res.type == 'ssrc' && res.bytesReceived && (res.googCodecName === \"VP8\" || res.googCodecName === \"\")) {\n                // Older Chromer versions\n                inStats = true;\n              } // Parse stats now\n\n\n              if (inStats) {\n                config.bitrate.bsnow = res.bytesReceived;\n                config.bitrate.tsnow = res.timestamp;\n\n                if (config.bitrate.bsbefore === null || config.bitrate.tsbefore === null) {\n                  // Skip this round\n                  config.bitrate.bsbefore = config.bitrate.bsnow;\n                  config.bitrate.tsbefore = config.bitrate.tsnow;\n                } else {\n                  // Calculate bitrate\n                  var timePassed = config.bitrate.tsnow - config.bitrate.tsbefore;\n                  if (Janus.webRTCAdapter.browserDetails.browser === \"safari\") timePassed = timePassed / 1000; // Apparently the timestamp is in microseconds, in Safari\n\n                  var bitRate = Math.round((config.bitrate.bsnow - config.bitrate.bsbefore) * 8 / timePassed);\n                  if (Janus.webRTCAdapter.browserDetails.browser === \"safari\") bitRate = parseInt(bitRate / 1000);\n                  config.bitrate.value = bitRate + ' kbits/sec'; //~ Janus.log(\"Estimated bitrate is \" + config.bitrate.value);\n\n                  config.bitrate.bsbefore = config.bitrate.bsnow;\n                  config.bitrate.tsbefore = config.bitrate.tsnow;\n                }\n              }\n            });\n          });\n        }, 1000);\n        return \"0 kbits/sec\"; // We don't have a bitrate value yet\n      }\n\n      return config.bitrate.value;\n    } else {\n      Janus.warn(\"Getting the video bitrate unsupported by browser\");\n      return \"Feature unsupported by browser\";\n    }\n  }\n\n  function webrtcError(error) {\n    Janus.error(\"WebRTC error:\", error);\n  }\n\n  function cleanupWebrtc(handleId, hangupRequest) {\n    Janus.log(\"Cleaning WebRTC stuff\");\n    var pluginHandle = pluginHandles[handleId];\n\n    if (!pluginHandle) {\n      // Nothing to clean\n      return;\n    }\n\n    var config = pluginHandle.webrtcStuff;\n\n    if (config) {\n      if (hangupRequest === true) {\n        // Send a hangup request (we don't really care about the response)\n        var request = {\n          \"janus\": \"hangup\",\n          \"transaction\": Janus.randomString(12)\n        };\n        if (pluginHandle.token) request[\"token\"] = pluginHandle.token;\n        if (apisecret) request[\"apisecret\"] = apisecret;\n        Janus.debug(\"Sending hangup request (handle=\" + handleId + \"):\");\n        Janus.debug(request);\n\n        if (websockets) {\n          request[\"session_id\"] = sessionId;\n          request[\"handle_id\"] = handleId;\n          ws.send(JSON.stringify(request));\n        } else {\n          Janus.httpAPICall(server + \"/\" + sessionId + \"/\" + handleId, {\n            verb: 'POST',\n            withCredentials: withCredentials,\n            body: request\n          });\n        }\n      } // Cleanup stack\n\n\n      config.remoteStream = null;\n\n      if (config.volume) {\n        if (config.volume[\"local\"] && config.volume[\"local\"].timer) clearInterval(config.volume[\"local\"].timer);\n        if (config.volume[\"remote\"] && config.volume[\"remote\"].timer) clearInterval(config.volume[\"remote\"].timer);\n      }\n\n      config.volume = {};\n      if (config.bitrate.timer) clearInterval(config.bitrate.timer);\n      config.bitrate.timer = null;\n      config.bitrate.bsnow = null;\n      config.bitrate.bsbefore = null;\n      config.bitrate.tsnow = null;\n      config.bitrate.tsbefore = null;\n      config.bitrate.value = null;\n\n      try {\n        // Try a MediaStreamTrack.stop() for each track\n        if (!config.streamExternal && config.myStream) {\n          Janus.log(\"Stopping local stream tracks\");\n          var tracks = config.myStream.getTracks();\n\n          var _iterator12 = _createForOfIteratorHelper(tracks),\n              _step12;\n\n          try {\n            for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n              var mst = _step12.value;\n              Janus.log(mst);\n              if (mst) mst.stop();\n            }\n          } catch (err) {\n            _iterator12.e(err);\n          } finally {\n            _iterator12.f();\n          }\n        }\n      } catch (e) {// Do nothing if this fails\n      }\n\n      config.streamExternal = false;\n      config.myStream = null; // Close PeerConnection\n\n      try {\n        config.pc.close();\n      } catch (e) {// Do nothing\n      }\n\n      config.pc = null;\n      config.candidates = null;\n      config.mySdp = null;\n      config.remoteSdp = null;\n      config.iceDone = false;\n      config.dataChannel = {};\n      config.dtmfSender = null;\n    }\n\n    pluginHandle.oncleanup();\n  } // Helper method to munge an SDP to enable simulcasting (Chrome only)\n\n\n  function mungeSdpForSimulcasting(sdp) {\n    // Let's munge the SDP to add the attributes for enabling simulcasting\n    // (based on https://gist.github.com/ggarber/a19b4c33510028b9c657)\n    var lines = sdp.split(\"\\r\\n\");\n    var video = false;\n    var ssrc = [-1],\n        ssrc_fid = [-1];\n    var cname = null,\n        msid = null,\n        mslabel = null,\n        label = null;\n    var insertAt = -1;\n\n    for (var i = 0; i < lines.length; i++) {\n      var mline = lines[i].match(/m=(\\w+) */);\n\n      if (mline) {\n        var medium = mline[1];\n\n        if (medium === \"video\") {\n          // New video m-line: make sure it's the first one\n          if (ssrc[0] < 0) {\n            video = true;\n          } else {\n            // We're done, let's add the new attributes here\n            insertAt = i;\n            break;\n          }\n        } else {\n          // New non-video m-line: do we have what we were looking for?\n          if (ssrc[0] > -1) {\n            // We're done, let's add the new attributes here\n            insertAt = i;\n            break;\n          }\n        }\n\n        continue;\n      }\n\n      if (!video) continue;\n      var fid = lines[i].match(/a=ssrc-group:FID (\\d+) (\\d+)/);\n\n      if (fid) {\n        ssrc[0] = fid[1];\n        ssrc_fid[0] = fid[2];\n        lines.splice(i, 1);\n        i--;\n        continue;\n      }\n\n      if (ssrc[0]) {\n        var match = lines[i].match('a=ssrc:' + ssrc[0] + ' cname:(.+)');\n\n        if (match) {\n          cname = match[1];\n        }\n\n        match = lines[i].match('a=ssrc:' + ssrc[0] + ' msid:(.+)');\n\n        if (match) {\n          msid = match[1];\n        }\n\n        match = lines[i].match('a=ssrc:' + ssrc[0] + ' mslabel:(.+)');\n\n        if (match) {\n          mslabel = match[1];\n        }\n\n        match = lines[i].match('a=ssrc:' + ssrc[0] + ' label:(.+)');\n\n        if (match) {\n          label = match[1];\n        }\n\n        if (lines[i].indexOf('a=ssrc:' + ssrc_fid[0]) === 0) {\n          lines.splice(i, 1);\n          i--;\n          continue;\n        }\n\n        if (lines[i].indexOf('a=ssrc:' + ssrc[0]) === 0) {\n          lines.splice(i, 1);\n          i--;\n          continue;\n        }\n      }\n\n      if (lines[i].length == 0) {\n        lines.splice(i, 1);\n        i--;\n        continue;\n      }\n    }\n\n    if (ssrc[0] < 0) {\n      // Couldn't find a FID attribute, let's just take the first video SSRC we find\n      insertAt = -1;\n      video = false;\n\n      for (var i = 0; i < lines.length; i++) {\n        var mline = lines[i].match(/m=(\\w+) */);\n\n        if (mline) {\n          var medium = mline[1];\n\n          if (medium === \"video\") {\n            // New video m-line: make sure it's the first one\n            if (ssrc[0] < 0) {\n              video = true;\n            } else {\n              // We're done, let's add the new attributes here\n              insertAt = i;\n              break;\n            }\n          } else {\n            // New non-video m-line: do we have what we were looking for?\n            if (ssrc[0] > -1) {\n              // We're done, let's add the new attributes here\n              insertAt = i;\n              break;\n            }\n          }\n\n          continue;\n        }\n\n        if (!video) continue;\n\n        if (ssrc[0] < 0) {\n          var value = lines[i].match(/a=ssrc:(\\d+)/);\n\n          if (value) {\n            ssrc[0] = value[1];\n            lines.splice(i, 1);\n            i--;\n            continue;\n          }\n        } else {\n          var match = lines[i].match('a=ssrc:' + ssrc[0] + ' cname:(.+)');\n\n          if (match) {\n            cname = match[1];\n          }\n\n          match = lines[i].match('a=ssrc:' + ssrc[0] + ' msid:(.+)');\n\n          if (match) {\n            msid = match[1];\n          }\n\n          match = lines[i].match('a=ssrc:' + ssrc[0] + ' mslabel:(.+)');\n\n          if (match) {\n            mslabel = match[1];\n          }\n\n          match = lines[i].match('a=ssrc:' + ssrc[0] + ' label:(.+)');\n\n          if (match) {\n            label = match[1];\n          }\n\n          if (lines[i].indexOf('a=ssrc:' + ssrc_fid[0]) === 0) {\n            lines.splice(i, 1);\n            i--;\n            continue;\n          }\n\n          if (lines[i].indexOf('a=ssrc:' + ssrc[0]) === 0) {\n            lines.splice(i, 1);\n            i--;\n            continue;\n          }\n        }\n\n        if (lines[i].length === 0) {\n          lines.splice(i, 1);\n          i--;\n          continue;\n        }\n      }\n    }\n\n    if (ssrc[0] < 0) {\n      // Still nothing, let's just return the SDP we were asked to munge\n      Janus.warn(\"Couldn't find the video SSRC, simulcasting NOT enabled\");\n      return sdp;\n    }\n\n    if (insertAt < 0) {\n      // Append at the end\n      insertAt = lines.length;\n    } // Generate a couple of SSRCs (for retransmissions too)\n    // Note: should we check if there are conflicts, here?\n\n\n    ssrc[1] = Math.floor(Math.random() * 0xFFFFFFFF);\n    ssrc[2] = Math.floor(Math.random() * 0xFFFFFFFF);\n    ssrc_fid[1] = Math.floor(Math.random() * 0xFFFFFFFF);\n    ssrc_fid[2] = Math.floor(Math.random() * 0xFFFFFFFF); // Add attributes to the SDP\n\n    for (var i = 0; i < ssrc.length; i++) {\n      if (cname) {\n        lines.splice(insertAt, 0, 'a=ssrc:' + ssrc[i] + ' cname:' + cname);\n        insertAt++;\n      }\n\n      if (msid) {\n        lines.splice(insertAt, 0, 'a=ssrc:' + ssrc[i] + ' msid:' + msid);\n        insertAt++;\n      }\n\n      if (mslabel) {\n        lines.splice(insertAt, 0, 'a=ssrc:' + ssrc[i] + ' mslabel:' + mslabel);\n        insertAt++;\n      }\n\n      if (label) {\n        lines.splice(insertAt, 0, 'a=ssrc:' + ssrc[i] + ' label:' + label);\n        insertAt++;\n      } // Add the same info for the retransmission SSRC\n\n\n      if (cname) {\n        lines.splice(insertAt, 0, 'a=ssrc:' + ssrc_fid[i] + ' cname:' + cname);\n        insertAt++;\n      }\n\n      if (msid) {\n        lines.splice(insertAt, 0, 'a=ssrc:' + ssrc_fid[i] + ' msid:' + msid);\n        insertAt++;\n      }\n\n      if (mslabel) {\n        lines.splice(insertAt, 0, 'a=ssrc:' + ssrc_fid[i] + ' mslabel:' + mslabel);\n        insertAt++;\n      }\n\n      if (label) {\n        lines.splice(insertAt, 0, 'a=ssrc:' + ssrc_fid[i] + ' label:' + label);\n        insertAt++;\n      }\n    }\n\n    lines.splice(insertAt, 0, 'a=ssrc-group:FID ' + ssrc[2] + ' ' + ssrc_fid[2]);\n    lines.splice(insertAt, 0, 'a=ssrc-group:FID ' + ssrc[1] + ' ' + ssrc_fid[1]);\n    lines.splice(insertAt, 0, 'a=ssrc-group:FID ' + ssrc[0] + ' ' + ssrc_fid[0]);\n    lines.splice(insertAt, 0, 'a=ssrc-group:SIM ' + ssrc[0] + ' ' + ssrc[1] + ' ' + ssrc[2]);\n    sdp = lines.join(\"\\r\\n\");\n    if (!sdp.endsWith(\"\\r\\n\")) sdp += \"\\r\\n\";\n    return sdp;\n  } // Helper methods to parse a media object\n\n\n  function isAudioSendEnabled(media) {\n    Janus.debug(\"isAudioSendEnabled:\", media);\n    if (!media) return true; // Default\n\n    if (media.audio === false) return false; // Generic audio has precedence\n\n    if (media.audioSend === undefined || media.audioSend === null) return true; // Default\n\n    return media.audioSend === true;\n  }\n\n  function isAudioSendRequired(media) {\n    Janus.debug(\"isAudioSendRequired:\", media);\n    if (!media) return false; // Default\n\n    if (media.audio === false || media.audioSend === false) return false; // If we're not asking to capture audio, it's not required\n\n    if (media.failIfNoAudio === undefined || media.failIfNoAudio === null) return false; // Default\n\n    return media.failIfNoAudio === true;\n  }\n\n  function isAudioRecvEnabled(media) {\n    Janus.debug(\"isAudioRecvEnabled:\", media);\n    if (!media) return true; // Default\n\n    if (media.audio === false) return false; // Generic audio has precedence\n\n    if (media.audioRecv === undefined || media.audioRecv === null) return true; // Default\n\n    return media.audioRecv === true;\n  }\n\n  function isVideoSendEnabled(media) {\n    Janus.debug(\"isVideoSendEnabled:\", media);\n    if (!media) return true; // Default\n\n    if (media.video === false) return false; // Generic video has precedence\n\n    if (media.videoSend === undefined || media.videoSend === null) return true; // Default\n\n    return media.videoSend === true;\n  }\n\n  function isVideoSendRequired(media) {\n    Janus.debug(\"isVideoSendRequired:\", media);\n    if (!media) return false; // Default\n\n    if (media.video === false || media.videoSend === false) return false; // If we're not asking to capture video, it's not required\n\n    if (media.failIfNoVideo === undefined || media.failIfNoVideo === null) return false; // Default\n\n    return media.failIfNoVideo === true;\n  }\n\n  function isVideoRecvEnabled(media) {\n    Janus.debug(\"isVideoRecvEnabled:\", media);\n    if (!media) return true; // Default\n\n    if (media.video === false) return false; // Generic video has precedence\n\n    if (media.videoRecv === undefined || media.videoRecv === null) return true; // Default\n\n    return media.videoRecv === true;\n  }\n\n  function isScreenSendEnabled(media) {\n    Janus.debug(\"isScreenSendEnabled:\", media);\n    if (!media) return false;\n    if (_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(media.video) !== 'object' || _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(media.video.mandatory) !== 'object') return false;\n    var constraints = media.video.mandatory;\n    if (constraints.chromeMediaSource) return constraints.chromeMediaSource === 'desktop' || constraints.chromeMediaSource === 'screen';else if (constraints.mozMediaSource) return constraints.mozMediaSource === 'window' || constraints.mozMediaSource === 'screen';else if (constraints.mediaSource) return constraints.mediaSource === 'window' || constraints.mediaSource === 'screen';\n    return false;\n  }\n\n  function isDataEnabled(media) {\n    Janus.debug(\"isDataEnabled:\", media);\n\n    if (Janus.webRTCAdapter.browserDetails.browser === \"edge\") {\n      Janus.warn(\"Edge doesn't support data channels yet\");\n      return false;\n    }\n\n    if (media === undefined || media === null) return false; // Default\n\n    return media.data === true;\n  }\n\n  function isTrickleEnabled(trickle) {\n    Janus.debug(\"isTrickleEnabled:\", trickle);\n    return trickle === false ? false : true;\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Janus);\n\n//# sourceURL=webpack:///./client/src/screens/test/SFU/janus.js?");

/***/ }),

/***/ "./client/src/screens/test/SFU/streaming/index.js":
/*!********************************************************!*\
  !*** ./client/src/screens/test/SFU/streaming/index.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"../../node_modules/@babel/runtime/helpers/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"../../node_modules/@babel/runtime/helpers/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ \"../../node_modules/@babel/runtime/helpers/inherits.js\");\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \"../../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js\");\n/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \"../../node_modules/@babel/runtime/helpers/getPrototypeOf.js\");\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react */ \"../../node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_5__);\n\n\n\n\n\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default()(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/* eslint-disable jsx-a11y/media-has-caption */\n\n/* eslint-disable react/prop-types */\n\n\nvar Streaming = /*#__PURE__*/function (_React$Component) {\n  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2___default()(Streaming, _React$Component);\n\n  var _super = _createSuper(Streaming);\n\n  function Streaming() {\n    var _temp, _this;\n\n    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, Streaming);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default()(_this, (_temp = _this = _super.call.apply(_super, [this].concat(args)), _this.state = {}, _this.listMountPoint = function () {\n      var webRtc = _this.props.webRtc;\n      var janus = webRtc.janus;\n      var streaming = janus.streaming;\n      var body = {\n        request: 'list'\n      };\n      streaming.send({\n        message: body,\n        success: function success(result) {\n          if (result.list) {\n            var list = result.list;\n            console.log(\"Got a list of available streams\", list);\n          }\n        }\n      });\n    }, _this.getStreamInfo = function () {\n      var webRtc = _this.props.webRtc;\n      var janus = webRtc.janus;\n      var streaming = janus.streaming; // Send a request for more info on the mountpoint we subscribed to\n\n      var body = {\n        request: 'info',\n        id: 10\n      };\n      streaming.send({\n        message: body,\n        success: function success(result) {\n          if (result && result.info && result.info.metadata) {\n            console.log('stream info');\n          }\n\n          console.log('stream result', result);\n        }\n      });\n    }, _this.watchStream = function () {\n      var webRtc = _this.props.webRtc;\n      var janus = webRtc.janus;\n      var streaming = janus.streaming;\n      var body = {\n        request: 'watch',\n        id: 1\n      };\n      streaming.send({\n        message: body\n      }); // No remote video yet\n      // Get some more info for the mountpoint to display, if any\n    }, _temp));\n  }\n\n  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(Streaming, [{\n    key: \"render\",\n    value: function render() {\n      console.log('props in streaming test', this.props);\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement(\"div\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement(\"button\", {\n        style: {\n          margin: 5,\n          backgroundColor: 'green'\n        },\n        text: \"List Stream\",\n        onClick: this.listMountPoint\n      }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement(\"button\", {\n        style: {\n          margin: 5,\n          backgroundColor: 'green'\n        },\n        text: \"Get Stream Info\",\n        onClick: this.getStreamInfo\n      }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement(\"button\", {\n        style: {\n          margin: 5,\n          backgroundColor: 'green'\n        },\n        text: \"Watch Stream\",\n        onClick: this.watchStream\n      }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement(\"video\", {\n        id: \"remote-stream\",\n        style: {\n          height: 200,\n          width: 200,\n          background: 'black'\n        },\n        autoPlay: true,\n        controls: true,\n        playsInline: true\n      }));\n    }\n  }]);\n\n  return Streaming;\n}(react__WEBPACK_IMPORTED_MODULE_5___default.a.Component);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Streaming);\n\n//# sourceURL=webpack:///./client/src/screens/test/SFU/streaming/index.js?");

/***/ }),

/***/ "./client/src/screens/test/SFU/videoCall/index.js":
/*!********************************************************!*\
  !*** ./client/src/screens/test/SFU/videoCall/index.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ \"../../node_modules/@babel/runtime/helpers/asyncToGenerator.js\");\n/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"../../node_modules/@babel/runtime/helpers/defineProperty.js\");\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"../../node_modules/@babel/runtime/helpers/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"../../node_modules/@babel/runtime/helpers/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ \"../../node_modules/@babel/runtime/helpers/inherits.js\");\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \"../../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js\");\n/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \"../../node_modules/@babel/runtime/helpers/getPrototypeOf.js\");\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @babel/runtime/regenerator */ \"../../node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! react */ \"../../node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var webrtc_adapter__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! webrtc-adapter */ \"../../node_modules/webrtc-adapter/src/js/adapter_core.js\");\n/* harmony import */ var _janus__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../janus */ \"./client/src/screens/test/SFU/janus.js\");\n\n\n\n\n\n\n\n\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6___default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6___default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5___default()(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/* eslint-disable jsx-a11y/media-has-caption */\n\n\n\n\nvar Index = /*#__PURE__*/function (_React$Component) {\n  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default()(Index, _React$Component);\n\n  var _super = _createSuper(Index);\n\n  function Index(props) {\n    var _this;\n\n    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2___default()(this, Index);\n\n    _this = _super.call(this, props);\n\n    _this.janusAttachment = function () {\n      var janus = _this.state.janus;\n      janus.attach({\n        plugin: 'janus.plugin.videocall',\n        success: function success(pluginHandle) {\n          // Plugin attached! 'pluginHandle' is our handle\n          console.log('Puligin handle', pluginHandle);\n          _this.videoCall = pluginHandle;\n          var body = {\n            audio: true,\n            video: false\n          };\n\n          _this.videoCall.send({\n            message: body\n          });\n        },\n        error: function error(cause) {\n          // Couldn't attach to the plugin\n          console.error('Faild to attach plugin', cause);\n        },\n        consentDialog: function consentDialog(on) {\n          // e.g., Darken the screen if on=true (getUserMedia incoming), restore it otherwise\n          console.log('consetDialog', on);\n        },\n        onmessage: function onmessage(msg, jsep) {\n          // We got a message/event (msg) from the plugin\n          // If jsep is not null, this involves a WebRTC negotiation\n          console.log('onmessage', msg, jsep);\n          _janus__WEBPACK_IMPORTED_MODULE_10__[\"default\"].log(' ::: Got a message :::', msg);\n          var result = msg.result;\n          console.log('Result', result);\n\n          if (result !== null && result !== undefined) {\n            if (result.list !== undefined && result.list !== null) {\n              var list = result.list;\n              _janus__WEBPACK_IMPORTED_MODULE_10__[\"default\"].debug('Got a list of registered peers:');\n              _janus__WEBPACK_IMPORTED_MODULE_10__[\"default\"].debug(list);\n            } else if (result.event !== undefined && result.event !== null) {\n              var event = result.event;\n\n              _this.setState({\n                currentState: event\n              });\n\n              if (event === 'registered') {\n                var myusername = result.username;\n                _janus__WEBPACK_IMPORTED_MODULE_10__[\"default\"].log('Successfully registered as ', myusername); // Get a list of available peers, just for fun\n\n                _this.videoCall.send({\n                  message: {\n                    request: 'list'\n                  }\n                }); // TODO Enable buttons to call now\n\n              } else if (event === 'calling') {\n                _janus__WEBPACK_IMPORTED_MODULE_10__[\"default\"].log('Waiting for the peer to answer...');\n\n                _this.setState({\n                  currentState: event\n                }); // TODO Any ringtone?\n\n              } else if (event === 'incomingcall') {\n                _janus__WEBPACK_IMPORTED_MODULE_10__[\"default\"].log('Incoming call from', result.username);\n                var yourusername = result.username;\n\n                _this.setState({\n                  currentState: event\n                }); // Notify user\n\n\n                _this.videoCall.createAnswer({\n                  jsep: jsep,\n                  media: {\n                    video: true,\n                    audio: true\n                  },\n                  success: function success(jsep) {\n                    _janus__WEBPACK_IMPORTED_MODULE_10__[\"default\"].log('Got SDP!');\n                    _janus__WEBPACK_IMPORTED_MODULE_10__[\"default\"].debug(jsep);\n                    var body = {\n                      request: 'accept'\n                    };\n\n                    _this.videoCall.send({\n                      message: body,\n                      jsep: jsep\n                    });\n                  },\n                  error: function error(_error) {\n                    _janus__WEBPACK_IMPORTED_MODULE_10__[\"default\"].error('WebRTC error:', _error);\n                  }\n                });\n              } else if (event === 'accepted') {\n                var peer = result.username;\n\n                if (peer === null || peer === undefined) {// this.setState({ currentState: `Call Started ${peer}` });\n                } else {\n                  _janus__WEBPACK_IMPORTED_MODULE_10__[\"default\"].log(peer, ' accepted the call!');\n                } // Video call can start\n\n\n                if (jsep) _this.videoCall.handleRemoteJsep({\n                  jsep: jsep\n                });\n              } else if (event === 'update') {\n                // An 'update' event may be used to provide renegotiation attempts\n                if (jsep) {\n                  if (jsep.type === 'answer') {\n                    _this.videoCall.handleRemoteJsep({\n                      jsep: jsep\n                    });\n                  } else {\n                    _this.videoCall.createAnswer({\n                      jsep: jsep,\n                      media: {\n                        video: true,\n                        audio: true\n                      },\n                      // Let's negotiate data channels as well\n                      success: function success(jsep) {\n                        _janus__WEBPACK_IMPORTED_MODULE_10__[\"default\"].debug('Got SDP!');\n                        _janus__WEBPACK_IMPORTED_MODULE_10__[\"default\"].debug(jsep);\n                        var body = {\n                          request: 'set'\n                        };\n\n                        _this.videoCall.send({\n                          message: body,\n                          jsep: jsep\n                        });\n                      },\n                      error: function error(_error2) {\n                        _janus__WEBPACK_IMPORTED_MODULE_10__[\"default\"].error('WebRTC error:', _error2);\n                      }\n                    });\n                  }\n                }\n              }\n            }\n          } else {// FIXME Error?\n          }\n        },\n        onlocalstream: function onlocalstream(stream) {\n          // We have a local stream (getUserMedia worked!) to display\n          console.log('onlocalStream', stream);\n          var leftVideoElment = document.getElementById('left-video');\n          leftVideoElment.srcObject = stream;\n        },\n        onremotestream: function onremotestream(stream) {\n          // We have a remote stream (working PeerConnection!) to\n          console.log('onremotestream', stream);\n          var rightVideoElment = document.getElementById('right-video');\n          rightVideoElment.srcObject = stream;\n        },\n        oncleanup: function oncleanup() {\n          // PeerConnection with the plugin closed, clean the UI\n          // The plugin handle is still valid so we can create a new one\n          console.log('onCleanup called');\n        },\n        detached: function detached() {\n          // Connection with the plugin closed, get rid of its features\n          // The plugin handle is not valid anymore\n          console.log('clear the stuff after plugin detach');\n        }\n      });\n    };\n\n    _this.onUserRegister = function () {\n      var username = _this.state.username;\n      var register = {\n        request: 'register',\n        username: username\n      };\n\n      _this.videoCall.send({\n        message: register\n      });\n    };\n\n    _this.onInputChange = function (type, e) {\n      console.log('Inpute change', e.target.value);\n\n      _this.setState(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default()({}, type, e.target.value));\n    };\n\n    _this.onAnswerHandler = function () {};\n\n    _this.onCallHandler = /*#__PURE__*/function () {\n      var _ref = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_7___default.a.mark(function _callee(media) {\n        var remoteUserName;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_7___default.a.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                remoteUserName = _this.state.remoteUserName; // const stream = await mediaSelector('screenshare');\n\n                _this.videoCall.createOffer({\n                  // No media property provided: by default,\n                  // it's sendrecv for audio and video\n                  media: media,\n                  success: function success(jsep) {\n                    // Got our SDP! Send our OFFER to the plugin\n                    var body = {\n                      request: 'call',\n                      username: remoteUserName\n                    };\n\n                    _this.videoCall.send({\n                      message: body,\n                      jsep: jsep\n                    });\n                  },\n                  error: function error(_error3) {\n                    // An error occurred...\n                    console.error('Error creatign offer', _error3);\n                  },\n                  customizeSdp: function customizeSdp(jsep) {// if you want to modify the original sdp, do as the following\n                    // oldSdp = jsep.sdp;\n                    // jsep.sdp = yourNewSdp;\n                  }\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.callCloseHandler = function () {\n      _this.videoCall.hangup();\n    };\n\n    _this.videoCall = null;\n    _this.state = {\n      janus: null,\n      isJanusConnected: false,\n      currentState: null\n    };\n    return _this;\n  }\n\n  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3___default()(Index, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      _janus__WEBPACK_IMPORTED_MODULE_10__[\"default\"].init({\n        debug: true,\n        dependencies: _janus__WEBPACK_IMPORTED_MODULE_10__[\"default\"].useDefaultDependencies({\n          adapter: webrtc_adapter__WEBPACK_IMPORTED_MODULE_9__[\"default\"]\n        }),\n        // or: Janus.useOldDependencies() to get the behaviour of previous Janus versions\n        callback: function callback() {\n          console.log('working fine janus');\n        }\n      });\n      var janus = new _janus__WEBPACK_IMPORTED_MODULE_10__[\"default\"]({\n        server: 'https://properclass.com:8089/janus',\n        iceServers: [{\n          urls: 'turn:properclass.com:3478?transport=tcp',\n          username: 'properclass',\n          credential: 'proper199201'\n        }],\n        success: function success() {\n          // Done! attach to plugin XYZ\n          console.log('server is conneted now go for plugin atatachment');\n\n          _this2.janusAttachment();\n        },\n        error: function error(cause) {\n          // Error, can't go on...\n          console.error('server config error', cause);\n        },\n        destroyed: function destroyed() {// I should get rid of this\n        }\n      });\n      this.setState({\n        janus: janus\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      console.log('Video Call state value', this.state);\n      var currentState = this.state.currentState;\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_8___default.a.createElement(\"div\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_8___default.a.createElement(\"h1\", null, currentState), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_8___default.a.createElement(\"div\", {\n        style: {\n          width: '50%',\n          marginTop: 10,\n          padding: 10\n        }\n      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_8___default.a.createElement(\"input\", {\n        onChange: function onChange(e) {\n          return _this3.onInputChange('username', e);\n        },\n        placeholder: \"Enter your name\"\n      }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_8___default.a.createElement(\"button\", {\n        style: {\n          margin: 10\n        },\n        text: \"Register\",\n        intent: \"success\",\n        onClick: this.onUserRegister\n      }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_8___default.a.createElement(\"input\", {\n        placeholder: \"Enter remote user name\",\n        onChange: function onChange(e) {\n          return _this3.onInputChange('remoteUserName', e);\n        }\n      }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_8___default.a.createElement(\"div\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_8___default.a.createElement(\"button\", {\n        style: {\n          margin: 10,\n          backgroundColor: 'green'\n        },\n        text: \"Audio Call\",\n        onClick: function onClick() {\n          return _this3.onCallHandler({\n            audio: true,\n            videoSend: false,\n            videoRecv: true\n          });\n        }\n      }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_8___default.a.createElement(\"button\", {\n        style: {\n          margin: 10,\n          backgroundColor: 'green'\n        },\n        text: \"Video Call\",\n        onClick: function onClick() {\n          return _this3.onCallHandler({\n            video: true,\n            audio: true\n          });\n        }\n      }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_8___default.a.createElement(\"button\", {\n        style: {\n          margin: 10,\n          backgroundColor: 'green'\n        },\n        text: \"Screen Share\",\n        onClick: function onClick() {\n          return _this3.onCallHandler({\n            video: 'screen'\n          });\n        }\n      }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_8___default.a.createElement(\"button\", {\n        style: {\n          margin: 10,\n          backgroundColor: 'green'\n        },\n        text: \"Close Call\",\n        onClick: this.callCloseHandler\n      }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_8___default.a.createElement(\"div\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_8___default.a.createElement(\"span\", null, \"local\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_8___default.a.createElement(\"video\", {\n        playsInline: true,\n        controlsList: \"noremoteplayback\",\n        autoPlay: true,\n        controls: true,\n        id: \"left-video\",\n        style: {\n          height: 300,\n          width: 300\n        }\n      }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_8___default.a.createElement(\"span\", null, \"remote\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_8___default.a.createElement(\"video\", {\n        playsInline: true,\n        controlsList: \"noremoteplayback\",\n        controls: true,\n        autoPlay: true,\n        id: \"right-video\",\n        style: {\n          height: 300,\n          width: 300\n        }\n      })));\n    }\n  }]);\n\n  return Index;\n}(react__WEBPACK_IMPORTED_MODULE_8___default.a.Component);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Index);\n\n//# sourceURL=webpack:///./client/src/screens/test/SFU/videoCall/index.js?");

/***/ }),

/***/ "./client/src/screens/test/SFU/videoConference/index.js":
/*!**************************************************************!*\
  !*** ./client/src/screens/test/SFU/videoConference/index.js ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"../../node_modules/@babel/runtime/helpers/defineProperty.js\");\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"../../node_modules/@babel/runtime/helpers/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"../../node_modules/@babel/runtime/helpers/createClass.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ \"../../node_modules/@babel/runtime/helpers/inherits.js\");\n/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \"../../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js\");\n/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \"../../node_modules/@babel/runtime/helpers/getPrototypeOf.js\");\n/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react */ \"../../node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var webrtc_adapter__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! webrtc-adapter */ \"../../node_modules/webrtc-adapter/src/js/adapter_core.js\");\n/* harmony import */ var _janus__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../janus */ \"./client/src/screens/test/SFU/janus.js\");\n\n\n\n\n\n\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default()(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/* eslint-disable jsx-a11y/media-has-caption */\n\n\n\n\nvar Index = /*#__PURE__*/function (_React$Component) {\n  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3___default()(Index, _React$Component);\n\n  var _super = _createSuper(Index);\n\n  function Index(props) {\n    var _this;\n\n    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default()(this, Index);\n\n    _this = _super.call(this, props);\n\n    _this.janusAttachment = function () {\n      var janus = _this.state.janus;\n      janus.attach({\n        plugin: 'janus.plugin.videoroom',\n        opaqueId: \"videoroomtest-\" + _janus__WEBPACK_IMPORTED_MODULE_8__[\"default\"].randomString(12),\n        success: function success(pluginHandle) {\n          // Plugin attached! 'pluginHandle' is our handle\n          console.log('Puligin handle', pluginHandle);\n          _this.sfutest = pluginHandle;\n        },\n        error: function error(cause) {\n          // Couldn't attach to the plugin\n          console.error('Faild to attach plugin', cause);\n        },\n        consentDialog: function consentDialog(on) {\n          // e.g., Darken the screen if on=true (getUserMedia incoming), restore it otherwise\n          console.log('consetDialog', on);\n        },\n        mediaState: function mediaState(medium, on) {\n          _janus__WEBPACK_IMPORTED_MODULE_8__[\"default\"].log(\"Janus \" + (on ? \"started\" : \"stopped\") + \" receiving our \" + medium);\n        },\n        webrtcState: function webrtcState(on) {\n          _janus__WEBPACK_IMPORTED_MODULE_8__[\"default\"].log(\"Janus says our WebRTC PeerConnection is \" + (on ? \"up\" : \"down\") + \" now\");\n        },\n        onmessage: function onmessage(msg, jsep) {\n          // We got a message/event (msg) from the plugin\n          // If jsep is not null, this involves a WebRTC negotiation\n          console.log('onmessage', msg, jsep);\n          var event = msg.videoroom;\n\n          if (event === 'joined') {\n            // Publisher/manager created, negotiate WebRTC and attach to existing feeds, if any\n            _this.myid = msg.id;\n            _this.mypvtid = msg.private_id;\n\n            _this.setState({\n              myid: msg.id,\n              mypvtid: msg.private_id\n            });\n\n            console.log('Successfully joined room ', msg.room, 'with ID', _this.myid); // this.publishOwnFeed(true);\n            // Any new feed to attach to?\n\n            if (msg.publishers !== undefined && msg.publishers !== null) {\n              var list = msg.publishers;\n              console.log('Got a list of available publishers/feeds:', list);\n\n              for (var f = 0; f < list.length; f += 1) {\n                var _list$f = list[f],\n                    id = _list$f.id,\n                    display = _list$f.display,\n                    audio = _list$f.audio,\n                    video = _list$f.video;\n\n                _this.newRemoteFeed(id, display, audio, video);\n              }\n            }\n          } else if (event === 'event') {\n            // Any new feed to attach to?\n            if (msg.publishers !== undefined && msg.publishers !== null) {\n              var _list = msg.publishers;\n              _janus__WEBPACK_IMPORTED_MODULE_8__[\"default\"].log('Got a list of available publishers/feeds:', _list);\n              _janus__WEBPACK_IMPORTED_MODULE_8__[\"default\"].debug(_list);\n\n              for (var _f = 0; _f < _list.length; _f += 1) {\n                var _list$_f = _list[_f],\n                    _id = _list$_f.id,\n                    _display = _list$_f.display,\n                    _audio = _list$_f.audio,\n                    _video = _list$_f.video;\n                _janus__WEBPACK_IMPORTED_MODULE_8__[\"default\"].log(\"  >> [\" + _id + \"] \" + _display + \" (audio: \" + _audio + \", video: \" + _video + \")\");\n\n                _this.newRemoteFeed(_id, _display, _audio, _video);\n              }\n            } else if (msg.leaving !== undefined && msg.leaving !== null) {\n              // One of the publishers has gone away?\n              var leaving = msg.leaving;\n              _janus__WEBPACK_IMPORTED_MODULE_8__[\"default\"].log('Publisher left: ', leaving);\n\n              _this.setState({\n                remoteStreams: _objectSpread(_objectSpread({}, _this.state.remoteStreams), {}, _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()({}, leaving, {\n                  leave: true\n                }))\n              });\n\n              var remoteFeed = null;\n\n              for (var i = 1; i < 6; i += 1) {\n                if (_this.feeds[i] !== null && _this.feeds[i] !== undefined && _this.feeds[i].rfid === leaving) {\n                  remoteFeed = _this.feeds[i];\n                  break;\n                }\n              }\n\n              if (remoteFeed != null) {\n                _janus__WEBPACK_IMPORTED_MODULE_8__[\"default\"].log('Feed ', remoteFeed.rfid, '(', remoteFeed.rfdisplay, ') has left the room, detaching');\n                _this.feeds[remoteFeed.rfindex] = null;\n                remoteFeed.detach();\n              }\n            } else if (msg.unpublished !== undefined && msg.unpublished !== null) {\n              // One of the publishers has unpublished?\n              var unpublished = msg.unpublished;\n              _janus__WEBPACK_IMPORTED_MODULE_8__[\"default\"].log('Publisher left: ', unpublished);\n\n              if (unpublished === 'ok') {\n                // That's us\n                _this.sfutest.hangup();\n\n                return;\n              }\n\n              var _remoteFeed = null;\n\n              for (var _i = 1; _i < 6; _i += 1) {\n                if (_this.feeds[_i] !== null && _this.feeds[_i] !== undefined && _this.feeds[_i].rfid === unpublished) {\n                  _remoteFeed = _this.feeds[_i];\n                  break;\n                }\n              }\n\n              if (_remoteFeed != null) {\n                _janus__WEBPACK_IMPORTED_MODULE_8__[\"default\"].log('Feed ', _remoteFeed.rfid, ' (', _remoteFeed.rfdisplay, ') has left the room, detaching');\n                _this.feeds[_remoteFeed.rfindex] = null;\n\n                _remoteFeed.detach();\n              }\n            }\n          } else if (event === 'destroyed') {\n            // The room has been destroyed\n            console.log('The room has been destroyed!');\n          }\n\n          if (jsep !== undefined && jsep !== null) {\n            console.log('Handling SDP as well...', jsep);\n\n            _this.sfutest.handleRemoteJsep({\n              jsep: jsep\n            });\n          }\n        },\n        onlocalstream: function onlocalstream(stream) {\n          // We have a local stream (getUserMedia worked!) to display\n          console.log('onlocalStream', stream);\n          var myVideo = document.getElementById('my-video');\n          myVideo.srcObject = stream;\n        },\n        onremotestream: function onremotestream(stream) {\n          // We have a remote stream (working PeerConnection!) to\n          console.log('onremotestream', stream);\n          var rightVideoElment = document.getElementById('right-video');\n          rightVideoElment.srcObject = stream;\n        },\n        oncleanup: function oncleanup() {\n          // PeerConnection with the plugin closed, clean the UI\n          // The plugin handle is still valid so we can create a new one\n          console.log('onCleanup called');\n        },\n        detached: function detached() {\n          // Connection with the plugin closed, get rid of its features\n          // The plugin handle is not valid anymore\n          console.log('clear the stuff after plugin detach');\n        }\n      });\n    };\n\n    _this.joinHandler = function () {\n      var username = _this.state.username;\n      console.log('join handler called', _this.myroom, username);\n      var register = {\n        request: 'join',\n        room: _this.myroom,\n        ptype: \"publisher\",\n        display: username\n      };\n      _this.myusername = username;\n\n      _this.sfutest.send({\n        message: register\n      });\n    };\n\n    _this.publishOwnFeed = function (media) {\n      // Publish our stream\n      _this.sfutest.createOffer({\n        // Add data:true here if you want to publish datachannels as well\n        media: media,\n        // Publishers are sendonly\n        success: function success(jsep) {\n          console.log('Got publisher SDP!', jsep);\n          var publish = {\n            request: 'configure',\n            audio: true,\n            video: true\n          };\n\n          _this.sfutest.send({\n            message: publish,\n            jsep: jsep\n          });\n        },\n        error: function error(_error) {\n          console.error('error on publishing own feed', _error);\n        }\n      });\n    };\n\n    _this.newRemoteFeed = function (id, display, audio, video) {\n      // A new feed has been published, create a new plugin handle and attach to it as a subscriber\n      var remoteFeed = null;\n      var janus = _this.state.janus;\n      janus.attach({\n        plugin: 'janus.plugin.videoroom',\n        // opaqueId: opaqueId,\n        success: function success(pluginHandle) {\n          remoteFeed = pluginHandle;\n          remoteFeed.simulcastStarted = false;\n          console.log('Plugin attached! (', remoteFeed.getPlugin(), 'id=', remoteFeed.getId(), ')');\n          console.log('  -- This is a subscriber'); // We wait for the plugin to send us an offer\n\n          var subscribe = {\n            request: 'join',\n            room: _this.myroom,\n            ptype: \"subscriber\",\n            feed: id,\n            private_id: _this.mypvtid\n          }; // In case you don't want to receive audio, video or data, even if the\n          // publisher is sending them, set the 'offer_audio', 'offer_video' or\n          // 'offer_data' properties to false (they're true by default), e.g.:\n          // \t\tsubscribe[\"offer_video\"] = false;\n          // For example, if the publisher is VP8 and this is Safari, let's avoid video\n\n          if (_janus__WEBPACK_IMPORTED_MODULE_8__[\"default\"].webRTCAdapter.browserDetails.browser === 'safari' && (video === 'vp9' || video === 'vp8' && !_janus__WEBPACK_IMPORTED_MODULE_8__[\"default\"].safariVp8)) {\n            if (video) video = video.toUpperCase();\n            console.error('Publisher is using ', video, ', but Safari doesnt support it: disabling video');\n            subscribe.offer_video = false;\n          }\n\n          remoteFeed.videoCodec = video;\n          remoteFeed.send({\n            message: subscribe\n          });\n        },\n        error: function error(_error2) {\n          console.error('  -- Error attaching plugin...', _error2);\n        },\n        onmessage: function onmessage(msg, jsep) {\n          console.log(' ::: Got a message (subscriber) :::', msg);\n          var event = msg.videoroom;\n          console.log('Event: ', event);\n\n          if (msg.error !== undefined && msg.error !== null) {\n            console.error(msg.error);\n          } else if (event != undefined && event != null) {\n            console.log('Remote Feed Event', msg);\n\n            if (event === 'attached') {\n              // Subscriber created and attached\n              console.log('create element for remote video');\n            } else if (event === 'event') {\n              // Check if we got an event on a simulcast-related event from this publisher\n              var substream = msg.substream;\n              var temporal = msg.temporal;\n\n              if (substream !== null && substream !== undefined || temporal !== null && temporal !== undefined) {\n                console.log('do simulcatd related work');\n\n                if (!remoteFeed.simulcastStarted) {\n                  remoteFeed.simulcastStarted = true; // Add some new buttons\n                  // addSimulcastButtons(remoteFeed.rfindex, remoteFeed.videoCodec === \"vp8\" || remoteFeed.videoCodec === \"h264\");\n                } // We just received notice that there's been a switch, update the buttons\n                // updateSimulcastButtons(remoteFeed.rfindex, substream, temporal);\n\n              }\n            } else {// What has just happened?\n              }\n          }\n\n          if (jsep !== undefined && jsep !== null) {\n            console.log('Handling SDP as well in subscriber feed...', jsep); // Answer and attach\n\n            remoteFeed.createAnswer({\n              jsep: jsep,\n              // Add data:true here if you want to subscribe to datachannels as well\n              // (obviously only works if the publisher offered them in the first place)\n              media: {\n                audioSend: false,\n                videoSend: false\n              },\n              // We want recvonly audio/video\n              success: function success(jsep) {\n                console.log('Got SDP! in feed answer', jsep);\n                var body = {\n                  request: 'start',\n                  room: _this.myroom\n                };\n                remoteFeed.send({\n                  message: body,\n                  jsep: jsep\n                });\n              },\n              error: function error(_error3) {\n                console.error('WebRTC error:', _error3);\n              }\n            });\n          }\n        },\n        webrtcState: function webrtcState(on) {\n          console.log(\"Janus says this WebRTC PeerConnection (feed #\" + remoteFeed.rfindex + \") is \" + (on ? \"up\" : \"down\") + \" now\");\n        },\n        onlocalstream: function onlocalstream(stream) {// The subscriber stream is recvonly, we don't expect anything here\n        },\n        onremotestream: function onremotestream(stream) {\n          console.log('Remote feed #', remoteFeed.rfindex);\n          console.log('remote stream', stream);\n\n          _this.setState({\n            remoteStreams: _objectSpread(_objectSpread({}, _this.state.remoteStreams), {}, _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()({}, id, {\n              id: id,\n              stream: stream,\n              display: display,\n              leave: false\n            }))\n          }); // const remoteVideo = document.getElementById('remote-video');\n          // remoteVideo.srcObject = stream;\n\n        },\n        oncleanup: function oncleanup() {\n          console.log(' ::: Got a cleanup notification (remote feed ', id, ') :::');\n        }\n      });\n    };\n\n    _this.inputHandler = function (e) {\n      _this.setState({\n        username: e.target.value\n      });\n    };\n\n    _this.onUnPublishHandler = function () {\n      var unpublish = {\n        request: 'unpublish'\n      };\n\n      _this.sfutest.send({\n        message: unpublish\n      });\n    };\n\n    _this.onHangUp = function () {\n      _this.sfutest.hangup();\n    };\n\n    _this.videoElement = function (_ref) {\n      var id = _ref.id,\n          display = _ref.display;\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(\"div\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(\"video\", {\n        playsInline: true,\n        controlsList: \"noremoteplayback\",\n        autoPlay: true,\n        id: id,\n        controls: true,\n        style: {\n          height: 300,\n          width: 300\n        }\n      }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(\"h2\", null, display));\n    };\n\n    _this.sfutest = null;\n    _this.opaqueId = \"videoroomtest-\" + _janus__WEBPACK_IMPORTED_MODULE_8__[\"default\"].randomString(12);\n    _this.myroom = 1234; // Demo room\n\n    _this.myusername = null;\n    _this.myid = null;\n    _this.mystream = null; // We use this other ID just to map our subscriptions to us\n\n    _this.mypvtid = null;\n    _this.feeds = [];\n    _this.state = {\n      janus: null,\n      isJanusConnected: false,\n      mypvtid: null,\n      myid: null,\n      remoteStreams: {}\n    };\n    _this.remoteFeed = null;\n    return _this;\n  }\n\n  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default()(Index, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      _janus__WEBPACK_IMPORTED_MODULE_8__[\"default\"].init({\n        debug: true,\n        dependencies: _janus__WEBPACK_IMPORTED_MODULE_8__[\"default\"].useDefaultDependencies({\n          adapter: webrtc_adapter__WEBPACK_IMPORTED_MODULE_7__[\"default\"]\n        }),\n        // or: Janus.useOldDependencies() to get the behaviour of previous Janus versions\n        callback: function callback() {\n          console.log('working fine janus');\n        }\n      });\n      var janus = new _janus__WEBPACK_IMPORTED_MODULE_8__[\"default\"]({\n        server: 'http://properclass.com:8088/janus',\n        iceServers: [{\n          urls: 'turn:properclass.com:3478?transport=tcp',\n          username: 'properclass',\n          credential: 'proper199201'\n        }],\n        success: function success() {\n          // Done! attach to plugin XYZ\n          console.log('server is conneted now go for plugin atatachment');\n\n          _this2.janusAttachment();\n        },\n        error: function error(cause) {\n          // Error, can't go on...\n          console.error('server config error', cause);\n        },\n        destroyed: function destroyed() {// I should get rid of this\n        }\n      });\n      this.setState({\n        janus: janus\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var remoteStreams = this.state.remoteStreams;\n      Object.keys(remoteStreams).forEach(function (id) {\n        var videoElement = document.getElementById(id);\n\n        if (videoElement) {\n          videoElement.srcObject = remoteStreams[id].stream;\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          myid = _this$state.myid,\n          mypvtid = _this$state.mypvtid,\n          remoteStreams = _this$state.remoteStreams;\n      console.log('Remote Streams', this.state);\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(\"div\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(\"input\", {\n        onChange: this.inputHandler,\n        placeholder: \"enter your display name\"\n      }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(\"button\", {\n        style: {\n          margin: 10,\n          backgroundColor: 'green'\n        },\n        text: \"Join\",\n        onClick: this.joinHandler\n      }), myid && mypvtid && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(\"div\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(\"button\", {\n        style: {\n          margin: 10,\n          backgroundColor: 'green'\n        },\n        text: \"Audio\",\n        onClick: function onClick() {\n          return _this3.publishOwnFeed({\n            audioRecv: false,\n            videoRecv: false,\n            audioSend: true,\n            videoSend: false\n          });\n        }\n      }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(\"button\", {\n        style: {\n          margin: 10,\n          backgroundColor: 'green'\n        },\n        text: \"Video\",\n        onClick: function onClick() {\n          return _this3.publishOwnFeed({\n            audioRecv: false,\n            videoRecv: false,\n            audioSend: true,\n            videoSend: true\n          });\n        }\n      }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(\"button\", {\n        style: {\n          margin: 10,\n          backgroundColor: 'green'\n        },\n        text: \"Screenshare\",\n        onClick: function onClick() {\n          return _this3.publishOwnFeed({\n            audioRecv: false,\n            videoRecv: false,\n            audioSend: true,\n            video: 'screen'\n          });\n        }\n      }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(\"button\", {\n        style: {\n          margin: 10,\n          backgroundColor: 'green'\n        },\n        text: \"Un Publish\",\n        onClick: this.onUnPublishHandler\n      }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(\"button\", {\n        style: {\n          margin: 10,\n          backgroundColor: 'green'\n        },\n        text: \"Close Call\",\n        onClick: this.onHangUp\n      })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(\"div\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(\"span\", null, \"local\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_6___default.a.createElement(\"video\", {\n        playsInline: true,\n        controlsList: \"noremoteplayback\",\n        autoPlay: true,\n        id: \"my-video\",\n        controls: true,\n        style: {\n          height: 300,\n          width: 300\n        }\n      }), Object.values(remoteStreams).filter(function (obj) {\n        return !obj.leave;\n      }).map(function (sObj) {\n        return _this3.videoElement(sObj);\n      })));\n    }\n  }]);\n\n  return Index;\n}(react__WEBPACK_IMPORTED_MODULE_6___default.a.Component);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Index);\n\n//# sourceURL=webpack:///./client/src/screens/test/SFU/videoConference/index.js?");

/***/ })

}]);