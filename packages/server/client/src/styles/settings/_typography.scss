$fonts: (
    primary: (
        family: (
            "Eina",
            san-serif,
        ),
        weights: (
            normal: 400,
            bold: 700,
        ),
    ),
    secondary: (
        family: (
            "Mark Pro",
            san-serif,
        ),
        weights: (
            normal: 400,
            bold: 700,
        ),
    ),
);

$text-styles: (
    h1: (
        size: 36px,
        line-height: 1.33,
    ),
    h2: (
        size: 32px,
        line-height: 1.25,
    ),
    h3: (
        size: 30px,
        line-height: 1.33,
    ),
    h4: (
        size: 26px,
        line-height: 1.23,
    ),
    h5: (
        size: 22px,
        line-height: 1.45,
    ),
    h6: (
        size: 18px,
        line-height: 1.33,
    ),
    subtitles: (
        size: 13px,
        line-height: 1,
    ),
    text: (
        size: 14px,
        line-height: 20px,
    ),
    text-lg: (
        size: 16px,
        line-height: 24px,
    ),
    text-sm: (
        size: 12px,
        line-height: 18px,
    ),
    text-xs: (
        size: 10px,
        line-height: 16px,
    ),
);

@font-face {
    font-family: "Mark Pro";
    src: url("/assets/fonts/mark-pro/Mark-Pro-Bold.ttf") format("truetype");
    font-weight: 700;
    font-style: normal;
}
@font-face {
    font-family: "Rza";
    src: url("/assets/fonts/rza/rza-regular.ttf") format("truetype");
    font-weight: 700;
    font-style: normal;
}
@font-face {
    font-family: "Eina";
    src: url("/assets/fonts/eina/Eina01-Regular.ttf") format("truetype");
    font-weight: 400;
    font-style: normal;
}

@function font-weight($weight, $type: primary) {
    $font: map-get($fonts, $type);
    $weights: map-get($font, weights);
    @return map-get($weights, $weight);
}

@function font-family($type: primary) {
    $font: map-get($fonts, $type);
    @return map-get($font, family);
}

@function font-get($style, $weight: null, $family: null) {
    @if map-has-key($text-styles, $style) {
        $type: map-get($text-styles, $style);

        @if $family {
            $type: map-merge(
                $type,
                (
                    family: font-family($family),
                )
            );
        } @else {
            $family: primary;
        }
        @if $weight {
            $type: map-merge(
                $type,
                (
                    weight: font-weight($weight, $family),
                )
            );
        }

        @return $type;
    }
    @error 'No style found';
}

@mixin font-get($style, $weight: null, $family: null) {
    $type: font-get($style, $weight, $family);

    @if $style {
        font-size: map-get($type, size);
        line-height: map-get($type, line-height);
    }

    @if $weight {
        font-weight: map-get($type, weight);
    }

    @if $family {
        font-family: map-get($type, family);
    }
}
