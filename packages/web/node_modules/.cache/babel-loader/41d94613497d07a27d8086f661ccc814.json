{"ast":null,"code":"import _regeneratorRuntime from \"/home/bhagya/workspace/reactjs/projects/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/bhagya/workspace/reactjs/projects/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { onIceConnectionStateChange, mediaSelector } from '../helper-functions';\n\nfunction gotRemoteStream(e) {\n  var videoElement = document.getElementById('video1');\n\n  if (videoElement.srcObject !== e.streams[0]) {\n    videoElement.srcObject = e.streams[0];\n  }\n}\n\nexport default\n/*#__PURE__*/\n(function () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(onIceCandidateHandler) {\n    var server, offerOptions, pc, setLocalDescription, addCandidate, setRemoteDescription, createOffer, createAnswer, addIceCandidate;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            // server configuration\n            server = null;\n            offerOptions = {\n              offerToRecieveAudio: 1,\n              offerToRecieveVideo: 1\n            }; // Initialize peerconnection\n\n            pc = new RTCPeerConnection(server); // Adding icecandidate listner\n\n            pc.addEventListener('icecandidate', onIceCandidateHandler); // Adding IceConnection State Change\n\n            pc.addEventListener('iceconnectionstatechange', function (e) {\n              return onIceConnectionStateChange(e, pc);\n            }); // Adding Ontrack listner\n\n            pc.addEventListener('track', gotRemoteStream); // seting Local Description\n\n            setLocalDescription = function setLocalDescription(data) {\n              pc.setLocalDescription(data);\n            };\n\n            addCandidate = function addCandidate(data) {\n              pc.addIceCandidate(new RTCIceCandidate(JSON.parse(data)));\n            }; // seting Remote Description\n\n\n            setRemoteDescription = function setRemoteDescription(data) {\n              pc.setRemoteDescription(data);\n            }; // creating offer for list of users\n\n\n            createOffer =\n            /*#__PURE__*/\n            function () {\n              var _ref2 = _asyncToGenerator(\n              /*#__PURE__*/\n              _regeneratorRuntime.mark(function _callee(mediaType) {\n                var stream, offer;\n                return _regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.next = 2;\n                        return mediaSelector(mediaType);\n\n                      case 2:\n                        stream = _context.sent;\n                        stream.getTracks().forEach(function (track) {\n                          return pc.addTrack(track, stream);\n                        });\n                        _context.next = 6;\n                        return pc.createOffer(offerOptions);\n\n                      case 6:\n                        offer = _context.sent;\n                        setLocalDescription(offer);\n                        return _context.abrupt(\"return\", offer);\n\n                      case 9:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n\n              return function createOffer(_x2) {\n                return _ref2.apply(this, arguments);\n              };\n            }(); // creating Answer for offer\n\n\n            createAnswer =\n            /*#__PURE__*/\n            function () {\n              var _ref3 = _asyncToGenerator(\n              /*#__PURE__*/\n              _regeneratorRuntime.mark(function _callee2(data, mediaType) {\n                var stream, answer;\n                return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        _context2.next = 2;\n                        return mediaSelector(mediaType);\n\n                      case 2:\n                        stream = _context2.sent;\n                        stream.getTracks().forEach(function (track) {\n                          return pc.addTrack(track, stream);\n                        });\n                        setRemoteDescription(data);\n                        _context2.next = 7;\n                        return pc.createAnswer();\n\n                      case 7:\n                        answer = _context2.sent;\n                        setLocalDescription(answer);\n                        return _context2.abrupt(\"return\", answer);\n\n                      case 10:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2);\n              }));\n\n              return function createAnswer(_x3, _x4) {\n                return _ref3.apply(this, arguments);\n              };\n            }(); // Adding remoteIceCandidate\n\n\n            addIceCandidate = function addIceCandidate(candidate) {\n              pc.addIceCandidate(new RTCIceCandidate(JSON.parse(candidate)));\n            };\n\n            return _context3.abrupt(\"return\", {\n              pc: pc,\n              createOffer: createOffer,\n              createAnswer: createAnswer,\n              addIceCandidate: addIceCandidate,\n              setRemoteDescription: setRemoteDescription,\n              addCandidate: addCandidate\n            });\n\n          case 13:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n})();","map":{"version":3,"sources":["/home/bhagya/workspace/reactjs/projects/probro/packages/web/src/webrtc/main/index.js"],"names":["onIceConnectionStateChange","mediaSelector","gotRemoteStream","e","videoElement","document","getElementById","srcObject","streams","onIceCandidateHandler","server","offerOptions","offerToRecieveAudio","offerToRecieveVideo","pc","RTCPeerConnection","addEventListener","setLocalDescription","data","addCandidate","addIceCandidate","RTCIceCandidate","JSON","parse","setRemoteDescription","createOffer","mediaType","stream","getTracks","forEach","track","addTrack","offer","createAnswer","answer","candidate"],"mappings":"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","sourcesContent":["import { onIceConnectionStateChange, mediaSelector } from '../helper-functions';\n\nfunction gotRemoteStream(e) {\n  const videoElement = document.getElementById('video1');\n  if (videoElement.srcObject !== e.streams[0]) {\n    videoElement.srcObject = e.streams[0];\n  }\n}\n\nexport default async (onIceCandidateHandler) => {\n  // server configuration\n  const server = null;\n  const offerOptions = {\n    offerToRecieveAudio: 1,\n    offerToRecieveVideo: 1,\n  };\n  // Initialize peerconnection\n  const pc = new RTCPeerConnection(server);\n\n  // Adding icecandidate listner\n  pc.addEventListener('icecandidate', onIceCandidateHandler);\n\n  // Adding IceConnection State Change\n  pc.addEventListener('iceconnectionstatechange', e => onIceConnectionStateChange(e, pc));\n\n  // Adding Ontrack listner\n  pc.addEventListener('track', gotRemoteStream);\n\n  // seting Local Description\n  const setLocalDescription = (data) => {\n    pc.setLocalDescription(data);\n  };\n\n  const addCandidate = (data) => {\n    pc.addIceCandidate(new RTCIceCandidate(JSON.parse(data)));\n  };\n\n  // seting Remote Description\n  const setRemoteDescription = (data) => {\n    pc.setRemoteDescription(data);\n  };\n\n  // creating offer for list of users\n  const createOffer = async (mediaType) => {\n    const stream = await mediaSelector(mediaType);\n    stream.getTracks().forEach(track => pc.addTrack(track, stream));\n    const offer = await pc.createOffer(offerOptions);\n    setLocalDescription(offer);\n    return offer;\n  };\n\n  // creating Answer for offer\n  const createAnswer = async (data, mediaType) => {\n    const stream = await mediaSelector(mediaType);\n    stream.getTracks().forEach(track => pc.addTrack(track, stream));\n    setRemoteDescription(data);\n    const answer = await pc.createAnswer();\n    setLocalDescription(answer);\n    return answer;\n  };\n\n  // Adding remoteIceCandidate\n  const addIceCandidate = (candidate) => {\n    pc.addIceCandidate(new RTCIceCandidate(JSON.parse(candidate)));\n  };\n\n  return { pc, createOffer, createAnswer, addIceCandidate, setRemoteDescription, addCandidate };\n};\n"]},"metadata":{},"sourceType":"module"}