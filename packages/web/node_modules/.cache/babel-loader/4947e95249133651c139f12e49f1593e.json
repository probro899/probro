{"ast":null,"code":"import _classCallCheck from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Nabin/workspace/probro/packages/web/src/common/ClassComponents/Column.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport Task from './Task';\n\nvar Column =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Column, _Component);\n\n  function Column() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Column);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Column)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(Column, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          column = _this$props.column,\n          tasks = _this$props.tasks,\n          index = _this$props.index;\n      return React.createElement(Draggable, {\n        draggableId: column.id,\n        index: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, function () {\n        return React.createElement(\"div\", {\n          className: \"column-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"column-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, column.title)), React.createElement(Droppable, {\n          droppableId: column.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, function (provided) {\n          return React.createElement(\"div\", Object.assign({\n            className: \"task-list\",\n            ref: provided.innerRef\n          }, provided.droppableProps, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 27\n            },\n            __self: this\n          }), tasks.map(function (task, index) {\n            return React.createElement(Task, {\n              key: task.id,\n              task: task,\n              index: index,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 32\n              },\n              __self: this\n            });\n          }), provided.placeholder);\n        }));\n      });\n    }\n  }]);\n\n  return Column;\n}(Component);\n\nColumn.propTypes = {\n  column: PropTypes.objectOf(PropTypes.any).isRequired,\n  tasks: PropTypes.arrayOf(PropTypes.any).isRequired,\n  index: PropTypes.number.isRequired\n};\nexport default Column;","map":{"version":3,"sources":["/Users/Nabin/workspace/probro/packages/web/src/common/ClassComponents/Column.js"],"names":["React","Component","PropTypes","Droppable","Draggable","Task","Column","state","props","column","tasks","index","id","title","provided","innerRef","droppableProps","map","task","placeholder","propTypes","objectOf","any","isRequired","arrayOf","number"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,qBAArC;AACA,OAAOC,IAAP,MAAiB,QAAjB;;IAEMC,M;;;;;;;;;;;;;;;;;UACJC,K,GAAQ,E;;;;;;6BAEC;AAAA,wBAC0B,KAAKC,KAD/B;AAAA,UACCC,MADD,eACCA,MADD;AAAA,UACSC,KADT,eACSA,KADT;AAAA,UACgBC,KADhB,eACgBA,KADhB;AAEP,aACE,oBAAC,SAAD;AACE,QAAA,WAAW,EAAEF,MAAM,CAACG,EADtB;AAEE,QAAA,KAAK,EAAED,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAII;AAAA,eACA;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGF,MAAM,CAACI,KADV,CADF,CADF,EAME,oBAAC,SAAD;AACE,UAAA,WAAW,EAAEJ,MAAM,CAACG,EADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAGG,UAAAE,QAAQ;AAAA,iBACP;AACE,YAAA,SAAS,EAAC,WADZ;AAEE,YAAA,GAAG,EAAEA,QAAQ,CAACC;AAFhB,aAGMD,QAAQ,CAACE,cAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAKGN,KAAK,CAACO,GAAN,CAAU,UAACC,IAAD,EAAOP,KAAP;AAAA,mBAAiB,oBAAC,IAAD;AAAM,cAAA,GAAG,EAAEO,IAAI,CAACN,EAAhB;AAAoB,cAAA,IAAI,EAAEM,IAA1B;AAAgC,cAAA,KAAK,EAAEP,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAjB;AAAA,WAAV,CALH,EAMGG,QAAQ,CAACK,WANZ,CADO;AAAA,SAHX,CANF,CADA;AAAA,OAJJ,CADF;AA8BD;;;;EAnCkBlB,S;;AAsCrBK,MAAM,CAACc,SAAP,GAAmB;AACjBX,EAAAA,MAAM,EAAEP,SAAS,CAACmB,QAAV,CAAmBnB,SAAS,CAACoB,GAA7B,EAAkCC,UADzB;AAEjBb,EAAAA,KAAK,EAAER,SAAS,CAACsB,OAAV,CAAkBtB,SAAS,CAACoB,GAA5B,EAAiCC,UAFvB;AAGjBZ,EAAAA,KAAK,EAAET,SAAS,CAACuB,MAAV,CAAiBF;AAHP,CAAnB;AAMA,eAAejB,MAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport Task from './Task';\n\nclass Column extends Component {\n  state = {};\n\n  render() {\n    const { column, tasks, index } = this.props;\n    return (\n      <Draggable\n        draggableId={column.id}\n        index={index}\n      >\n        { () => (\n          <div className=\"column-container\">\n            <div className=\"column-title\">\n              <span>\n                {column.title}\n              </span>\n            </div>\n            <Droppable\n              droppableId={column.id}\n            >\n              {provided => (\n                <div\n                  className=\"task-list\"\n                  ref={provided.innerRef}\n                  {...provided.droppableProps}\n                >\n                  {tasks.map((task, index) => <Task key={task.id} task={task} index={index} />)}\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          </div>\n        )}\n      </Draggable>\n    );\n  }\n}\n\nColumn.propTypes = {\n  column: PropTypes.objectOf(PropTypes.any).isRequired,\n  tasks: PropTypes.arrayOf(PropTypes.any).isRequired,\n  index: PropTypes.number.isRequired,\n};\n\nexport default Column;\n"]},"metadata":{},"sourceType":"module"}