{"ast":null,"code":"import _objectSpread from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Nabin/workspace/probro/packages/web/src/screens/home/auth/registration/registration.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport EmailValidator from 'email-validator';\nimport { FormGroup } from '@blueprintjs/core';\nimport { Input, Button } from '../../../../common';\nimport * as actions from '../../../../actions';\n\nvar Register =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Register, _Component);\n\n  function Register() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Register)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {};\n\n    _this.handleClick = function () {\n      var form = _this.props.form;\n\n      if (EmailValidator.validate(form.registerForm.email) === false) {\n        console.log('wrong email!');\n      }\n\n      if (form.registerForm.password !== form.registerForm.confirmPassword) {\n        if (form.registerForm.password === '') {\n          console.log('fuck yeah');\n        }\n      } else {\n        console.log('Correct Already');\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(Input, Object.assign({\n        placeholder: \"Eg. Nabin\",\n        class_: \"f-element-class\",\n        label_: \"First Name\",\n        value: \"firstName\"\n      }, this.props, {\n        schema: \"registerForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      })), React.createElement(Input, Object.assign({\n        placeholder: \"Eg. Prasad\",\n        class_: \"f-element-class\",\n        label_: \"Middle Name\",\n        value: \"middleName\"\n      }, this.props, {\n        schema: \"registerForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      })), React.createElement(Input, Object.assign({\n        placeholder: \"Eg. Shah\",\n        class_: \"f-element-class\",\n        label_: \"Last Name\",\n        value: \"lastName\"\n      }, this.props, {\n        schema: \"registerForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      })), React.createElement(Input, Object.assign({\n        placeholder: \"Eg. hello@gmail.com\",\n        class_: \"f-element-class\",\n        label_: \"Email\",\n        value: \"email\"\n      }, this.props, {\n        schema: \"registerForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      })), React.createElement(Input, Object.assign({\n        password: true,\n        placeholder: \"At least 6 characters\",\n        class_: \"f-element-class\",\n        label_: \"Password\",\n        iconName: \"Lock\",\n        value: \"password\"\n      }, this.props, {\n        schema: \"registerForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      })), React.createElement(Input, Object.assign({\n        password: true,\n        placeholder: \"Re-type your password\",\n        class_: \"f-element-class\",\n        label_: \"Confrim Password\",\n        iconName: \"Lock\",\n        value: \"confirmPassword\"\n      }, this.props, {\n        schema: \"registerForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      })), React.createElement(Button, {\n        text: \"Submit\",\n        class_: \"f-element-class\",\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Register;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return state;\n};\n\nexport default connect(mapStateToProps, _objectSpread({}, actions))(Register);","map":{"version":3,"sources":["/Users/Nabin/workspace/probro/packages/web/src/screens/home/auth/registration/registration.js"],"names":["React","Component","connect","EmailValidator","FormGroup","Input","Button","actions","Register","state","handleClick","form","props","validate","registerForm","email","console","log","password","confirmPassword","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport EmailValidator from 'email-validator';\nimport { FormGroup } from '@blueprintjs/core';\nimport { Input, Button } from '../../../../common';\nimport * as actions from '../../../../actions';\n\nclass Register extends Component {\n  state = {};\n\n  handleClick = () => {\n    const { form } = this.props;\n    if (EmailValidator.validate(form.registerForm.email) === false) {\n      console.log('wrong email!');\n    }\n    if (form.registerForm.password !== form.registerForm.confirmPassword) {\n      if (form.registerForm.password === '') {\n        console.log('fuck yeah');\n      }\n    } else {\n      console.log('Correct Already');\n    }\n  }\n\n  render() {\n    return (\n      <FormGroup>\n        <Input placeholder=\"Eg. Nabin\" class_=\"f-element-class\" label_=\"First Name\" value=\"firstName\" {...this.props} schema=\"registerForm\" />\n        <Input placeholder=\"Eg. Prasad\" class_=\"f-element-class\" label_=\"Middle Name\" value=\"middleName\" {...this.props} schema=\"registerForm\" />\n        <Input placeholder=\"Eg. Shah\" class_=\"f-element-class\" label_=\"Last Name\" value=\"lastName\" {...this.props} schema=\"registerForm\" />\n        <Input placeholder=\"Eg. hello@gmail.com\" class_=\"f-element-class\" label_=\"Email\" value=\"email\" {...this.props} schema=\"registerForm\" />\n        <Input password placeholder=\"At least 6 characters\" class_=\"f-element-class\" label_=\"Password\" iconName=\"Lock\" value=\"password\" {...this.props} schema=\"registerForm\" />\n        <Input password placeholder=\"Re-type your password\" class_=\"f-element-class\" label_=\"Confrim Password\" iconName=\"Lock\" value=\"confirmPassword\" {...this.props} schema=\"registerForm\" />\n        <Button text=\"Submit\" class_=\"f-element-class\" onClick={this.handleClick} />\n      </FormGroup>\n    );\n  }\n}\nconst mapStateToProps = state => state;\n\nexport default connect(mapStateToProps, { ...actions })(Register);\n"]},"metadata":{},"sourceType":"module"}