{"ast":null,"code":"var _jsxFileName = \"/Users/Nabin/workspace/probro/packages/web/src/common/Button.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Intent, Spinner, Label } from '@blueprintjs/core';\n\nvar CustomButton = function CustomButton(props) {\n  var text = props.text,\n      class_ = props.class_,\n      mainFormHandler = props.mainFormHandler,\n      schema = props.schema,\n      form = props.form,\n      apis = props.apis;\n  return React.createElement(\"div\", {\n    className: \"btn-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      flexWrap: 'wrap',\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, form[schema].loading && React.createElement(Spinner, {\n    intent: Intent.PRIMARY,\n    size: 40,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), form[schema].error && React.createElement(Label, {\n    style: {\n      fontSize: 16,\n      color: 'red'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, form[schema].error)), React.createElement(Button, {\n    text: text,\n    intent: Intent.PRIMARY,\n    fill: true,\n    large: true,\n    onClick: function onClick() {\n      return mainFormHandler(schema, apis);\n    },\n    className: class_,\n    disabled: form[schema].loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }));\n};\n\nCustomButton.defaultProps = {\n  class_: null\n};\nCustomButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  class_: PropTypes.string,\n  mainFormHandler: PropTypes.func.isRequired,\n  schema: PropTypes.string.isRequired,\n  form: PropTypes.objectOf(PropTypes.any).isRequired\n};\nexport default CustomButton;","map":{"version":3,"sources":["/Users/Nabin/workspace/probro/packages/web/src/common/Button.js"],"names":["React","PropTypes","Button","Intent","Spinner","Label","CustomButton","props","text","class_","mainFormHandler","schema","form","apis","display","justifyContent","flexWrap","alignItems","loading","PRIMARY","error","fontSize","color","defaultProps","propTypes","string","isRequired","func","objectOf","any"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,OAAzB,EAAkCC,KAAlC,QAA+C,mBAA/C;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAAA,MAE5BC,IAF4B,GAQ1BD,KAR0B,CAE5BC,IAF4B;AAAA,MAG5BC,MAH4B,GAQ1BF,KAR0B,CAG5BE,MAH4B;AAAA,MAI5BC,eAJ4B,GAQ1BH,KAR0B,CAI5BG,eAJ4B;AAAA,MAK5BC,MAL4B,GAQ1BJ,KAR0B,CAK5BI,MAL4B;AAAA,MAM5BC,IAN4B,GAQ1BL,KAR0B,CAM5BK,IAN4B;AAAA,MAO5BC,IAP4B,GAQ1BN,KAR0B,CAO5BM,IAP4B;AAU9B,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,cAAc,EAAE,QAAnC;AAA6CC,MAAAA,QAAQ,EAAE,MAAvD;AAA+DC,MAAAA,UAAU,EAAE;AAA3E,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,IAAI,CAACD,MAAD,CAAJ,CAAaO,OAAb,IAAwB,oBAAC,OAAD;AAAS,IAAA,MAAM,EAAEf,MAAM,CAACgB,OAAxB;AAAiC,IAAA,IAAI,EAAE,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD3B,EAEGP,IAAI,CAACD,MAAD,CAAJ,CAAaS,KAAb,IAAsB,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE,EAAZ;AAAgBC,MAAAA,KAAK,EAAE;AAAvB,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+CV,IAAI,CAACD,MAAD,CAAJ,CAAaS,KAA5D,CAFzB,CADF,EAKE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAEZ,IADR;AAEE,IAAA,MAAM,EAAEL,MAAM,CAACgB,OAFjB;AAGE,IAAA,IAAI,MAHN;AAIE,IAAA,KAAK,MAJP;AAKE,IAAA,OAAO,EAAE;AAAA,aAAMT,eAAe,CAACC,MAAD,EAASE,IAAT,CAArB;AAAA,KALX;AAME,IAAA,SAAS,EAAEJ,MANb;AAOE,IAAA,QAAQ,EAAEG,IAAI,CAACD,MAAD,CAAJ,CAAaO,OAPzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AAiBD,CA3BD;;AA4BAZ,YAAY,CAACiB,YAAb,GAA4B;AAC1Bd,EAAAA,MAAM,EAAE;AADkB,CAA5B;AAIAH,YAAY,CAACkB,SAAb,GAAyB;AACvBhB,EAAAA,IAAI,EAAEP,SAAS,CAACwB,MAAV,CAAiBC,UADA;AAEvBjB,EAAAA,MAAM,EAAER,SAAS,CAACwB,MAFK;AAGvBf,EAAAA,eAAe,EAAET,SAAS,CAAC0B,IAAV,CAAeD,UAHT;AAIvBf,EAAAA,MAAM,EAAEV,SAAS,CAACwB,MAAV,CAAiBC,UAJF;AAKvBd,EAAAA,IAAI,EAAEX,SAAS,CAAC2B,QAAV,CAAmB3B,SAAS,CAAC4B,GAA7B,EAAkCH;AALjB,CAAzB;AAOA,eAAepB,YAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Intent, Spinner, Label } from '@blueprintjs/core';\n\nconst CustomButton = (props) => {\n  const {\n    text,\n    class_,\n    mainFormHandler,\n    schema,\n    form,\n    apis\n  } = props;\n\n  return (\n    <div className=\"btn-group\">\n      <div style={{ display: 'flex', justifyContent: 'center', flexWrap: 'wrap', alignItems: 'center' }}>\n        {form[schema].loading && <Spinner intent={Intent.PRIMARY} size={40} /> }\n        {form[schema].error && <Label style={{ fontSize: 16, color: 'red' }}>{form[schema].error}</Label>}\n      </div>\n      <Button\n        text={text}\n        intent={Intent.PRIMARY}\n        fill\n        large\n        onClick={() => mainFormHandler(schema, apis)}\n        className={class_}\n        disabled={form[schema].loading}\n      />\n    </div>\n  );\n};\nCustomButton.defaultProps = {\n  class_: null,\n};\n\nCustomButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  class_: PropTypes.string,\n  mainFormHandler: PropTypes.func.isRequired,\n  schema: PropTypes.string.isRequired,\n  form: PropTypes.objectOf(PropTypes.any).isRequired,\n};\nexport default CustomButton;\n"]},"metadata":{},"sourceType":"module"}