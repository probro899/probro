{"ast":null,"code":"import _regeneratorRuntime from \"/home/bhagya/workspace/reactjs/projects/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/bhagya/workspace/reactjs/projects/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport { updateFormValue } from '../index';\nimport { ENDPOINT } from '../../config';\nexport default\n/*#__PURE__*/\n(function () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(dispatch, getState) {\n    var token, res, data, firstName, middleName, lastName, email, phoneNumber, gender, degree, field, profilePicture, skills, experience, products, onlinePortals;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            token = sessionStorage.getItem('SESSION_ID');\n            _context.prev = 1;\n            _context.next = 4;\n            return axios.get(\"\".concat(ENDPOINT, \"/web/fetch-user-details?token=\").concat(token));\n\n          case 4:\n            res = _context.sent;\n            data = res.data;\n\n            if (res.status === 200 && data.token) {\n              firstName = data.firstName, middleName = data.middleName, lastName = data.lastName, email = data.email, phoneNumber = data.phoneNumber, gender = data.gender, degree = data.degree, field = data.field, profilePicture = data.profilePicture, skills = data.skills, experience = data.experience, products = data.products, onlinePortals = data.onlinePortals;\n              dispatch(updateFormValue('basicForm', {\n                firstName: [firstName],\n                middleName: [middleName],\n                lastName: [lastName],\n                email: [email]\n              }));\n              dispatch(updateFormValue('additionalForm', {\n                phoneNumber: [phoneNumber],\n                gender: [gender],\n                degree: [degree],\n                field: [field],\n                profilePicture: [profilePicture],\n                skills: [skills]\n              }));\n              dispatch(updateFormValue('advancedForm', {\n                experience: [experience],\n                products: [products],\n                onlinePortals: [onlinePortals]\n              }));\n            }\n\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](1);\n            console.log('Error!');\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 9]]);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n})();","map":{"version":3,"sources":["/home/bhagya/workspace/reactjs/projects/probro/packages/web/src/actions/helper-functions/fetchSettings.js"],"names":["axios","updateFormValue","ENDPOINT","dispatch","getState","token","sessionStorage","getItem","get","res","data","status","firstName","middleName","lastName","email","phoneNumber","gender","degree","field","profilePicture","skills","experience","products","onlinePortals","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,UAAhC;AACA,SAASC,QAAT,QAAyB,cAAzB;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAe,iBAAOC,QAAP,EAAiBC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AACPC,YAAAA,KADO,GACCC,cAAc,CAACC,OAAf,CAAuB,YAAvB,CADD;AAAA;AAAA;AAAA,mBAGOP,KAAK,CAACQ,GAAN,WAAaN,QAAb,2CAAsDG,KAAtD,EAHP;;AAAA;AAGLI,YAAAA,GAHK;AAIHC,YAAAA,IAJG,GAIMD,GAJN,CAIHC,IAJG;;AAKX,gBAAID,GAAG,CAACE,MAAJ,KAAe,GAAf,IAAsBD,IAAI,CAACL,KAA/B,EAAsC;AAElCO,cAAAA,SAFkC,GAehCF,IAfgC,CAElCE,SAFkC,EAGlCC,UAHkC,GAehCH,IAfgC,CAGlCG,UAHkC,EAIlCC,QAJkC,GAehCJ,IAfgC,CAIlCI,QAJkC,EAKlCC,KALkC,GAehCL,IAfgC,CAKlCK,KALkC,EAMlCC,WANkC,GAehCN,IAfgC,CAMlCM,WANkC,EAOlCC,MAPkC,GAehCP,IAfgC,CAOlCO,MAPkC,EAQlCC,MARkC,GAehCR,IAfgC,CAQlCQ,MARkC,EASlCC,KATkC,GAehCT,IAfgC,CASlCS,KATkC,EAUlCC,cAVkC,GAehCV,IAfgC,CAUlCU,cAVkC,EAWlCC,MAXkC,GAehCX,IAfgC,CAWlCW,MAXkC,EAYlCC,UAZkC,GAehCZ,IAfgC,CAYlCY,UAZkC,EAalCC,QAbkC,GAehCb,IAfgC,CAalCa,QAbkC,EAclCC,aAdkC,GAehCd,IAfgC,CAclCc,aAdkC;AAgBpCrB,cAAAA,QAAQ,CAACF,eAAe,CAAC,WAAD,EAAc;AACpCW,gBAAAA,SAAS,EAAE,CAACA,SAAD,CADyB;AAEpCC,gBAAAA,UAAU,EAAE,CAACA,UAAD,CAFwB;AAGpCC,gBAAAA,QAAQ,EAAE,CAACA,QAAD,CAH0B;AAIpCC,gBAAAA,KAAK,EAAE,CAACA,KAAD;AAJ6B,eAAd,CAAhB,CAAR;AAMAZ,cAAAA,QAAQ,CAACF,eAAe,CAAC,gBAAD,EAAmB;AACzCe,gBAAAA,WAAW,EAAE,CAACA,WAAD,CAD4B;AAEzCC,gBAAAA,MAAM,EAAE,CAACA,MAAD,CAFiC;AAGzCC,gBAAAA,MAAM,EAAE,CAACA,MAAD,CAHiC;AAIzCC,gBAAAA,KAAK,EAAE,CAACA,KAAD,CAJkC;AAKzCC,gBAAAA,cAAc,EAAE,CAACA,cAAD,CALyB;AAMzCC,gBAAAA,MAAM,EAAE,CAACA,MAAD;AANiC,eAAnB,CAAhB,CAAR;AAQAlB,cAAAA,QAAQ,CAACF,eAAe,CAAC,cAAD,EAAiB;AACvCqB,gBAAAA,UAAU,EAAE,CAACA,UAAD,CAD2B;AAEvCC,gBAAAA,QAAQ,EAAE,CAACA,QAAD,CAF6B;AAGvCC,gBAAAA,aAAa,EAAE,CAACA,aAAD;AAHwB,eAAjB,CAAhB,CAAR;AAKD;;AAxCU;AAAA;;AAAA;AAAA;AAAA;AA0CXC,YAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;;AA1CW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAf;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import axios from 'axios';\nimport { updateFormValue } from '../index';\nimport { ENDPOINT } from '../../config';\n\nexport default async (dispatch, getState) => {\n  const token = sessionStorage.getItem('SESSION_ID');\n  try {\n    const res = await axios.get(`${ENDPOINT}/web/fetch-user-details?token=${token}`);\n    const { data } = res;\n    if (res.status === 200 && data.token) {\n      const {\n        firstName,\n        middleName,\n        lastName,\n        email,\n        phoneNumber,\n        gender,\n        degree,\n        field,\n        profilePicture,\n        skills,\n        experience,\n        products,\n        onlinePortals,\n      } = data;\n      dispatch(updateFormValue('basicForm', {\n        firstName: [firstName],\n        middleName: [middleName],\n        lastName: [lastName],\n        email: [email],\n      }));\n      dispatch(updateFormValue('additionalForm', {\n        phoneNumber: [phoneNumber],\n        gender: [gender],\n        degree: [degree],\n        field: [field],\n        profilePicture: [profilePicture],\n        skills: [skills],\n      }));\n      dispatch(updateFormValue('advancedForm', {\n        experience: [experience],\n        products: [products],\n        onlinePortals: [onlinePortals],\n      }));\n    }\n  } catch {\n    console.log('Error!');\n  }\n};\n"]},"metadata":{},"sourceType":"module"}