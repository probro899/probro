{"ast":null,"code":"import _regeneratorRuntime from \"/home/bhagya/workspace/reactjs/projects/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/bhagya/workspace/reactjs/projects/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { onIceConnectionStateChange } from '../common';\nimport client from '../../../../../../socket';\nimport onIceCandidate from './onIceCandidate';\n\nfunction gotRemoteStream(e) {\n  var videoElement = document.getElementById('video1');\n\n  if (videoElement.srcObject !== e.streams[0]) {\n    videoElement.srcObject = e.streams[0];\n  }\n}\n\nexport default function onOfferHandler(_x, _x2) {\n  return _onOfferHandler.apply(this, arguments);\n}\n\nfunction _onOfferHandler() {\n  _onOfferHandler = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(data, apis) {\n    var server, pc, stream, answer;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            server = null;\n            console.log('apis in onOfferHandler', apis); // creating new RTCPeerConnetion\n            // TODO server configuration for TURN or STUN\n\n            pc = new RTCPeerConnection(server); // geting local audio and video\n\n            _context.next = 5;\n            return navigator.mediaDevices.getUserMedia({\n              video: true,\n              audio: true\n            });\n\n          case 5:\n            stream = _context.sent;\n            // adding video and audio  track to pc\n            stream.getTracks().forEach(function (track) {\n              return pc.addTrack(track, stream);\n            }); // adding some listener to track connetion state\n\n            pc.addEventListener('icecandidate', function (e) {\n              return onIceCandidate(e, pc, apis);\n            });\n            pc.addEventListener('iceconnectionstatechange', function (e) {\n              return onIceConnectionStateChange(e, pc);\n            });\n            pc.setRemoteDescription(data);\n            pc.addEventListener('track', gotRemoteStream);\n            _context.prev = 11;\n            _context.next = 14;\n            return pc.createAnswer();\n\n          case 14:\n            answer = _context.sent;\n            pc.setLocalDescription(answer);\n            apis.createAnswer([answer, [{\n              userId: 2\n            }]]);\n            client.on('icecandidate', function (event) {\n              console.log('icecandidate handler called in remote', event);\n              pc.addIceCandidate(new RTCIceCandidate(JSON.parse(event)));\n            });\n            _context.next = 23;\n            break;\n\n          case 20:\n            _context.prev = 20;\n            _context.t0 = _context[\"catch\"](11);\n            console.error('Error in Create Answer', _context.t0);\n\n          case 23:\n            return _context.abrupt(\"return\", pc);\n\n          case 24:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[11, 20]]);\n  }));\n  return _onOfferHandler.apply(this, arguments);\n}","map":{"version":3,"sources":["/home/bhagya/workspace/reactjs/projects/probro/packages/web/src/screens/users/components/communication/helper-functions/remote/onOfferHandler.js"],"names":["onIceConnectionStateChange","client","onIceCandidate","gotRemoteStream","e","videoElement","document","getElementById","srcObject","streams","onOfferHandler","data","apis","server","console","log","pc","RTCPeerConnection","navigator","mediaDevices","getUserMedia","video","audio","stream","getTracks","forEach","track","addTrack","addEventListener","setRemoteDescription","createAnswer","answer","setLocalDescription","userId","on","event","addIceCandidate","RTCIceCandidate","JSON","parse","error"],"mappings":";;AAAA,SAASA,0BAAT,QAA2C,WAA3C;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,SAASC,eAAT,CAAyBC,CAAzB,EAA4B;AAC1B,MAAMC,YAAY,GAAGC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAArB;;AACA,MAAIF,YAAY,CAACG,SAAb,KAA2BJ,CAAC,CAACK,OAAF,CAAU,CAAV,CAA/B,EAA6C;AAC3CJ,IAAAA,YAAY,CAACG,SAAb,GAAyBJ,CAAC,CAACK,OAAF,CAAU,CAAV,CAAzB;AACD;AACF;;AAED,wBAA8BC,cAA9B;AAAA;AAAA;;;;;2BAAe,iBAA8BC,IAA9B,EAAoCC,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AACPC,YAAAA,MADO,GACE,IADF;AAEbC,YAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCH,IAAtC,EAFa,CAGb;AACA;;AACMI,YAAAA,EALO,GAKF,IAAIC,iBAAJ,CAAsBJ,MAAtB,CALE,EAOb;;AAPa;AAAA,mBAQQK,SAAS,CAACC,YAAV,CAAuBC,YAAvB,CAAoC;AAAEC,cAAAA,KAAK,EAAE,IAAT;AAAeC,cAAAA,KAAK,EAAE;AAAtB,aAApC,CARR;;AAAA;AAQPC,YAAAA,MARO;AAUb;AACAA,YAAAA,MAAM,CAACC,SAAP,GAAmBC,OAAnB,CAA2B,UAAAC,KAAK;AAAA,qBAAIV,EAAE,CAACW,QAAH,CAAYD,KAAZ,EAAmBH,MAAnB,CAAJ;AAAA,aAAhC,EAXa,CAab;;AACAP,YAAAA,EAAE,CAACY,gBAAH,CAAoB,cAApB,EAAoC,UAAAxB,CAAC;AAAA,qBAAIF,cAAc,CAACE,CAAD,EAAIY,EAAJ,EAAQJ,IAAR,CAAlB;AAAA,aAArC;AACAI,YAAAA,EAAE,CAACY,gBAAH,CAAoB,0BAApB,EAAgD,UAAAxB,CAAC;AAAA,qBAAIJ,0BAA0B,CAACI,CAAD,EAAIY,EAAJ,CAA9B;AAAA,aAAjD;AACAA,YAAAA,EAAE,CAACa,oBAAH,CAAwBlB,IAAxB;AACAK,YAAAA,EAAE,CAACY,gBAAH,CAAoB,OAApB,EAA6BzB,eAA7B;AAjBa;AAAA;AAAA,mBAmBUa,EAAE,CAACc,YAAH,EAnBV;;AAAA;AAmBLC,YAAAA,MAnBK;AAoBXf,YAAAA,EAAE,CAACgB,mBAAH,CAAuBD,MAAvB;AACAnB,YAAAA,IAAI,CAACkB,YAAL,CAAkB,CAACC,MAAD,EAAS,CAAC;AAAEE,cAAAA,MAAM,EAAE;AAAV,aAAD,CAAT,CAAlB;AACAhC,YAAAA,MAAM,CAACiC,EAAP,CAAU,cAAV,EAA0B,UAACC,KAAD,EAAW;AACnCrB,cAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ,EAAqDoB,KAArD;AACAnB,cAAAA,EAAE,CAACoB,eAAH,CAAmB,IAAIC,eAAJ,CAAoBC,IAAI,CAACC,KAAL,CAAWJ,KAAX,CAApB,CAAnB;AACD,aAHD;AAtBW;AAAA;;AAAA;AAAA;AAAA;AA2BXrB,YAAAA,OAAO,CAAC0B,KAAR,CAAc,wBAAd;;AA3BW;AAAA,6CA6BNxB,EA7BM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import { onIceConnectionStateChange } from '../common';\nimport client from '../../../../../../socket';\nimport onIceCandidate from './onIceCandidate';\n\nfunction gotRemoteStream(e) {\n  const videoElement = document.getElementById('video1');\n  if (videoElement.srcObject !== e.streams[0]) {\n    videoElement.srcObject = e.streams[0];\n  }\n}\n\nexport default async function onOfferHandler(data, apis) {\n  const server = null;\n  console.log('apis in onOfferHandler', apis);\n  // creating new RTCPeerConnetion\n  // TODO server configuration for TURN or STUN\n  const pc = new RTCPeerConnection(server);\n\n  // geting local audio and video\n  const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\n\n  // adding video and audio  track to pc\n  stream.getTracks().forEach(track => pc.addTrack(track, stream));\n\n  // adding some listener to track connetion state\n  pc.addEventListener('icecandidate', e => onIceCandidate(e, pc, apis));\n  pc.addEventListener('iceconnectionstatechange', e => onIceConnectionStateChange(e, pc));\n  pc.setRemoteDescription(data);\n  pc.addEventListener('track', gotRemoteStream);\n  try {\n    const answer = await pc.createAnswer();\n    pc.setLocalDescription(answer);\n    apis.createAnswer([answer, [{ userId: 2 }]]);\n    client.on('icecandidate', (event) => {\n      console.log('icecandidate handler called in remote', event);\n      pc.addIceCandidate(new RTCIceCandidate(JSON.parse(event)));\n    });\n  } catch (e) {\n    console.error('Error in Create Answer', e);\n  }\n  return pc;\n}\n"]},"metadata":{},"sourceType":"module"}