{"ast":null,"code":"import _classCallCheck from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Nabin/workspace/probro/packages/web/src/common/ClassComponents/ToolBar.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Button, Popover } from '@blueprintjs/core';\nimport Form from '../Form';\nimport { addUserToBoard } from './structure';\n\nvar PopoverContent = function PopoverContent(_ref) {\n  var callback = _ref.callback;\n  return React.createElement(\"div\", {\n    style: {\n      padding: '5px',\n      minWidth: '300px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(Form, {\n    data: addUserToBoard,\n    callback: callback,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }));\n};\n\nPopoverContent.propTypes = {\n  callback: PropTypes.func.isRequired\n};\n\nvar ToolBar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ToolBar, _React$Component);\n\n  function ToolBar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ToolBar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ToolBar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {};\n\n    _this.addUserToBoardHandler = function (data) {\n      var api = _this.props.api;\n      console.log('to be handled', data, api);\n      return {\n        response: 200,\n        message: 'Congratulations! You have added a new user'\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(ToolBar, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          boards = _this$props.boards,\n          boardId = _this$props.boardId;\n      return React.createElement(\"div\", {\n        className: \"tool-bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"toolbar-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"left-tools\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, boards.allIds.map(function (id) {\n        if (id === boardId) {\n          return boards.byId[id].name;\n        }\n      }))), React.createElement(\"div\", {\n        className: \"right-tools\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Popover, {\n        content: React.createElement(PopoverContent, {\n          callback: this.addUserToBoardHandler,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }),\n        position: \"left-top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(Button, {\n        icon: \"plus\",\n        text: \"Add User\",\n        minimal: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return ToolBar;\n}(React.Component);\n\nToolBar.propTypes = {\n  boards: PropTypes.objectOf(PropTypes.any).isRequired,\n  boardId: PropTypes.number.isRequired,\n  api: PropTypes.objectOf(PropTypes.any).isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var database = state.database;\n  var boards = database.Board;\n  return {\n    boards: boards\n  };\n};\n\nexport default connect(mapStateToProps)(ToolBar);","map":{"version":3,"sources":["/Users/Nabin/workspace/probro/packages/web/src/common/ClassComponents/ToolBar.js"],"names":["React","PropTypes","connect","Button","Popover","Form","addUserToBoard","PopoverContent","callback","padding","minWidth","propTypes","func","isRequired","ToolBar","state","addUserToBoardHandler","data","api","props","console","log","response","message","boards","boardId","allIds","map","id","byId","name","Component","objectOf","any","number","mapStateToProps","database","Board"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Button, Popover } from '@blueprintjs/core';\nimport Form from '../Form';\nimport { addUserToBoard } from './structure';\n\nconst PopoverContent = ({ callback }) => {\n  return (\n    <div style={{ padding: '5px', minWidth: '300px' }}>\n      <Form data={addUserToBoard} callback={callback} />\n    </div>\n  );\n};\n\nPopoverContent.propTypes = {\n  callback: PropTypes.func.isRequired,\n};\n\nclass ToolBar extends React.Component {\n  state = {};\n\n  addUserToBoardHandler = (data) => {\n    const { api } = this.props;\n    console.log('to be handled', data, api);\n    return { response: 200, message: 'Congratulations! You have added a new user' };\n  }\n\n  render() {\n    const { boards, boardId } = this.props;\n    return (\n      <div className=\"tool-bar\">\n        <div className=\"toolbar-container\">\n          <div className=\"left-tools\">\n            <span>\n              {\n                boards.allIds.map((id) => {\n                  if (id === boardId) {\n                    return boards.byId[id].name;\n                  }\n                })\n              }\n            </span>\n          </div>\n          <div className=\"right-tools\">\n            <Popover\n              content={<PopoverContent callback={this.addUserToBoardHandler} />}\n              position=\"left-top\"\n            >\n              <Button\n                icon=\"plus\"\n                text=\"Add User\"\n                minimal\n              />\n            </Popover>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nToolBar.propTypes = {\n  boards: PropTypes.objectOf(PropTypes.any).isRequired,\n  boardId: PropTypes.number.isRequired,\n  api: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  const { database } = state;\n  const boards = database.Board;\n  return {\n    boards,\n  };\n};\nexport default connect(mapStateToProps)(ToolBar);\n"]},"metadata":{},"sourceType":"module"}