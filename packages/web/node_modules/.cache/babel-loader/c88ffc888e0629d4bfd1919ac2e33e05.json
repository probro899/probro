{"ast":null,"code":"import _objectSpread from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Nabin/workspace/probro/packages/web/src/common/ClassComponents/TaskOverlay.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Dialog, Button, TextArea, Intent } from '@blueprintjs/core';\nimport PropTypes from 'prop-types';\nimport * as actions from '../../actions';\n\nvar profileIcon = require('../../assets/imageUploadIcon.png');\n\nvar TaskOverlay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TaskOverlay, _Component);\n\n  function TaskOverlay() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TaskOverlay);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TaskOverlay)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      editHead: false,\n      editDesc: false\n    };\n\n    _this.onClose = function () {\n      var _this$props = _this.props,\n          _class = _this$props._class,\n          updateClassValue = _this$props.updateClassValue;\n      updateClassValue('overLayContent', _objectSpread({}, _class.overLayContent, {\n        isOpen: false\n      }));\n\n      _this.setState({\n        editHead: false,\n        editDesc: false\n      });\n    };\n\n    _this.toggleElemTitle = function () {\n      var editHead = _this.state.editHead;\n\n      _this.setState({\n        editHead: !editHead\n      });\n    };\n\n    _this.toggleElemDesc = function () {\n      var editDesc = _this.state.editDesc;\n\n      _this.setState({\n        editDesc: !editDesc\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(TaskOverlay, [{\n    key: \"render\",\n    value: function render() {\n      var _class = this.props._class;\n      var _class$overLayContent = _class.overLayContent,\n          isOpen = _class$overLayContent.isOpen,\n          taskTitle = _class$overLayContent.taskTitle,\n          taskDescription = _class$overLayContent.taskDescription;\n      var _this$state = this.state,\n          editHead = _this$state.editHead,\n          editDesc = _this$state.editDesc;\n      return React.createElement(Dialog, {\n        isOpen: isOpen,\n        onClose: this.onClose,\n        className: \"overlay-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"task-detail-overlay\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"overlay-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, editHead ? React.createElement(TextArea, {\n        value: taskTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }) : React.createElement(\"div\", {\n        className: \"head\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, taskTitle)), editHead ? React.createElement(Button, {\n        text: \"Save\",\n        onClick: this.toggleElemTitle,\n        className: \"edit-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }) : React.createElement(Button, {\n        text: \"Edit\",\n        onClick: this.toggleElemTitle,\n        className: \"edit-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"overlay-description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"desc-head\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"u\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Description\"), editDesc ? React.createElement(Button, {\n        text: \"Save\",\n        onClick: this.toggleElemDesc,\n        small: true,\n        className: \"edit-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }) : React.createElement(Button, {\n        text: \"Edit\",\n        onClick: this.toggleElemDesc,\n        small: true,\n        className: \"edit-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"desc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, editDesc ? React.createElement(TextArea, {\n        value: taskDescription,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }) : React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, taskDescription))), React.createElement(\"div\", {\n        className: \"comment-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(TextArea, {\n        fill: true,\n        placeholder: \"Put your comments.\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), React.createElement(Button, {\n        style: {\n          marginLeft: '5px'\n        },\n        text: \"Submit\",\n        intent: Intent.PRIMARY,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"comments\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"History\"), React.createElement(\"div\", {\n        className: \"s-comment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: profileIcon,\n        height: \"45px\",\n        alt: \"profile or blank profile\",\n        style: {\n          border: '1px solid white',\n          borderRadius: '425px',\n          padding: '3px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return TaskOverlay;\n}(Component);\n\nTaskOverlay.propTypes = {\n  _class: PropTypes.objectOf(PropTypes.any).isRequired,\n  updateClassValue: PropTypes.func.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state, ownprops) {\n  return _objectSpread({}, state, ownprops);\n};\n\nexport default connect(mapStateToProps, _objectSpread({}, actions))(TaskOverlay);","map":{"version":3,"sources":["/Users/Nabin/workspace/probro/packages/web/src/common/ClassComponents/TaskOverlay.js"],"names":["React","Component","connect","Dialog","Button","TextArea","Intent","PropTypes","actions","profileIcon","require","TaskOverlay","state","editHead","editDesc","onClose","props","_class","updateClassValue","overLayContent","isOpen","setState","toggleElemTitle","toggleElemDesc","taskTitle","taskDescription","marginLeft","PRIMARY","border","borderRadius","padding","propTypes","objectOf","any","isRequired","func","mapStateToProps","ownprops"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Dialog, Button, TextArea, Intent } from '@blueprintjs/core';\nimport PropTypes from 'prop-types';\nimport * as actions from '../../actions';\n\nconst profileIcon = require('../../assets/imageUploadIcon.png');\n\nclass TaskOverlay extends Component {\n  state = {\n    editHead: false,\n    editDesc: false,\n  };\n\n  onClose = () => {\n    const { _class, updateClassValue } = this.props;\n    updateClassValue('overLayContent', { ..._class.overLayContent, isOpen: false });\n    this.setState({\n      editHead: false,\n      editDesc: false,\n    });\n  };\n\n  toggleElemTitle = () => {\n    const { editHead } = this.state;\n    this.setState({ editHead: !editHead });\n  };\n\n  toggleElemDesc = () => {\n    const { editDesc } = this.state;\n    this.setState({ editDesc: !editDesc });\n  };\n\n  render() {\n    const { _class } = this.props;\n    const { isOpen, taskTitle, taskDescription } = _class.overLayContent;\n    const { editHead, editDesc } = this.state;\n    return (\n      <Dialog\n        isOpen={isOpen}\n        onClose={this.onClose}\n        className=\"overlay-container\"\n      >\n        <div className=\"task-detail-overlay\">\n          <div className=\"overlay-title\">\n            {editHead ? <TextArea value={taskTitle} />\n              : (\n                <div className=\"head\">\n                  <span className=\"title\">\n                    {taskTitle}\n                  </span>\n                </div>\n              )\n            }\n            {editHead\n              ? (<Button\n                text=\"Save\"\n                onClick={this.toggleElemTitle}\n                className=\"edit-button\"\n              />\n              )\n              : (\n                <Button\n                  text=\"Edit\"\n                  onClick={this.toggleElemTitle}\n                  className=\"edit-button\"\n                />\n              )\n            }\n          </div>\n          <div className=\"overlay-description\">\n            <div className=\"desc-head\">\n              <u>Description</u>\n              {editDesc\n                ? (<Button\n                  text=\"Save\"\n                  onClick={this.toggleElemDesc}\n                  small\n                  className=\"edit-button\"\n                />\n                )\n                : (\n                  <Button\n                    text=\"Edit\"\n                    onClick={this.toggleElemDesc}\n                    small\n                    className=\"edit-button\"\n                  />\n                )\n              }\n            </div>\n            <div className=\"desc\">\n              {editDesc ? <TextArea value={taskDescription} /> : <span>{taskDescription}</span>}\n            </div>\n          </div>\n          <div className=\"comment-container\">\n            <TextArea\n              fill\n              placeholder=\"Put your comments.\"\n            />\n            <Button\n              style={{ marginLeft: '5px' }}\n              text=\"Submit\"\n              intent={Intent.PRIMARY}\n            />\n          </div>\n          <div className=\"comments\">\n            <h3>History</h3>\n            <div className=\"s-comment\">\n              <img\n                src={profileIcon}\n                height=\"45px\"\n                alt=\"profile or blank profile\"\n                style={{ border: '1px solid white', borderRadius: '425px', padding: '3px' }}\n              />\n            </div>\n          </div>\n        </div>\n      </Dialog>\n    );\n  }\n}\n\nTaskOverlay.propTypes = {\n  _class: PropTypes.objectOf(PropTypes.any).isRequired,\n  updateClassValue: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state, ownprops) => ({ ...state, ...ownprops });\nexport default connect(mapStateToProps, { ...actions })(TaskOverlay);\n"]},"metadata":{},"sourceType":"module"}