{"ast":null,"code":"import _objectSpread from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Nabin/workspace/probro/packages/web/src/common/Input.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { InputGroup, Icon, Label, Tooltip, Position } from '@blueprintjs/core';\n\nvar customIcon = function customIcon(icon, handleLockClick, password) {\n  if (icon.side === 'left') {\n    return {\n      leftIcon: React.createElement(Icon, {\n        onClick: handleLockClick,\n        iconName: icon.name,\n        iconSize: Icon.SIZE_LARGE,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }),\n      rightIcon: null\n    };\n  }\n\n  if (icon.side === 'right') {\n    console.log('inside right');\n    var rightIcon = React.createElement(Tooltip, {\n      content: password === false ? 'show' : 'hide',\n      position: Position.RIGHT,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      style: {\n        marginTop: 3,\n        marginRight: 5,\n        color: '#757575'\n      },\n      iconName: icon.name,\n      onClick: handleLockClick,\n      iconSize: \"20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }));\n    return {\n      leftIcon: null,\n      rightIcon: rightIcon\n    };\n  }\n\n  return {\n    leftIcon: null,\n    rightIcon: null\n  };\n};\n\nvar CustomInput =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CustomInput, _React$Component);\n\n  function CustomInput() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CustomInput);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CustomInput)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      showPassword: false\n    };\n\n    _this.handleLockClick = function () {\n      var showPassword = _this.state.showPassword;\n\n      _this.setState({\n        showPassword: !showPassword\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(CustomInput, [{\n    key: \"render\",\n    value: function render() {\n      // const {\n      //   placeholder, iconName, class_, label_, value, form, schema, password, updateFormValue,\n      // } = this.props;\n      var showPassword = this.state.showPassword;\n      var _this$props = this.props,\n          data = _this$props.data,\n          _onChange = _this$props.onChange,\n          value = _this$props.value;\n      var icons = {};\n\n      if (data.icon) {\n        icons = customIcon(data.icon, this.handleLockClick, showPassword);\n        delete data.icon;\n      }\n\n      console.log(icons.rightIcon, 'what?');\n      return React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"label-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, data.name), React.createElement(InputGroup, Object.assign({\n        onChange: function onChange(e) {\n          return _onChange(data.id, e.target.value);\n        },\n        value: value,\n        type: data.hidden ? 'password' : 'text',\n        leftIcon: icons.leftIcon,\n        rightElement: icons.rightIcon\n      }, data, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return CustomInput;\n}(React.Component);\n\nCustomInput.defaultProps = {\n  placeholder: '',\n  password: false,\n  iconName: null,\n  updateFormValue: null,\n  label_: null,\n  class_: 'input'\n};\nCustomInput.propTypes = {\n  placeholder: PropTypes.string,\n  iconName: PropTypes.string,\n  class_: PropTypes.string,\n  schema: PropTypes.string.isRequired,\n  updateFormValue: PropTypes.func,\n  label_: PropTypes.string,\n  password: PropTypes.bool,\n  value: PropTypes.string.isRequired,\n  form: PropTypes.objectOf(PropTypes.any).isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state, ownprops) {\n  return _objectSpread({}, state, ownprops);\n};\n\nexport default connect(mapStateToProps)(CustomInput);","map":{"version":3,"sources":["/Users/Nabin/workspace/probro/packages/web/src/common/Input.js"],"names":["React","connect","PropTypes","InputGroup","Icon","Label","Tooltip","Position","customIcon","icon","handleLockClick","password","side","leftIcon","name","SIZE_LARGE","rightIcon","console","log","RIGHT","marginTop","marginRight","color","CustomInput","state","showPassword","setState","props","data","onChange","value","icons","e","id","target","hidden","Component","defaultProps","placeholder","iconName","updateFormValue","label_","class_","propTypes","string","schema","isRequired","func","bool","form","objectOf","any","mapStateToProps","ownprops"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { InputGroup, Icon, Label, Tooltip, Position } from '@blueprintjs/core';\n\nconst customIcon = (icon, handleLockClick, password) => {\n  if (icon.side === 'left') {\n    return (\n      {\n        leftIcon:\n  <Icon onClick={handleLockClick} iconName={icon.name} iconSize={Icon.SIZE_LARGE} />,\n        rightIcon: null,\n      }\n    );\n  }\n  if (icon.side === 'right') {\n    console.log('inside right');\n    const rightIcon = (\n      <Tooltip content={password === false ? 'show' : 'hide'} position={Position.RIGHT}>\n        <Icon\n          style={{ marginTop: 3, marginRight: 5, color: '#757575' }}\n          iconName={icon.name}\n          onClick={handleLockClick}\n          iconSize=\"20\"\n        />\n      </Tooltip>\n    );\n    return (\n      { leftIcon: null, rightIcon }\n    );\n  }\n  return ({ leftIcon: null, rightIcon: null });\n};\n\nclass CustomInput extends React.Component {\n  state = {\n    showPassword: false,\n  }\n\n  handleLockClick = () => {\n    const { showPassword } = this.state;\n    this.setState({ showPassword: !showPassword });\n  }\n\n  render() {\n    // const {\n    //   placeholder, iconName, class_, label_, value, form, schema, password, updateFormValue,\n    // } = this.props;\n    const { showPassword } = this.state;\n    const { data, onChange, value } = this.props;\n    let icons = {};\n    if (data.icon) {\n      icons = customIcon(data.icon, this.handleLockClick, showPassword);\n      delete data.icon;\n    }\n    console.log(icons.rightIcon,'what?');\n    return (\n      <Label>\n        <span className=\"label-text\">{data.name}</span>\n        <InputGroup\n          onChange={e => onChange(data.id, e.target.value)}\n          value={value}\n          type={data.hidden ? 'password' : 'text'}\n          leftIcon={icons.leftIcon}\n          rightElement={icons.rightIcon}\n          {...data}\n        />\n        {/* <InputGroup\n          // [value] is just a convention to use the name of the variable transfered.\n          onChange={e => updateFormValue(schema, { [value]: e.target.value })}\n          placeholder={placeholder}\n          value={form[schema][value]}\n          className={class_}\n          leftIcon={leftIcon}\n          rightElement={rightIcon}\n          type={password && showPassword ? 'password' : 'text'}\n          large\n        /> */}\n      </Label>\n    );\n  }\n}\nCustomInput.defaultProps = {\n  placeholder: '',\n  password: false,\n  iconName: null,\n  updateFormValue: null,\n  label_: null,\n  class_: 'input',\n};\nCustomInput.propTypes = {\n  placeholder: PropTypes.string,\n  iconName: PropTypes.string,\n  class_: PropTypes.string,\n  schema: PropTypes.string.isRequired,\n  updateFormValue: PropTypes.func,\n  label_: PropTypes.string,\n  password: PropTypes.bool,\n  value: PropTypes.string.isRequired,\n  form: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nconst mapStateToProps = (state, ownprops) => ({ ...state, ...ownprops });\nexport default connect(mapStateToProps)(CustomInput);\n"]},"metadata":{},"sourceType":"module"}