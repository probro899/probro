{"ast":null,"code":"import _classCallCheck from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Nabin/workspace/probro/packages/web/src/common/Input.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { InputGroup, Icon, Label, Tooltip } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\n\nvar Lock = function Lock(iconName) {\n  if (iconName === 'Search') {\n    return React.createElement(Icon, {\n      icon: IconNames.SEARCH,\n      iconSize: Icon.SIZE_LARGE,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }), null;\n  }\n\n  if (iconName === 'Lock') {\n    return null, React.createElement(Icon, {\n      icon: IconNames.LOCK,\n      iconSize: \"15\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    });\n  }\n\n  return null;\n};\n\nvar CustomInput =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CustomInput, _React$Component);\n\n  function CustomInput(props) {\n    var _this;\n\n    _classCallCheck(this, CustomInput);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CustomInput).call(this, props));\n    _this.state = {\n      hide: true\n    };\n    return _this;\n  }\n\n  _createClass(CustomInput, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          placeholder = _this$props.placeholder,\n          iconName = _this$props.iconName,\n          class_ = _this$props.class_,\n          label_ = _this$props.label_;\n\n      var _Lock = Lock(iconName),\n          leftIcon = _Lock.leftIcon,\n          rightIcon = _Lock.rightIcon;\n\n      console.log('helo', leftIcon, rightIcon);\n      return React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"label-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, label_), React.createElement(InputGroup, {\n        placeholder: placeholder,\n        className: class_,\n        leftIcon: leftIcon,\n        rightElement: rightIcon,\n        large: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return CustomInput;\n}(React.Component);\n\nCustomInput.defaultProps = {\n  class_: 'input'\n};\nCustomInput.propTypes = {\n  placeholder: PropTypes.string.isRequired,\n  iconName: PropTypes.string.isRequired,\n  class_: PropTypes.string,\n  label_: PropTypes.string.isRequired\n};\nexport default CustomInput;","map":{"version":3,"sources":["/Users/Nabin/workspace/probro/packages/web/src/common/Input.js"],"names":["React","PropTypes","InputGroup","Icon","Label","Tooltip","IconNames","Lock","iconName","SEARCH","SIZE_LARGE","LOCK","CustomInput","props","state","hide","placeholder","class_","label_","leftIcon","rightIcon","console","log","Component","defaultProps","propTypes","string","isRequired"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,KAA3B,EAAkCC,OAAlC,QAAiD,mBAAjD;AACA,SAASC,SAAT,QAA0B,oBAA1B;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,QAAD,EAAc;AACzB,MAAIA,QAAQ,KAAK,QAAjB,EAA2B;AACzB,WACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEF,SAAS,CAACG,MAAtB;AAA8B,MAAA,QAAQ,EAAEN,IAAI,CAACO,UAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA6D,IAD/D;AAGD;;AACD,MAAIF,QAAQ,KAAK,MAAjB,EAAyB;AACvB,WACE,MAAM,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEF,SAAS,CAACK,IAAtB;AAA4B,MAAA,QAAQ,EAAC,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADR;AAGD;;AACD,SAAO,IAAP;AACD,CAZD;;IAcMC,W;;;;;AACJ,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,qFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAb;AAFiB;AAGlB;;;;6BAEQ;AAAA,wBAC2C,KAAKF,KADhD;AAAA,UACCG,WADD,eACCA,WADD;AAAA,UACcR,QADd,eACcA,QADd;AAAA,UACwBS,MADxB,eACwBA,MADxB;AAAA,UACgCC,MADhC,eACgCA,MADhC;;AAAA,kBAEyBX,IAAI,CAACC,QAAD,CAF7B;AAAA,UAECW,QAFD,SAECA,QAFD;AAAA,UAEWC,SAFX,SAEWA,SAFX;;AAGPC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBH,QAAnB,EAA6BC,SAA7B;AACA,aACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8BF,MAA9B,CADF,EAEE,oBAAC,UAAD;AACE,QAAA,WAAW,EAAEF,WADf;AAEE,QAAA,SAAS,EAAEC,MAFb;AAGE,QAAA,QAAQ,EAAEE,QAHZ;AAIE,QAAA,YAAY,EAAEC,SAJhB;AAKE,QAAA,KAAK,MALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAYD;;;;EAtBuBpB,KAAK,CAACuB,S;;AAwBhCX,WAAW,CAACY,YAAZ,GAA2B;AACzBP,EAAAA,MAAM,EAAE;AADiB,CAA3B;AAGAL,WAAW,CAACa,SAAZ,GAAwB;AACtBT,EAAAA,WAAW,EAAEf,SAAS,CAACyB,MAAV,CAAiBC,UADR;AAEtBnB,EAAAA,QAAQ,EAAEP,SAAS,CAACyB,MAAV,CAAiBC,UAFL;AAGtBV,EAAAA,MAAM,EAAEhB,SAAS,CAACyB,MAHI;AAItBR,EAAAA,MAAM,EAAEjB,SAAS,CAACyB,MAAV,CAAiBC;AAJH,CAAxB;AAMA,eAAef,WAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { InputGroup, Icon, Label, Tooltip } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\n\nconst Lock = (iconName) => {\n  if (iconName === 'Search') {\n    return (\n      <Icon icon={IconNames.SEARCH} iconSize={Icon.SIZE_LARGE} />, null\n    );\n  }\n  if (iconName === 'Lock') {\n    return (\n      null, <Icon icon={IconNames.LOCK} iconSize=\"15\" />\n    );\n  }\n  return null;\n};\n\nclass CustomInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hide: true };\n  }\n\n  render() {\n    const { placeholder, iconName, class_, label_ } = this.props;\n    const { leftIcon, rightIcon } = Lock(iconName);\n    console.log('helo',leftIcon, rightIcon);\n    return (\n      <Label>\n        <span className=\"label-text\">{label_}</span>\n        <InputGroup\n          placeholder={placeholder}\n          className={class_}\n          leftIcon={leftIcon}\n          rightElement={rightIcon}\n          large\n        />\n      </Label>\n    );\n  }\n}\nCustomInput.defaultProps = {\n  class_: 'input',\n};\nCustomInput.propTypes = {\n  placeholder: PropTypes.string.isRequired,\n  iconName: PropTypes.string.isRequired,\n  class_: PropTypes.string,\n  label_: PropTypes.string.isRequired,\n};\nexport default CustomInput;\n"]},"metadata":{},"sourceType":"module"}