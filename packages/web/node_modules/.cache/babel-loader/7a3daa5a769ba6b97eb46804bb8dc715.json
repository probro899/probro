{"ast":null,"code":"import _regeneratorRuntime from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport { updateMainValue } from '../index';\nimport { ENDPOINT } from '../../config';\nexport default\n/*#__PURE__*/\n(function () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(dispatch, getState) {\n    var token, formData, _getState, main, res, data;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // eslint-disable-next-line no-undef\n            token = sessionStorage.getItem('SESSION_ID'); // eslint-disable-next-line no-undef\n\n            formData = new FormData();\n            _getState = getState(), main = _getState.main;\n            formData.append('image', main.user.profilePicture);\n            formData.append('token', token);\n            _context.prev = 5;\n            _context.next = 8;\n            return axios({\n              config: {\n                headers: {\n                  'Content-Type': 'multipart/form-data'\n                }\n              },\n              method: 'post',\n              url: \"\".concat(ENDPOINT, \"/web/upload-image\"),\n              data: formData\n            });\n\n          case 8:\n            res = _context.sent;\n            data = res.data;\n\n            if (res.status === 200 && data.token) {\n              dispatch(updateMainValue('user', _objectSpread({}, data)));\n            }\n\n            _context.next = 16;\n            break;\n\n          case 13:\n            _context.prev = 13;\n            _context.t0 = _context[\"catch\"](5);\n            console.log(_context.t0);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[5, 13]]);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n})();","map":{"version":3,"sources":["/Users/Nabin/workspace/probro/packages/web/src/actions/helper-functions/updateProfilePicture.js"],"names":["axios","updateMainValue","ENDPOINT","dispatch","getState","token","sessionStorage","getItem","formData","FormData","main","append","user","profilePicture","config","headers","method","url","data","res","status","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,UAAhC;AACA,SAASC,QAAT,QAAyB,cAAzB;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAe,iBAAOC,QAAP,EAAiBC,QAAjB;AAAA;;AAAA;AAAA;AAAA;AAAA;AACb;AACMC,YAAAA,KAFO,GAECC,cAAc,CAACC,OAAf,CAAuB,YAAvB,CAFD,EAGb;;AACMC,YAAAA,QAJO,GAII,IAAIC,QAAJ,EAJJ;AAAA,wBAKIL,QAAQ,EALZ,EAKLM,IALK,aAKLA,IALK;AAMbF,YAAAA,QAAQ,CAACG,MAAT,CAAgB,OAAhB,EAAyBD,IAAI,CAACE,IAAL,CAAUC,cAAnC;AACAL,YAAAA,QAAQ,CAACG,MAAT,CAAgB,OAAhB,EAAyBN,KAAzB;AAPa;AAAA;AAAA,mBASOL,KAAK,CAAC;AACtBc,cAAAA,MAAM,EAAE;AACNC,gBAAAA,OAAO,EAAE;AACP,kCAAgB;AADT;AADH,eADc;AAMtBC,cAAAA,MAAM,EAAE,MANc;AAOtBC,cAAAA,GAAG,YAAKf,QAAL,sBAPmB;AAQtBgB,cAAAA,IAAI,EAAEV;AARgB,aAAD,CATZ;;AAAA;AASLW,YAAAA,GATK;AAmBHD,YAAAA,IAnBG,GAmBMC,GAnBN,CAmBHD,IAnBG;;AAoBX,gBAAIC,GAAG,CAACC,MAAJ,KAAe,GAAf,IAAsBF,IAAI,CAACb,KAA/B,EAAsC;AACpCF,cAAAA,QAAQ,CAACF,eAAe,CAAC,MAAD,oBAAciB,IAAd,EAAhB,CAAR;AACD;;AAtBU;AAAA;;AAAA;AAAA;AAAA;AAwBXG,YAAAA,OAAO,CAACC,GAAR;;AAxBW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAf;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import axios from 'axios';\nimport { updateMainValue } from '../index';\nimport { ENDPOINT } from '../../config';\n\nexport default async (dispatch, getState) => {\n  // eslint-disable-next-line no-undef\n  const token = sessionStorage.getItem('SESSION_ID');\n  // eslint-disable-next-line no-undef\n  const formData = new FormData();\n  const { main } = getState();\n  formData.append('image', main.user.profilePicture);\n  formData.append('token', token);\n  try {\n    const res = await axios({\n      config: {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      },\n      method: 'post',\n      url: `${ENDPOINT}/web/upload-image`,\n      data: formData,\n    });\n    const { data } = res;\n    if (res.status === 200 && data.token) {\n      dispatch(updateMainValue('user', { ...data }));\n    }\n  } catch (e) {\n    console.log(e);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}