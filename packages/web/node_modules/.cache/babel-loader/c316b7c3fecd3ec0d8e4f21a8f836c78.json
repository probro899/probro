{"ast":null,"code":"import _classCallCheck from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Nabin/workspace/probro/packages/web/src/common/Input.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { InputGroup, Icon, Label, Tooltip, Button } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\n\nvar customIcon = function customIcon(iconName, handleLockClick) {\n  if (iconName === 'Search') {\n    return {\n      leftIcon: React.createElement(Icon, {\n        icon: IconNames.SEARCH,\n        iconSize: Icon.SIZE_LARGE,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }),\n      rightIcon: null\n    };\n  }\n\n  if (iconName === 'Lock') {\n    var rightIcon = React.createElement(Tooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: {\n        height: '100%',\n        width: '100%'\n      },\n      icon: IconNames.EYE_OFF,\n      minimal: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }));\n    return (// { leftIcon: null, rightIcon: <Icon icon={IconNames.EYE_OPEN} iconSize=\"25\" style={{ height: '100%', width: '100%', alignItems: 'center' }} onClick={handleLockClick} /> }\n      {\n        leftIcon: null,\n        rightIcon: rightIcon\n      }\n    );\n  }\n\n  return {\n    leftIcon: null,\n    rightIcon: null\n  };\n};\n\nvar CustomInput =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CustomInput, _React$Component);\n\n  function CustomInput(props) {\n    var _this;\n\n    _classCallCheck(this, CustomInput);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CustomInput).call(this, props));\n\n    _this.handleLockClick = function () {\n      var showPassword = _this.state.showPassword;\n\n      _this.setState({\n        showPassword: !showPassword\n      });\n    };\n\n    _this.state = {\n      showPassword: false\n    };\n    return _this;\n  }\n\n  _createClass(CustomInput, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          placeholder = _this$props.placeholder,\n          iconName = _this$props.iconName,\n          class_ = _this$props.class_,\n          label_ = _this$props.label_;\n\n      var _customIcon = customIcon(iconName, this.handleLockClick),\n          leftIcon = _customIcon.leftIcon,\n          rightIcon = _customIcon.rightIcon;\n\n      var showPassword = this.state.showPassword;\n      return React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"label-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, label_), React.createElement(InputGroup, {\n        placeholder: placeholder,\n        className: class_,\n        leftIcon: leftIcon,\n        rightElement: rightIcon,\n        type: showPassword ? 'text' : 'password',\n        large: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return CustomInput;\n}(React.Component);\n\nCustomInput.defaultProps = {\n  class_: 'input'\n};\nCustomInput.propTypes = {\n  placeholder: PropTypes.string.isRequired,\n  iconName: PropTypes.string.isRequired,\n  class_: PropTypes.string,\n  label_: PropTypes.string.isRequired\n};\nexport default CustomInput;","map":{"version":3,"sources":["/Users/Nabin/workspace/probro/packages/web/src/common/Input.js"],"names":["React","PropTypes","InputGroup","Icon","Label","Tooltip","Button","IconNames","customIcon","iconName","handleLockClick","leftIcon","SEARCH","SIZE_LARGE","rightIcon","height","width","EYE_OFF","CustomInput","props","showPassword","state","setState","placeholder","class_","label_","Component","defaultProps","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { InputGroup, Icon, Label, Tooltip, Button } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\n\nconst customIcon = (iconName, handleLockClick) => {\n  if (iconName === 'Search') {\n    return (\n      { leftIcon: <Icon icon={IconNames.SEARCH} iconSize={Icon.SIZE_LARGE} />, rightIcon: null }\n    );\n  }\n  if (iconName === 'Lock') {\n    const rightIcon = (\n      <Tooltip>\n        <Button\n          style={{ height: '100%', width: '100%' }}\n          icon={IconNames.EYE_OFF}\n          minimal\n        />\n      </Tooltip>\n    );\n    return (\n      // { leftIcon: null, rightIcon: <Icon icon={IconNames.EYE_OPEN} iconSize=\"25\" style={{ height: '100%', width: '100%', alignItems: 'center' }} onClick={handleLockClick} /> }\n      { leftIcon: null, rightIcon }\n    );\n  }\n  return ({ leftIcon: null, rightIcon: null });\n};\n\nclass CustomInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { showPassword: false };\n  }\n\n  handleLockClick = () => {\n    const { showPassword } = this.state;\n    this.setState({ showPassword: !showPassword });\n  }\n\n  render() {\n    const { placeholder, iconName, class_, label_ } = this.props;\n    const { leftIcon, rightIcon } = customIcon(iconName, this.handleLockClick);\n    const { showPassword } = this.state;\n    return (\n      <Label>\n        <span className=\"label-text\">{label_}</span>\n        <InputGroup\n          placeholder={placeholder}\n          className={class_}\n          leftIcon={leftIcon}\n          rightElement={rightIcon}\n          type={showPassword ? 'text' : 'password'}\n          large\n        />\n      </Label>\n    );\n  }\n}\nCustomInput.defaultProps = {\n  class_: 'input',\n};\nCustomInput.propTypes = {\n  placeholder: PropTypes.string.isRequired,\n  iconName: PropTypes.string.isRequired,\n  class_: PropTypes.string,\n  label_: PropTypes.string.isRequired,\n};\nexport default CustomInput;\n"]},"metadata":{},"sourceType":"module"}