{"ast":null,"code":"import _objectSpread from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Nabin/workspace/probro/packages/web/src/common/Input.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { InputGroup, Icon, Label, Tooltip, Position } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\n\nvar customIcon = function customIcon(iconName, handleLockClick, password) {\n  if (iconName === 'Search') {\n    return {\n      leftIcon: React.createElement(Icon, {\n        icon: IconNames.SEARCH,\n        iconSize: Icon.SIZE_LARGE,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }),\n      rightIcon: null\n    };\n  }\n\n  if (iconName === 'Lock') {\n    var rightIcon = React.createElement(Tooltip, {\n      content: password ? 'Hide' : 'Show',\n      position: Position.RIGHT,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      style: {\n        marginTop: 3,\n        marginRight: 5,\n        color: '#757575'\n      },\n      icon: password ? IconNames.EYE_OFF : IconNames.EYE_OPEN,\n      onClick: handleLockClick,\n      iconSize: \"20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }));\n    return {\n      leftIcon: null,\n      rightIcon: rightIcon\n    };\n  }\n\n  return {\n    leftIcon: null,\n    rightIcon: null\n  };\n};\n\nvar CustomInput =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CustomInput, _React$Component);\n\n  function CustomInput() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CustomInput);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CustomInput)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      showPassword: true\n    };\n\n    _this.handleLockClick = function () {\n      var showPassword = _this.state.showPassword;\n\n      _this.setState({\n        showPassword: !showPassword\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(CustomInput, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          placeholder = _this$props.placeholder,\n          iconName = _this$props.iconName,\n          class_ = _this$props.class_,\n          label_ = _this$props.label_,\n          value = _this$props.value,\n          form = _this$props.form,\n          schema = _this$props.schema,\n          password = _this$props.password,\n          mainFormHandler = _this$props.mainFormHandler;\n      var showPassword = this.state.showPassword;\n\n      var _customIcon = customIcon(iconName, this.handleLockClick, showPassword),\n          leftIcon = _customIcon.leftIcon,\n          rightIcon = _customIcon.rightIcon;\n\n      return React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"label-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, label_), React.createElement(InputGroup // [value] is just a convention to use the name of the variable transfered.\n      , {\n        onChange: function onChange(e) {\n          return mainFormHandler(schema, _defineProperty({}, value, e.target.value));\n        },\n        placeholder: placeholder,\n        value: form[schema][value],\n        className: class_,\n        leftIcon: leftIcon,\n        rightElement: rightIcon,\n        type: password && showPassword ? 'password' : 'text',\n        large: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return CustomInput;\n}(React.Component);\n\nCustomInput.defaultProps = {\n  password: false,\n  iconName: null,\n  mainFormHandler: null,\n  label_: null,\n  class_: 'input'\n};\nCustomInput.propTypes = {\n  placeholder: PropTypes.string.isRequired,\n  iconName: PropTypes.string,\n  class_: PropTypes.string,\n  schema: PropTypes.string.isRequired,\n  mainFormHandler: PropTypes.func,\n  label_: PropTypes.string,\n  password: PropTypes.bool,\n  value: PropTypes.string.isRequired,\n  form: PropTypes.objectOf(PropTypes.any).isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state, ownprops) {\n  return _objectSpread({}, state, ownprops);\n};\n\nexport default connect(mapStateToProps)(CustomInput);","map":{"version":3,"sources":["/Users/Nabin/workspace/probro/packages/web/src/common/Input.js"],"names":["React","connect","PropTypes","InputGroup","Icon","Label","Tooltip","Position","IconNames","customIcon","iconName","handleLockClick","password","leftIcon","SEARCH","SIZE_LARGE","rightIcon","RIGHT","marginTop","marginRight","color","EYE_OFF","EYE_OPEN","CustomInput","state","showPassword","setState","props","placeholder","class_","label_","value","form","schema","mainFormHandler","e","target","Component","defaultProps","propTypes","string","isRequired","func","bool","objectOf","any","mapStateToProps","ownprops"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,KAA3B,EAAkCC,OAAlC,EAA2CC,QAA3C,QAA2D,mBAA3D;AACA,SAASC,SAAT,QAA0B,oBAA1B;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,QAAD,EAAWC,eAAX,EAA4BC,QAA5B,EAAyC;AAC1D,MAAIF,QAAQ,KAAK,QAAjB,EAA2B;AACzB,WACE;AAAEG,MAAAA,QAAQ,EAAE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAEL,SAAS,CAACM,MAAtB;AAA8B,QAAA,QAAQ,EAAEV,IAAI,CAACW,UAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAZ;AAAyEC,MAAAA,SAAS,EAAE;AAApF,KADF;AAGD;;AACD,MAAIN,QAAQ,KAAK,MAAjB,EAAyB;AACvB,QAAMM,SAAS,GACb,oBAAC,OAAD;AAAS,MAAA,OAAO,EAAEJ,QAAQ,GAAG,MAAH,GAAY,MAAtC;AAA8C,MAAA,QAAQ,EAAEL,QAAQ,CAACU,KAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AACE,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE,CAAb;AAAgBC,QAAAA,WAAW,EAAE,CAA7B;AAAgCC,QAAAA,KAAK,EAAE;AAAvC,OADT;AAEE,MAAA,IAAI,EAAER,QAAQ,GAAGJ,SAAS,CAACa,OAAb,GAAuBb,SAAS,CAACc,QAFjD;AAGE,MAAA,OAAO,EAAEX,eAHX;AAIE,MAAA,QAAQ,EAAC,IAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAUA,WACE;AAAEE,MAAAA,QAAQ,EAAE,IAAZ;AAAkBG,MAAAA,SAAS,EAATA;AAAlB,KADF;AAGD;;AACD,SAAQ;AAAEH,IAAAA,QAAQ,EAAE,IAAZ;AAAkBG,IAAAA,SAAS,EAAE;AAA7B,GAAR;AACD,CAtBD;;IAwBMO,W;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,YAAY,EAAE;AADR,K;;UAIRd,e,GAAkB,YAAM;AAAA,UACdc,YADc,GACG,MAAKD,KADR,CACdC,YADc;;AAEtB,YAAKC,QAAL,CAAc;AAAED,QAAAA,YAAY,EAAE,CAACA;AAAjB,OAAd;AACD,K;;;;;;;6BAEQ;AAAA,wBAGH,KAAKE,KAHF;AAAA,UAELC,WAFK,eAELA,WAFK;AAAA,UAEQlB,QAFR,eAEQA,QAFR;AAAA,UAEkBmB,MAFlB,eAEkBA,MAFlB;AAAA,UAE0BC,MAF1B,eAE0BA,MAF1B;AAAA,UAEkCC,KAFlC,eAEkCA,KAFlC;AAAA,UAEyCC,IAFzC,eAEyCA,IAFzC;AAAA,UAE+CC,MAF/C,eAE+CA,MAF/C;AAAA,UAEuDrB,QAFvD,eAEuDA,QAFvD;AAAA,UAEiEsB,eAFjE,eAEiEA,eAFjE;AAAA,UAICT,YAJD,GAIkB,KAAKD,KAJvB,CAICC,YAJD;;AAAA,wBAKyBhB,UAAU,CAACC,QAAD,EAAW,KAAKC,eAAhB,EAAiCc,YAAjC,CALnC;AAAA,UAKCZ,QALD,eAKCA,QALD;AAAA,UAKWG,SALX,eAKWA,SALX;;AAMP,aACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8Bc,MAA9B,CADF,EAEE,oBAAC,UAAD,CACE;AADF;AAEE,QAAA,QAAQ,EAAE,kBAAAK,CAAC;AAAA,iBAAID,eAAe,CAACD,MAAD,sBAAYF,KAAZ,EAAoBI,CAAC,CAACC,MAAF,CAASL,KAA7B,EAAnB;AAAA,SAFb;AAGE,QAAA,WAAW,EAAEH,WAHf;AAIE,QAAA,KAAK,EAAEI,IAAI,CAACC,MAAD,CAAJ,CAAaF,KAAb,CAJT;AAKE,QAAA,SAAS,EAAEF,MALb;AAME,QAAA,QAAQ,EAAEhB,QANZ;AAOE,QAAA,YAAY,EAAEG,SAPhB;AAQE,QAAA,IAAI,EAAEJ,QAAQ,IAAIa,YAAZ,GAA2B,UAA3B,GAAwC,MARhD;AASE,QAAA,KAAK,MATP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAgBD;;;;EAhCuBzB,KAAK,CAACqC,S;;AAkChCd,WAAW,CAACe,YAAZ,GAA2B;AACzB1B,EAAAA,QAAQ,EAAE,KADe;AAEzBF,EAAAA,QAAQ,EAAE,IAFe;AAGzBwB,EAAAA,eAAe,EAAE,IAHQ;AAIzBJ,EAAAA,MAAM,EAAE,IAJiB;AAKzBD,EAAAA,MAAM,EAAE;AALiB,CAA3B;AAOAN,WAAW,CAACgB,SAAZ,GAAwB;AACtBX,EAAAA,WAAW,EAAE1B,SAAS,CAACsC,MAAV,CAAiBC,UADR;AAEtB/B,EAAAA,QAAQ,EAAER,SAAS,CAACsC,MAFE;AAGtBX,EAAAA,MAAM,EAAE3B,SAAS,CAACsC,MAHI;AAItBP,EAAAA,MAAM,EAAE/B,SAAS,CAACsC,MAAV,CAAiBC,UAJH;AAKtBP,EAAAA,eAAe,EAAEhC,SAAS,CAACwC,IALL;AAMtBZ,EAAAA,MAAM,EAAE5B,SAAS,CAACsC,MANI;AAOtB5B,EAAAA,QAAQ,EAAEV,SAAS,CAACyC,IAPE;AAQtBZ,EAAAA,KAAK,EAAE7B,SAAS,CAACsC,MAAV,CAAiBC,UARF;AAStBT,EAAAA,IAAI,EAAE9B,SAAS,CAAC0C,QAAV,CAAmB1C,SAAS,CAAC2C,GAA7B,EAAkCJ;AATlB,CAAxB;;AAYA,IAAMK,eAAe,GAAG,SAAlBA,eAAkB,CAACtB,KAAD,EAAQuB,QAAR;AAAA,2BAA2BvB,KAA3B,EAAqCuB,QAArC;AAAA,CAAxB;;AACA,eAAe9C,OAAO,CAAC6C,eAAD,CAAP,CAAyBvB,WAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { InputGroup, Icon, Label, Tooltip, Position } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\n\nconst customIcon = (iconName, handleLockClick, password) => {\n  if (iconName === 'Search') {\n    return (\n      { leftIcon: <Icon icon={IconNames.SEARCH} iconSize={Icon.SIZE_LARGE} />, rightIcon: null }\n    );\n  }\n  if (iconName === 'Lock') {\n    const rightIcon = (\n      <Tooltip content={password ? 'Hide' : 'Show'} position={Position.RIGHT}>\n        <Icon\n          style={{ marginTop: 3, marginRight: 5, color: '#757575' }}\n          icon={password ? IconNames.EYE_OFF : IconNames.EYE_OPEN}\n          onClick={handleLockClick}\n          iconSize=\"20\"\n        />\n      </Tooltip>\n    );\n    return (\n      { leftIcon: null, rightIcon }\n    );\n  }\n  return ({ leftIcon: null, rightIcon: null });\n};\n\nclass CustomInput extends React.Component {\n  state = {\n    showPassword: true,\n  }\n\n  handleLockClick = () => {\n    const { showPassword } = this.state;\n    this.setState({ showPassword: !showPassword });\n  }\n\n  render() {\n    const {\n      placeholder, iconName, class_, label_, value, form, schema, password, mainFormHandler,\n    } = this.props;\n    const { showPassword } = this.state;\n    const { leftIcon, rightIcon } = customIcon(iconName, this.handleLockClick, showPassword);\n    return (\n      <Label>\n        <span className=\"label-text\">{label_}</span>\n        <InputGroup\n          // [value] is just a convention to use the name of the variable transfered.\n          onChange={e => mainFormHandler(schema, { [value]: e.target.value })}\n          placeholder={placeholder}\n          value={form[schema][value]}\n          className={class_}\n          leftIcon={leftIcon}\n          rightElement={rightIcon}\n          type={password && showPassword ? 'password' : 'text'}\n          large\n        />\n      </Label>\n    );\n  }\n}\nCustomInput.defaultProps = {\n  password: false,\n  iconName: null,\n  mainFormHandler: null,\n  label_: null,\n  class_: 'input',\n};\nCustomInput.propTypes = {\n  placeholder: PropTypes.string.isRequired,\n  iconName: PropTypes.string,\n  class_: PropTypes.string,\n  schema: PropTypes.string.isRequired,\n  mainFormHandler: PropTypes.func,\n  label_: PropTypes.string,\n  password: PropTypes.bool,\n  value: PropTypes.string.isRequired,\n  form: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nconst mapStateToProps = (state, ownprops) => ({ ...state, ...ownprops });\nexport default connect(mapStateToProps)(CustomInput);\n"]},"metadata":{},"sourceType":"module"}