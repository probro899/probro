{"ast":null,"code":"import _regeneratorRuntime from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Nabin/workspace/probro/packages/web/src/screens/users/components/Class.js\";\nimport React, { Component } from 'react';\nimport { Dialog, Button, Menu, MenuItem, Popover, TextArea } from '@blueprintjs/core';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Form, DeletePopOver } from '../../../common';\nimport boardStructure from '../../../common/ClassComponents/structure';\nimport client from '../../../socket';\n\nvar PopOver = function PopOver(_ref) {\n  var isOpen = _ref.isOpen,\n      onClose = _ref.onClose,\n      callback = _ref.callback;\n  return React.createElement(Dialog, {\n    isOpen: isOpen,\n    onClose: onClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(Form, {\n    data: boardStructure,\n    callback: callback,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }));\n}; // more button popover here id holds the id of the board\n\n\nvar SmallMenu = function SmallMenu(onclick, id) {\n  return React.createElement(Menu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    icon: \"edit\",\n    text: \"Edit\",\n    onClick: function onClick() {\n      return onclick('edit', id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(Menu.Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(MenuItem, {\n    icon: \"delete\",\n    intent: \"danger\",\n    text: \"Delete\",\n    onClick: function onClick() {\n      return onclick('delete', id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }));\n};\n\nvar Class =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Class, _Component);\n\n  function Class() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Class);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Class)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      // create holds bool for the add new class popover\n      createBool: false,\n      deleteClass: {\n        id: '',\n        name: '',\n        deletePopOverBool: false\n      },\n      updateClass: {\n        id: '',\n        updateClassBool: false\n      },\n      api: {}\n    };\n\n    _this.createNewBoard =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(arg) {\n        var data, account, api;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                data = arg;\n                account = _this.props.account;\n                api = _this.state.api;\n                data.userId = account.user.id;\n                data.timeStamp = Date.now();\n                _context.next = 7;\n                return api.addBoard(data);\n\n              case 7:\n                _this.newClass();\n\n                return _context.abrupt(\"return\", {\n                  response: 200\n                });\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.newClass = function () {\n      var createBool = _this.state.createBool;\n\n      _this.setState({\n        createBool: !createBool\n      });\n    };\n\n    _this.onMore =\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(action, id) {\n        var _this$state, deleteClass, updateClass, database;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _this$state = _this.state, deleteClass = _this$state.deleteClass, updateClass = _this$state.updateClass;\n                database = _this.props.database;\n\n                if (action === 'delete') {\n                  _this.setState({\n                    deleteClass: {\n                      id: id,\n                      name: database.Board.byId[id].name,\n                      deletePopOverBool: !deleteClass.deletePopOverBool\n                    }\n                  });\n                }\n\n                if (action === 'edit') {\n                  _this.setState({\n                    updateClass: {\n                      id: id,\n                      updateClassBool: !updateClass.updateClassBool\n                    }\n                  });\n                }\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2, _x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    _this.deleteClass =\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(type) {\n        var _this$state2, deleteClass, api;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _this$state2 = _this.state, deleteClass = _this$state2.deleteClass, api = _this$state2.api;\n\n                if (!(type === 'confirm')) {\n                  _context3.next = 4;\n                  break;\n                }\n\n                _context3.next = 4;\n                return api.deleteBoard({\n                  id: deleteClass.id\n                });\n\n              case 4:\n                _this.setState({\n                  deleteClass: {\n                    id: '',\n                    name: '',\n                    deletePopOverBool: !deleteClass.deletePopOverBool\n                  }\n                });\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x4) {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n\n    _this.updateClass =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee4() {\n      var _this$state3, updateClass, api;\n\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _this$state3 = _this.state, updateClass = _this$state3.updateClass, api = _this$state3.api;\n              _context4.next = 3;\n              return api.updateBoard([{\n                name: updateClass.name\n              }, {\n                id: updateClass.name\n              }]);\n\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    _this.cancleUpdate = function () {\n      var updateClass = _this.state.updateClass;\n\n      _this.setState({\n        updateClass: {\n          id: '',\n          updateClassBool: !updateClass.updateClassBool\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Class, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5() {\n        var api;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return client.scope('Mentee');\n\n              case 2:\n                api = _context5.sent;\n                this.setState({\n                  api: api\n                });\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }() // create new class from here\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          account = _this$props.account,\n          database = _this$props.database;\n      var _this$state4 = this.state,\n          createBool = _this$state4.createBool,\n          deleteClass = _this$state4.deleteClass,\n          updateClass = _this$state4.updateClass;\n      return React.createElement(\"div\", {\n        className: \"classes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(DeletePopOver, {\n        isOpen: deleteClass.deletePopOverBool,\n        action: this.deleteClass,\n        name: deleteClass.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"Classes\"), React.createElement(\"div\", {\n        className: \"content-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, database.Board.allIds.map(function (id) {\n        return React.createElement(\"div\", {\n          style: {\n            position: 'relative'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }, React.createElement(Popover, {\n          content: SmallMenu(_this2.onMore, id),\n          position: \"right\",\n          className: \"more-button\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157\n          },\n          __self: this\n        }, React.createElement(Button, {\n          icon: \"more\",\n          minimal: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        })), React.createElement(Link, {\n          push: true,\n          to: \"/class-work/\".concat(account.sessionId, \"/me\"),\n          className: \"content-link\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"class-repr\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        }, database.Board.byId[id].name)), React.createElement(\"div\", {\n          className: \"class-detail\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        }, \"created-by:\", database.Board.byId[id].userId, \"date:\", database.Board.byId[id].timeStamp)));\n      }), React.createElement(\"div\", {\n        className: \"content-link\",\n        onClick: this.newClass,\n        onKeyDown: this.newClass,\n        role: \"button\",\n        tabIndex: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"Create a New class\"))), React.createElement(PopOver, {\n        isOpen: createBool,\n        onClose: this.newClass,\n        callback: this.createNewBoard,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }), React.createElement(PopOver, {\n        isOpen: updateClass.updateClassBool,\n        onClose: this.cancleUpdate,\n        callback: this.updateClass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Class;\n}(Component);\n\nClass.propTypes = {\n  account: PropTypes.objectOf(PropTypes.any).isRequired,\n  database: PropTypes.objectOf(PropTypes.any).isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return state;\n};\n\nexport default connect(mapStateToProps)(Class);","map":{"version":3,"sources":["/Users/Nabin/workspace/probro/packages/web/src/screens/users/components/Class.js"],"names":["React","Component","Dialog","Button","Menu","MenuItem","Popover","TextArea","PropTypes","Link","connect","Form","DeletePopOver","boardStructure","client","PopOver","isOpen","onClose","callback","SmallMenu","onclick","id","Class","state","createBool","deleteClass","name","deletePopOverBool","updateClass","updateClassBool","api","createNewBoard","arg","data","account","props","userId","user","timeStamp","Date","now","addBoard","newClass","response","setState","onMore","action","database","Board","byId","type","deleteBoard","updateBoard","cancleUpdate","scope","allIds","map","position","sessionId","propTypes","objectOf","any","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Dialog, Button, Menu, MenuItem, Popover, TextArea } from '@blueprintjs/core';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Form, DeletePopOver } from '../../../common';\nimport boardStructure from '../../../common/ClassComponents/structure';\nimport client from '../../../socket';\n\nconst PopOver = ({isOpen, onClose, callback}) => {\n  return (\n    <Dialog\n      isOpen={isOpen}\n      onClose={onClose}\n    >\n      <Form data={boardStructure} callback={callback} />\n    </Dialog>\n  );\n};\n\n// more button popover here id holds the id of the board\nconst SmallMenu = (onclick, id) => {\n  return (\n    <Menu>\n      <MenuItem\n        icon=\"edit\"\n        text=\"Edit\"\n        onClick={() => onclick('edit', id)}\n      />\n      <Menu.Divider />\n      <MenuItem\n        icon=\"delete\"\n        intent=\"danger\"\n        text=\"Delete\"\n        onClick={() => onclick('delete', id)}\n      />\n    </Menu>\n  );\n};\n\nclass Class extends Component {\n  state = {\n    // create holds bool for the add new class popover\n    createBool: false,\n    deleteClass: {\n      id: '',\n      name: '',\n      deletePopOverBool: false,\n    },\n    updateClass: {\n      id: '',\n      updateClassBool: false,\n    },\n    api: {},\n  };\n\n  async componentWillMount() {\n    const api = await client.scope('Mentee');\n    this.setState({\n      api,\n    });\n  }\n\n  // create new class from here\n  createNewBoard = async (arg) => {\n    const data = arg;\n    const { account } = this.props;\n    const { api } = this.state;\n    data.userId = account.user.id;\n    data.timeStamp = Date.now();\n    await api.addBoard(data);\n    this.newClass();\n    return { response: 200 };\n  }\n\n  // toggle the create new class popover\n  newClass = () => {\n    const { createBool } = this.state;\n    this.setState({\n      createBool: !createBool,\n    });\n  }\n\n  // this is more button handle function\n  onMore = async (action, id) => {\n    const { deleteClass, updateClass } = this.state;\n    const { database } = this.props;\n    if (action === 'delete') {\n      this.setState({\n        deleteClass: {\n          id,\n          name: database.Board.byId[id].name,\n          deletePopOverBool: !deleteClass.deletePopOverBool,\n        },\n      });\n    }\n    if (action === 'edit') {\n      this.setState({\n        updateClass: {\n          id,\n          updateClassBool: !updateClass.updateClassBool,\n        },\n      });\n    }\n  }\n\n  // handle delete of the boards\n  deleteClass = async (type) => {\n    const { deleteClass, api } = this.state;\n    if (type === 'confirm') {\n      await api.deleteBoard({ id: deleteClass.id });\n    }\n    this.setState({\n      deleteClass: {\n        id: '',\n        name: '',\n        deletePopOverBool: !deleteClass.deletePopOverBool,\n      },\n    });\n  }\n\n  // handle the edit of the board name\n  updateClass = async () => {\n    const { updateClass, api } = this.state;\n    await api.updateBoard([{ name: updateClass.name }, { id: updateClass.name }]);\n  }\n\n  cancleUpdate = () => {\n    const { updateClass } = this.state;\n    this.setState({\n      updateClass: {\n        id: '',\n        updateClassBool: !updateClass.updateClassBool,\n      },\n    });\n  }\n\n  render() {\n    const { account, database } = this.props;\n    const { createBool, deleteClass, updateClass } = this.state;\n    return (\n      <div className=\"classes\">\n        <DeletePopOver\n          isOpen={deleteClass.deletePopOverBool}\n          action={this.deleteClass}\n          name={deleteClass.name}\n        />\n        <div className=\"header\">\n          Classes\n        </div>\n        <div className=\"content-list\">\n          {\n            database.Board.allIds.map((id) => {\n              return (\n                <div style={{ position: 'relative' }}>\n                  {/* more button popover */}\n                  <Popover\n                    content={SmallMenu(this.onMore, id)}\n                    position=\"right\"\n                    className=\"more-button\"\n                  >\n                    <Button icon=\"more\" minimal />\n                  </Popover>\n                  <Link push to={`/class-work/${account.sessionId}/me`} className=\"content-link\">\n                    <div className=\"class-repr\">\n                      <span>\n                        {database.Board.byId[id].name}\n                      </span>\n                    </div>\n                    <div className=\"class-detail\">\n                      created-by:\n                      {database.Board.byId[id].userId}\n                      date:\n                      {database.Board.byId[id].timeStamp}\n                    </div>\n                  </Link>\n                </div>\n              );\n            })\n          }\n          {/* this is add new board button down from here */}\n          <div\n            className=\"content-link\"\n            onClick={this.newClass}\n            onKeyDown={this.newClass}\n            role=\"button\"\n            tabIndex={0}\n          >\n            <span>Create a New class</span>\n          </div>\n        </div>\n        {/* create new class popover */}\n        <PopOver isOpen={createBool} onClose={this.newClass} callback={this.createNewBoard} />\n        <PopOver\n          isOpen={updateClass.updateClassBool}\n          onClose={this.cancleUpdate}\n          callback={this.updateClass}\n        />\n      </div>\n    );\n  }\n}\n\nClass.propTypes = {\n  account: PropTypes.objectOf(PropTypes.any).isRequired,\n  database: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nconst mapStateToProps = state => state;\nexport default connect(mapStateToProps)(Class);\n"]},"metadata":{},"sourceType":"module"}