{"ast":null,"code":"import _regeneratorRuntime from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Nabin/workspace/probro/packages/web/src/common/ClassComponents/ToolBar.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Button, Popover } from '@blueprintjs/core';\nimport Form from '../Form';\nimport { addUserToBoard } from './structure';\n\nvar PopoverContent = function PopoverContent(_ref) {\n  var callback = _ref.callback;\n  return React.createElement(\"div\", {\n    style: {\n      padding: '5px',\n      minWidth: '300px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(Form, {\n    data: addUserToBoard,\n    callback: callback,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }));\n};\n\nPopoverContent.propTypes = {\n  callback: PropTypes.func.isRequired\n};\n\nvar ToolBar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ToolBar, _React$Component);\n\n  function ToolBar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ToolBar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ToolBar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {};\n\n    _this.addUserToBoardHandler =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(data) {\n        var _this$props, api, boards, boardId, obj;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this$props = _this.props, api = _this$props.api, boards = _this$props.boards, boardId = _this$props.boardId;\n                obj = _objectSpread({}, data, {\n                  joinStatus: false,\n                  userType: 'normal',\n                  Bid: boardId,\n                  timeStamp: Date.now()\n                });\n                boards.allIds.map(function (i) {\n                  if (boardId === i) {\n                    obj.name = boards.byId[i].name;\n                  }\n                });\n                console.log(obj); // await api.addBoardMember(obj);\n\n                return _context.abrupt(\"return\", {\n                  response: 200,\n                  message: 'Congratulations! You have added a new user'\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(ToolBar, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          boards = _this$props2.boards,\n          boardId = _this$props2.boardId;\n      return React.createElement(\"div\", {\n        className: \"tool-bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"toolbar-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"left-tools\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, boards.allIds.map(function (id) {\n        if (id === boardId) {\n          return boards.byId[id].name;\n        }\n      }))), React.createElement(\"div\", {\n        className: \"right-tools\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Popover, {\n        content: React.createElement(PopoverContent, {\n          callback: this.addUserToBoardHandler,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }),\n        position: \"left-top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Button, {\n        icon: \"plus\",\n        text: \"Add User\",\n        minimal: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return ToolBar;\n}(React.Component);\n\nToolBar.propTypes = {\n  boards: PropTypes.objectOf(PropTypes.any).isRequired,\n  boardId: PropTypes.number.isRequired,\n  api: PropTypes.objectOf(PropTypes.any).isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var database = state.database;\n  var boards = database.Board;\n  return {\n    boards: boards\n  };\n};\n\nexport default connect(mapStateToProps)(ToolBar);","map":{"version":3,"sources":["/Users/Nabin/workspace/probro/packages/web/src/common/ClassComponents/ToolBar.js"],"names":["React","PropTypes","connect","Button","Popover","Form","addUserToBoard","PopoverContent","callback","padding","minWidth","propTypes","func","isRequired","ToolBar","state","addUserToBoardHandler","data","props","api","boards","boardId","obj","joinStatus","userType","Bid","timeStamp","Date","now","allIds","map","i","name","byId","console","log","response","message","id","Component","objectOf","any","number","mapStateToProps","database","Board"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Button, Popover } from '@blueprintjs/core';\nimport Form from '../Form';\nimport { addUserToBoard } from './structure';\n\nconst PopoverContent = ({ callback }) => {\n  return (\n    <div style={{ padding: '5px', minWidth: '300px' }}>\n      <Form data={addUserToBoard} callback={callback} />\n    </div>\n  );\n};\n\nPopoverContent.propTypes = {\n  callback: PropTypes.func.isRequired,\n};\n\nclass ToolBar extends React.Component {\n  state = {};\n\n  addUserToBoardHandler = async (data) => {\n    const { api, boards, boardId } = this.props;\n    const obj = {\n      ...data,\n      joinStatus: false,\n      userType: 'normal',\n      Bid: boardId,\n      timeStamp: Date.now(),\n    };\n    boards.allIds.map((i) => {\n      if (boardId === i) {\n        obj.name = boards.byId[i].name;\n      }\n    });\n    console.log(obj);\n    // await api.addBoardMember(obj);\n    return { response: 200, message: 'Congratulations! You have added a new user' };\n  }\n\n  render() {\n    const { boards, boardId } = this.props;\n    return (\n      <div className=\"tool-bar\">\n        <div className=\"toolbar-container\">\n          <div className=\"left-tools\">\n            <span>\n              {\n                boards.allIds.map((id) => {\n                  if (id === boardId) {\n                    return boards.byId[id].name;\n                  }\n                })\n              }\n            </span>\n          </div>\n          <div className=\"right-tools\">\n            <Popover\n              content={<PopoverContent callback={this.addUserToBoardHandler} />}\n              position=\"left-top\"\n            >\n              <Button\n                icon=\"plus\"\n                text=\"Add User\"\n                minimal\n              />\n            </Popover>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nToolBar.propTypes = {\n  boards: PropTypes.objectOf(PropTypes.any).isRequired,\n  boardId: PropTypes.number.isRequired,\n  api: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  const { database } = state;\n  const boards = database.Board;\n  return {\n    boards,\n  };\n};\nexport default connect(mapStateToProps)(ToolBar);\n"]},"metadata":{},"sourceType":"module"}