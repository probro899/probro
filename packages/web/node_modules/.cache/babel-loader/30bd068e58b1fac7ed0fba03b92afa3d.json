{"ast":null,"code":"import _objectSpread from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Nabin/workspace/probro/packages/web/src/screens/users/bro/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport { Navbar } from '../../home/component/index';\nimport { SideNav, Profile, Blogs, Classes, Settings } from '../components';\nimport * as actions from '../../../actions';\n\nvar HomePage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(HomePage, _Component);\n\n  function HomePage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, HomePage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(HomePage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(HomePage, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this$props = this.props,\n          updateFormValue = _this$props.updateFormValue,\n          match = _this$props.match; // this is to prevent hitting people\n\n      if (match.params.id !== sessionStorage.getItem('SESSION_ID')) {\n        this.setState({\n          error: true\n        });\n      }\n\n      updateFormValue('loginForm', {\n        success: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var main = this.props.main;\n      var error = this.state.error;\n      var activeBar;\n\n      switch (main.activeNav.name) {\n        case 'Profile':\n          activeBar = React.createElement(Profile, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 27\n            },\n            __self: this\n          });\n          break;\n\n        case 'Settings':\n          activeBar = React.createElement(Settings, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30\n            },\n            __self: this\n          });\n          break;\n\n        case 'Classes':\n          activeBar = React.createElement(Classes, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33\n            },\n            __self: this\n          });\n          break;\n\n        case 'Blogs':\n          activeBar = React.createElement(Blogs, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36\n            },\n            __self: this\n          });\n          break;\n\n        default:\n          activeBar = React.createElement(Profile, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39\n            },\n            __self: this\n          });\n      }\n\n      return error ? React.createElement(Redirect, {\n        push: true,\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"broWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(SideNav, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), activeBar));\n    }\n  }]);\n\n  return HomePage;\n}(Component);\n\nHomePage.propTypes = {\n  updateFormValue: PropTypes.func.isRequired,\n  main: PropTypes.objectOf(PropTypes.any).isRequired,\n  match: PropTypes.objectOf(PropTypes.any).isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return state;\n};\n\nexport default connect(mapStateToProps, _objectSpread({}, actions))(HomePage);","map":{"version":3,"sources":["/Users/Nabin/workspace/probro/packages/web/src/screens/users/bro/index.js"],"names":["React","Component","connect","PropTypes","Redirect","Navbar","SideNav","Profile","Blogs","Classes","Settings","actions","HomePage","state","props","updateFormValue","match","params","id","sessionStorage","getItem","setState","error","success","main","activeBar","activeNav","name","propTypes","func","isRequired","objectOf","any","mapStateToProps"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,MAAT,QAAuB,4BAAvB;AACA,SAASC,OAAT,EAAkBC,OAAlB,EAA2BC,KAA3B,EAAkCC,OAAlC,EAA2CC,QAA3C,QAA2D,eAA3D;AACA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB;;IAEMC,Q;;;;;;;;;;;;;;;;;UACJC,K,GAAQ,E;;;;;;yCAEa;AAAA,wBACgB,KAAKC,KADrB;AAAA,UACXC,eADW,eACXA,eADW;AAAA,UACMC,KADN,eACMA,KADN,EAEnB;;AACA,UAAIA,KAAK,CAACC,MAAN,CAAaC,EAAb,KAAoBC,cAAc,CAACC,OAAf,CAAuB,YAAvB,CAAxB,EAA8D;AAC5D,aAAKC,QAAL,CAAc;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAd;AACD;;AACDP,MAAAA,eAAe,CAAC,WAAD,EAAc;AAAEQ,QAAAA,OAAO,EAAE;AAAX,OAAd,CAAf;AACD;;;6BAEQ;AAAA,UACCC,IADD,GACU,KAAKV,KADf,CACCU,IADD;AAAA,UAECF,KAFD,GAEW,KAAKT,KAFhB,CAECS,KAFD;AAGP,UAAIG,SAAJ;;AACA,cAAQD,IAAI,CAACE,SAAL,CAAeC,IAAvB;AACE,aAAM,SAAN;AACEF,UAAAA,SAAS,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAZ;AACA;;AACF,aAAM,UAAN;AACEA,UAAAA,SAAS,GAAG,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAZ;AACA;;AACF,aAAM,SAAN;AACEA,UAAAA,SAAS,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAZ;AACA;;AACF,aAAM,OAAN;AACEA,UAAAA,SAAS,GAAG,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAZ;AACA;;AACF;AACEA,UAAAA,SAAS,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAZ;AAdJ;;AAgBA,aACEH,KAAK,GAAG,oBAAC,QAAD;AAAU,QAAA,IAAI,MAAd;AAAe,QAAA,EAAE,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAH,GAED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEGG,SAFH,CAFF,CAHN;AAYD;;;;EA5CoBxB,S;;AA+CvBW,QAAQ,CAACgB,SAAT,GAAqB;AACnBb,EAAAA,eAAe,EAAEZ,SAAS,CAAC0B,IAAV,CAAeC,UADb;AAEnBN,EAAAA,IAAI,EAAErB,SAAS,CAAC4B,QAAV,CAAmB5B,SAAS,CAAC6B,GAA7B,EAAkCF,UAFrB;AAGnBd,EAAAA,KAAK,EAAEb,SAAS,CAAC4B,QAAV,CAAmB5B,SAAS,CAAC6B,GAA7B,EAAkCF;AAHtB,CAArB;;AAKA,IAAMG,eAAe,GAAG,SAAlBA,eAAkB,CAAApB,KAAK;AAAA,SAAIA,KAAJ;AAAA,CAA7B;;AAEA,eAAeX,OAAO,CAAC+B,eAAD,oBAAuBtB,OAAvB,EAAP,CAAyCC,QAAzC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport { Navbar } from '../../home/component/index';\nimport { SideNav, Profile, Blogs, Classes, Settings } from '../components';\nimport * as actions from '../../../actions';\n\nclass HomePage extends Component {\n  state = {};\n\n  componentWillMount() {\n    const { updateFormValue, match } = this.props;\n    // this is to prevent hitting people\n    if (match.params.id !== sessionStorage.getItem('SESSION_ID')) {\n      this.setState({ error: true });\n    }\n    updateFormValue('loginForm', { success: false });\n  }\n\n  render() {\n    const { main } = this.props;\n    const { error } = this.state;\n    let activeBar;\n    switch (main.activeNav.name) {\n      case ('Profile'):\n        activeBar = <Profile />;\n        break;\n      case ('Settings'):\n        activeBar = <Settings />;\n        break;\n      case ('Classes'):\n        activeBar = <Classes />;\n        break;\n      case ('Blogs'):\n        activeBar = <Blogs />;\n        break;\n      default:\n        activeBar = <Profile />;\n    }\n    return (\n      error ? <Redirect push to=\"/login\" />\n        : (\n          <div>\n            <Navbar />\n            <div className=\"broWrapper\">\n              <SideNav />\n              {activeBar}\n            </div>\n          </div>\n        )\n    );\n  }\n}\n\nHomePage.propTypes = {\n  updateFormValue: PropTypes.func.isRequired,\n  main: PropTypes.objectOf(PropTypes.any).isRequired,\n  match: PropTypes.objectOf(PropTypes.any).isRequired,\n};\nconst mapStateToProps = state => state;\n\nexport default connect(mapStateToProps, { ...actions })(HomePage);\n"]},"metadata":{},"sourceType":"module"}