{"ast":null,"code":"import { connect } from './main';\nimport getRemoteUrl from './getRemoteUrl';\nimport store from '../store';\nvar client = connect(getRemoteUrl(), store);\nvar retryConnect = true;\nvar retryTimer = null;\nclient.on('connect', function () {\n  retryConnect = true;\n  store.dispatch({\n    type: 'CONNECT'\n  });\n});\nclient.on('createOffer', function (data) {\n  return console.log('create Offer is available in main socket', data);\n});\n\nvar reconnect = function reconnect() {\n  if (retryTimer) {\n    return;\n  }\n\n  retryTimer = setTimeout(function () {\n    retryTimer = null;\n    client.reconnect();\n  }, 1000);\n};\n\nclient.on('disconnect', function () {\n  store.dispatch({\n    type: 'DISSCONNECT'\n  }); // Try to establish a connection after a timeout\n\n  if (retryConnect) {\n    reconnect();\n  }\n});\nclient.on('logout', function () {\n  retryConnect = false;\n});\nclient.on('error', function (err) {\n  console.error('socket Error', err);\n});\nexport { getRemoteUrl };\nexport default client;","map":{"version":3,"sources":["/home/bhagya/workspace/reactjs/projects/probro/packages/web/src/socket/index.js"],"names":["connect","getRemoteUrl","store","client","retryConnect","retryTimer","on","dispatch","type","data","console","log","reconnect","setTimeout","err","error"],"mappings":"AAAA,SAASA,OAAT,QAAwB,QAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AAEA,IAAMC,MAAM,GAAGH,OAAO,CAACC,YAAY,EAAb,EAAiBC,KAAjB,CAAtB;AAEA,IAAIE,YAAY,GAAG,IAAnB;AACA,IAAIC,UAAU,GAAG,IAAjB;AAEAF,MAAM,CAACG,EAAP,CAAU,SAAV,EAAqB,YAAM;AACzBF,EAAAA,YAAY,GAAG,IAAf;AACAF,EAAAA,KAAK,CAACK,QAAN,CAAe;AACbC,IAAAA,IAAI,EAAE;AADO,GAAf;AAGD,CALD;AAOAL,MAAM,CAACG,EAAP,CAAU,aAAV,EAAyB,UAACG,IAAD;AAAA,SAAUC,OAAO,CAACC,GAAR,CAAY,0CAAZ,EAAwDF,IAAxD,CAAV;AAAA,CAAzB;;AACA,IAAMG,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,MAAIP,UAAJ,EAAgB;AACd;AACD;;AAEDA,EAAAA,UAAU,GAAGQ,UAAU,CAAC,YAAM;AAC5BR,IAAAA,UAAU,GAAG,IAAb;AACAF,IAAAA,MAAM,CAACS,SAAP;AACD,GAHsB,EAGpB,IAHoB,CAAvB;AAID,CATD;;AAWAT,MAAM,CAACG,EAAP,CAAU,YAAV,EAAwB,YAAM;AAC5BJ,EAAAA,KAAK,CAACK,QAAN,CAAe;AACbC,IAAAA,IAAI,EAAE;AADO,GAAf,EAD4B,CAI5B;;AAEA,MAAIJ,YAAJ,EAAkB;AAChBQ,IAAAA,SAAS;AACV;AACF,CATD;AAWAT,MAAM,CAACG,EAAP,CAAU,QAAV,EAAoB,YAAM;AACxBF,EAAAA,YAAY,GAAG,KAAf;AACD,CAFD;AAIAD,MAAM,CAACG,EAAP,CAAU,OAAV,EAAmB,UAACQ,GAAD,EAAS;AAC1BJ,EAAAA,OAAO,CAACK,KAAR,CAAc,cAAd,EAA8BD,GAA9B;AACD,CAFD;AAIA,SAASb,YAAT;AACA,eAAeE,MAAf","sourcesContent":["import { connect } from './main';\nimport getRemoteUrl from './getRemoteUrl';\nimport store from '../store';\n\nconst client = connect(getRemoteUrl(), store);\n\nlet retryConnect = true;\nlet retryTimer = null;\n\nclient.on('connect', () => {\n  retryConnect = true;\n  store.dispatch({\n    type: 'CONNECT',\n  });\n});\n\nclient.on('createOffer', (data) => console.log('create Offer is available in main socket', data));\nconst reconnect = () => {\n  if (retryTimer) {\n    return;\n  }\n\n  retryTimer = setTimeout(() => {\n    retryTimer = null;\n    client.reconnect();\n  }, 1000);\n};\n\nclient.on('disconnect', () => {\n  store.dispatch({\n    type: 'DISSCONNECT',\n  });\n  // Try to establish a connection after a timeout\n\n  if (retryConnect) {\n    reconnect();\n  }\n});\n\nclient.on('logout', () => {\n  retryConnect = false;\n});\n\nclient.on('error', (err) => {\n  console.error('socket Error', err);\n});\n\nexport { getRemoteUrl };\nexport default client;\n"]},"metadata":{},"sourceType":"module"}