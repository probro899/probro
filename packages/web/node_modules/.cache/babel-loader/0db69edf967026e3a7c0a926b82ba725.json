{"ast":null,"code":"import _defineProperty from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Nabin/workspace/probro/packages/web/src/screens/users/bro/ClassManager.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport * as actions from '../../../actions';\nimport { Column, NewColumn } from '../../../common/ClassComponents';\nimport { Navbar } from '../../home/component';\n\nvar Classes =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Classes, _Component);\n\n  function Classes() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Classes);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Classes)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {};\n\n    _this.onDragEnd = function (result) {\n      var _objectSpread3;\n\n      var source = result.source,\n          destination = result.destination,\n          draggableId = result.draggableId,\n          type = result.type;\n      var _this$props = _this.props,\n          _class = _this$props._class,\n          updateClassValue = _this$props.updateClassValue;\n      var columns = _class.columns,\n          columnOrder = _class.columnOrder;\n\n      if (!destination) {\n        return;\n      } // column moving around\n\n\n      if (type === 'column') {\n        var newColumnOrder = Array.from(columnOrder);\n        newColumnOrder.splice(source.index, 1);\n        newColumnOrder.splice(destination.index, 0, draggableId);\n        updateClassValue('columnOrder', newColumnOrder);\n        return;\n      }\n\n      var start = columns[source.droppableId];\n      var finish = columns[destination.droppableId];\n\n      if (start === finish) {\n        var newTaskIds = Array.from(start.taskIds);\n        newTaskIds.splice(source.index, 1);\n        newTaskIds.splice(destination.index, 0, draggableId);\n\n        var newColumn = _objectSpread({}, start, {\n          taskIds: newTaskIds\n        });\n\n        updateClassValue('columns', _objectSpread({}, columns, _defineProperty({}, newColumn.id, newColumn)));\n        return;\n      } // moving from one column to another\n\n\n      var startTaskIds = Array.from(start.taskIds);\n      var finishTaskIds = Array.from(finish.taskIds);\n      startTaskIds.splice(source.index, 1);\n\n      var newStart = _objectSpread({}, start, {\n        taskIds: startTaskIds\n      });\n\n      finishTaskIds.splice(destination.index, 0, draggableId);\n\n      var newFinish = _objectSpread({}, finish, {\n        taskIds: finishTaskIds\n      });\n\n      updateClassValue('columns', _objectSpread({}, columns, (_objectSpread3 = {}, _defineProperty(_objectSpread3, newStart.id, newStart), _defineProperty(_objectSpread3, newFinish.id, newFinish), _objectSpread3)));\n    };\n\n    return _this;\n  }\n\n  _createClass(Classes, [{\n    key: \"render\",\n    value: function render() {\n      var _class = this.props._class;\n      var tasks = _class.tasks,\n          columns = _class.columns,\n          columnOrder = _class.columnOrder;\n      console.log(this.props);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"classWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(DragDropContext, {\n        onDragEnd: this.onDragEnd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Droppable, {\n        droppableId: \"all-columns\",\n        direction: \"horizontal\",\n        type: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, function (provided) {\n        return React.createElement(\"div\", Object.assign({\n          className: \"columns\"\n        }, provided.droppableProps, {\n          ref: provided.innerRef,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }), columnOrder.map(function (columnId, index) {\n          var column = columns[columnId];\n          var allTask = column.taskIds.map(function (taskId) {\n            return tasks[taskId];\n          });\n          return React.createElement(Column, {\n            key: column.id,\n            column: column,\n            tasks: allTask,\n            index: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84\n            },\n            __self: this\n          });\n        }), provided.placeholder, React.createElement(NewColumn, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }));\n      }))));\n    }\n  }]);\n\n  return Classes;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state, ownprops) {\n  return _objectSpread({}, state, ownprops);\n};\n\nexport default connect(mapStateToProps, _objectSpread({}, actions))(Classes);","map":{"version":3,"sources":["/Users/Nabin/workspace/probro/packages/web/src/screens/users/bro/ClassManager.js"],"names":["React","Component","connect","DragDropContext","Droppable","actions","Column","NewColumn","Navbar","Classes","state","onDragEnd","result","source","destination","draggableId","type","props","_class","updateClassValue","columns","columnOrder","newColumnOrder","Array","from","splice","index","start","droppableId","finish","newTaskIds","taskIds","newColumn","id","startTaskIds","finishTaskIds","newStart","newFinish","tasks","console","log","provided","droppableProps","innerRef","map","columnId","column","allTask","taskId","placeholder","mapStateToProps","ownprops"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport * as actions from '../../../actions';\nimport { Column, NewColumn } from '../../../common/ClassComponents';\nimport { Navbar } from '../../home/component';\n\n\nclass Classes extends Component {\n  state = {};\n\n  onDragEnd = (result) => {\n    const { source, destination, draggableId, type } = result;\n    const { _class, updateClassValue } = this.props;\n    const { columns, columnOrder } = _class;\n    if (!destination) {\n      return;\n    }\n    // column moving around\n    if (type === 'column') {\n      const newColumnOrder = Array.from(columnOrder);\n      newColumnOrder.splice(source.index, 1);\n      newColumnOrder.splice(destination.index, 0, draggableId);\n      updateClassValue('columnOrder', newColumnOrder);\n      return;\n    }\n    const start = columns[source.droppableId];\n    const finish = columns[destination.droppableId];\n\n    if (start === finish) {\n      const newTaskIds = Array.from(start.taskIds);\n      newTaskIds.splice(source.index, 1);\n      newTaskIds.splice(destination.index, 0, draggableId);\n      const newColumn = {\n        ...start,\n        taskIds: newTaskIds,\n      };\n      updateClassValue('columns', { ...columns, [newColumn.id]: newColumn });\n      return;\n    }\n    // moving from one column to another\n    const startTaskIds = Array.from(start.taskIds);\n    const finishTaskIds = Array.from(finish.taskIds);\n    startTaskIds.splice(source.index, 1);\n    const newStart = {\n      ...start,\n      taskIds: startTaskIds,\n    };\n    finishTaskIds.splice(destination.index, 0, draggableId);\n    const newFinish = {\n      ...finish,\n      taskIds: finishTaskIds,\n    };\n    updateClassValue('columns', { ...columns, [newStart.id]: newStart, [newFinish.id]: newFinish });\n  }\n\n  render() {\n    const { _class } = this.props;\n    const { tasks, columns, columnOrder } = _class;\n    console.log(this.props);\n    return (\n      <div>\n        <Navbar />\n        <div className=\"classWrapper\">\n          <DragDropContext\n            onDragEnd={this.onDragEnd}\n          >\n            <Droppable\n              droppableId=\"all-columns\"\n              direction=\"horizontal\"\n              type=\"column\"\n            >\n              { provided => (\n                <div\n                  className=\"columns\"\n                  {...provided.droppableProps}\n                  ref={provided.innerRef}\n                >\n                  {\n                    columnOrder.map((columnId, index) => {\n                      const column = columns[columnId];\n                      const allTask = column.taskIds.map(taskId => tasks[taskId]);\n                      return (\n                        <Column\n                          key={column.id}\n                          column={column}\n                          tasks={allTask}\n                          index={index}\n                        />\n                      );\n                    })\n                  }\n                  {provided.placeholder}\n                  <NewColumn />\n                </div>\n              )}\n            </Droppable>\n          </DragDropContext>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownprops) => ({ ...state, ...ownprops });\nexport default connect(mapStateToProps, { ...actions })(Classes);\n"]},"metadata":{},"sourceType":"module"}