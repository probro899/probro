{"ast":null,"code":"import _regeneratorRuntime from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Nabin/workspace/probro/packages/web/src/common/ClassComponents/Column.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport Task from './Task';\nimport NewTask from './NewTask';\nimport { MoreButton, PopoverForm } from '../../components';\nimport { DeletePopOver } from '../index';\nimport UpdateColumnStructure from './structure';\n\nvar Column =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Column, _Component);\n\n  function Column() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Column);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Column)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      columnDeletePopOver: false,\n      id: '',\n      columnEditPopOver: false\n    };\n\n    _this.onMore =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(action, id) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (action === 'delete') {\n                  _this.setState({\n                    id: id,\n                    columnDeletePopOver: true\n                  });\n                }\n\n                if (action === 'edit') {\n                  _this.setState({\n                    id: id,\n                    columnEditPopOver: true\n                  });\n                }\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.deleteColumn =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(type) {\n        var api, id;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                api = _this.props.api;\n                id = _this.state.id;\n\n                if (!(type === 'confirm')) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                _context2.next = 5;\n                return api.deleteBoardColumn({\n                  id: id\n                });\n\n              case 5:\n                _this.setState({\n                  id: '',\n                  columnDeletePopOver: false\n                });\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x3) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.updateColumnName =\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(data) {\n        var api, id;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                api = _this.props.api;\n                id = _this.state.id;\n                _context3.next = 4;\n                return api.updateBoardColumn([data, {\n                  id: id\n                }]);\n\n              case 4:\n                _this.setState({\n                  id: '',\n                  columnEditPopOver: false\n                });\n\n                return _context3.abrupt(\"return\", {\n                  response: 200\n                });\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x4) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    _this.closeUpdatePopOver = function () {\n      var columnEditPopOver = _this.state.columnEditPopOver;\n\n      _this.setState({\n        columnEditPopOver: !columnEditPopOver\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Column, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          column = _this$props.column,\n          columnId = _this$props.columnId,\n          index = _this$props.index,\n          onTaskClick = _this$props.onTaskClick;\n      var _this$state = this.state,\n          columnDeletePopOver = _this$state.columnDeletePopOver,\n          columnEditPopOver = _this$state.columnEditPopOver;\n      return React.createElement(Draggable, {\n        draggableId: \"column\".concat(column.id),\n        index: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, function (provided) {\n        return React.createElement(\"div\", Object.assign({\n          className: \"column-container\",\n          ref: provided.innerRef\n        }, provided.draggableProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"column-inner-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, React.createElement(PopoverForm, {\n          onClose: _this2.closeUpdatePopOver,\n          callback: _this2.updateColumnName,\n          isOpen: columnEditPopOver,\n          structure: UpdateColumnStructure,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }), React.createElement(DeletePopOver, {\n          isOpen: columnDeletePopOver,\n          action: _this2.deleteColumn,\n          name: column.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }), React.createElement(\"div\", Object.assign({\n          className: \"column-title\"\n        }, provided.dragHandleProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }), React.createElement(MoreButton, {\n          id: columnId,\n          onMore: _this2.onMore,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, column.name)), React.createElement(Droppable, {\n          droppableId: \"\".concat(column.id),\n          type: \"task\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, function (provided) {\n          return React.createElement(\"div\", Object.assign({\n            className: \"task-list\",\n            ref: provided.innerRef\n          }, provided.droppableProps, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108\n            },\n            __self: this\n          }), column.tasks.map(function (obj, index) {\n            var task = obj;\n            return React.createElement(Task, {\n              key: task.id,\n              task: task,\n              index: index,\n              onClick: onTaskClick,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 116\n              },\n              __self: this\n            });\n          }), provided.placeholder);\n        }), provided.placeholder, React.createElement(NewTask, {\n          columnId: column.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        })));\n      });\n    }\n  }]);\n\n  return Column;\n}(Component);\n\nColumn.propTypes = {\n  column: PropTypes.objectOf(PropTypes.any).isRequired,\n  api: PropTypes.objectOf(PropTypes.any).isRequired,\n  index: PropTypes.number.isRequired,\n  columnId: PropTypes.number.isRequired,\n  onTaskClick: PropTypes.func.isRequired\n};\nexport default Column;","map":{"version":3,"sources":["/Users/Nabin/workspace/probro/packages/web/src/common/ClassComponents/Column.js"],"names":["React","Component","PropTypes","Droppable","Draggable","Task","NewTask","MoreButton","PopoverForm","DeletePopOver","UpdateColumnStructure","Column","state","columnDeletePopOver","id","columnEditPopOver","onMore","action","setState","deleteColumn","type","api","props","deleteBoardColumn","updateColumnName","data","updateBoardColumn","response","closeUpdatePopOver","column","columnId","index","onTaskClick","provided","innerRef","draggableProps","name","dragHandleProps","droppableProps","tasks","map","obj","task","placeholder","propTypes","objectOf","any","isRequired","number","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport Task from './Task';\nimport NewTask from './NewTask';\nimport { MoreButton, PopoverForm } from '../../components';\nimport { DeletePopOver } from '../index';\nimport UpdateColumnStructure from './structure';\n\nclass Column extends Component {\n  state = {\n    columnDeletePopOver: false,\n    id: '',\n    columnEditPopOver: false,\n  };\n\n  // this is more button handle function\n  onMore = async (action, id) => {\n    if (action === 'delete') {\n      this.setState({\n        id,\n        columnDeletePopOver: true,\n      });\n    }\n    if (action === 'edit') {\n      this.setState({\n        id,\n        columnEditPopOver: true,\n      });\n    }\n  }\n\n  deleteColumn = async (type) => {\n    const { api } = this.props;\n    const { id } = this.state;\n    if (type === 'confirm') {\n      await api.deleteBoardColumn({ id });\n    }\n    this.setState({\n      id: '',\n      columnDeletePopOver: false,\n    });\n  }\n\n  updateColumnName = async (data) => {\n    const { api } = this.props;\n    const { id } = this.state;\n    await api.updateBoardColumn([data, { id }]);\n    this.setState({\n      id: '',\n      columnEditPopOver: false,\n    });\n    return { response: 200 };\n  }\n\n  closeUpdatePopOver = () => {\n    const { columnEditPopOver } = this.state;\n    this.setState({\n      columnEditPopOver: !columnEditPopOver,\n    });\n  }\n\n  render() {\n    const {\n      column,\n      columnId,\n      index,\n      onTaskClick,\n    } = this.props;\n    const { columnDeletePopOver, columnEditPopOver } = this.state;\n    return (\n      <Draggable\n        draggableId={`column${column.id}`}\n        index={index}\n      >\n        {provided => (\n          <div\n            className=\"column-container\"\n            ref={provided.innerRef}\n            {...provided.draggableProps}\n          >\n            <div className=\"column-inner-container\">\n              <PopoverForm\n                onClose={this.closeUpdatePopOver}\n                callback={this.updateColumnName}\n                isOpen={columnEditPopOver}\n                structure={UpdateColumnStructure}\n              />\n              <DeletePopOver\n                isOpen={columnDeletePopOver}\n                action={this.deleteColumn}\n                name={column.name}\n              />\n              <div\n                className=\"column-title\"\n                {...provided.dragHandleProps}\n              >\n                <MoreButton id={columnId} onMore={this.onMore} />\n                <span>\n                  {column.name}\n                </span>\n              </div>\n              <Droppable\n                droppableId={`${column.id}`}\n                type=\"task\"\n              >\n                {provided => (\n                  <div\n                    className=\"task-list\"\n                    ref={provided.innerRef}\n                    {...provided.droppableProps}\n                  >\n                    {column.tasks.map((obj, index) => {\n                      const task = obj;\n                      return (\n                        <Task\n                          key={task.id}\n                          task={task}\n                          index={index}\n                          onClick={onTaskClick}\n                        />\n                      );\n                    })}\n                    {provided.placeholder}\n                  </div>\n                )}\n              </Droppable>\n              {provided.placeholder}\n              <NewTask columnId={column.id} />\n            </div>\n          </div>\n        )}\n      </Draggable>\n    );\n  }\n}\n\nColumn.propTypes = {\n  column: PropTypes.objectOf(PropTypes.any).isRequired,\n  api: PropTypes.objectOf(PropTypes.any).isRequired,\n  index: PropTypes.number.isRequired,\n  columnId: PropTypes.number.isRequired,\n  onTaskClick: PropTypes.func.isRequired,\n};\n\nexport default Column;\n"]},"metadata":{},"sourceType":"module"}