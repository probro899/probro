{"ast":null,"code":"import _classCallCheck from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Nabin/workspace/probro/packages/web/src/common/Input.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { InputGroup, Icon, Label } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\n\nvar CustomInput =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CustomInput, _React$Component);\n\n  function CustomInput(props) {\n    var _this;\n\n    _classCallCheck(this, CustomInput);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CustomInput).call(this, props));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(CustomInput, [{\n    key: \"render\",\n    value: function render(props) {\n      var placeholder = props.placeholder,\n          iconName = props.iconName,\n          class_ = props.class_,\n          label_ = props.label_;\n\n      if (iconName === 'Search') {\n        var icon = React.createElement(Icon, {\n          icon: IconNames.SEARCH,\n          iconSize: Icon.SIZE_LARGE,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        });\n        return React.createElement(Label, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"label-text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, label_), React.createElement(InputGroup, {\n          placeholder: placeholder,\n          className: class_,\n          leftIcon: icon,\n          large: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }));\n      }\n\n      if (iconName === 'Lock') {\n        var rightIcon = React.createElement(Icon, {\n          icon: IconNames.LOCK,\n          iconSize: \"15\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        });\n        return React.createElement(Label, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"label-text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, label_), React.createElement(InputGroup, {\n          placeholder: placeholder,\n          className: class_,\n          rightElement: rightIcon,\n          large: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }));\n      }\n\n      return React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"label-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, label_), React.createElement(InputGroup, {\n        placeholder: placeholder,\n        className: class_,\n        large: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return CustomInput;\n}(React.Component); // CustomInput.defaultProps = {\n//   class_: 'input',\n// };\n// CustomInput.propTypes = {\n//   placeholder: PropTypes.string.isRequired,\n//   iconName: PropTypes.string.isRequired,\n//   class_: PropTypes.string,\n//   label_: PropTypes.string.isRequired,\n// };\n\n\nexport default CustomInput;","map":{"version":3,"sources":["/Users/Nabin/workspace/probro/packages/web/src/common/Input.js"],"names":["React","PropTypes","InputGroup","Icon","Label","IconNames","CustomInput","props","state","placeholder","iconName","class_","label_","icon","SEARCH","SIZE_LARGE","rightIcon","LOCK","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,KAA3B,QAAwC,mBAAxC;AACA,SAASC,SAAT,QAA0B,oBAA1B;;IAEMC,W;;;;;AACJ,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,qFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa,EAAb;AAFiB;AAGlB;;;;2BAEMD,K,EAAO;AAAA,UACJE,WADI,GACsCF,KADtC,CACJE,WADI;AAAA,UACSC,QADT,GACsCH,KADtC,CACSG,QADT;AAAA,UACmBC,MADnB,GACsCJ,KADtC,CACmBI,MADnB;AAAA,UAC2BC,MAD3B,GACsCL,KADtC,CAC2BK,MAD3B;;AAEZ,UAAIF,QAAQ,KAAK,QAAjB,EAA2B;AACzB,YAAMG,IAAI,GAAG,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAER,SAAS,CAACS,MAAtB;AAA8B,UAAA,QAAQ,EAAEX,IAAI,CAACY,UAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAb;AACA,eACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAM,UAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA8BH,MAA9B,CADF,EAEE,oBAAC,UAAD;AACE,UAAA,WAAW,EAAEH,WADf;AAEE,UAAA,SAAS,EAAEE,MAFb;AAGE,UAAA,QAAQ,EAAEE,IAHZ;AAIE,UAAA,KAAK,MAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,CADF;AAWD;;AACD,UAAIH,QAAQ,KAAK,MAAjB,EAAyB;AACvB,YAAMM,SAAS,GAAG,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAEX,SAAS,CAACY,IAAtB;AAA4B,UAAA,QAAQ,EAAC,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAlB;AACA,eACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAM,UAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA8BL,MAA9B,CADF,EAEE,oBAAC,UAAD;AACE,UAAA,WAAW,EAAEH,WADf;AAEE,UAAA,SAAS,EAAEE,MAFb;AAGE,UAAA,YAAY,EAAEK,SAHhB;AAIE,UAAA,KAAK,MAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,CADF;AAWD;;AAED,aACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8BJ,MAA9B,CADF,EAEE,oBAAC,UAAD;AACE,QAAA,WAAW,EAAEH,WADf;AAEE,QAAA,SAAS,EAAEE,MAFb;AAGE,QAAA,KAAK,MAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAUD;;;;EA/CuBX,KAAK,CAACkB,S,GAiDhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAeZ,WAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { InputGroup, Icon, Label } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\n\nclass CustomInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { };\n  }\n\n  render(props) {\n    const { placeholder, iconName, class_, label_ } = props;\n    if (iconName === 'Search') {\n      const icon = <Icon icon={IconNames.SEARCH} iconSize={Icon.SIZE_LARGE} />;\n      return (\n        <Label>\n          <span className=\"label-text\">{label_}</span>\n          <InputGroup\n            placeholder={placeholder}\n            className={class_}\n            leftIcon={icon}\n            large\n          />\n        </Label>\n      );\n    }\n    if (iconName === 'Lock') {\n      const rightIcon = <Icon icon={IconNames.LOCK} iconSize=\"15\" />;\n      return (\n        <Label>\n          <span className=\"label-text\">{label_}</span>\n          <InputGroup\n            placeholder={placeholder}\n            className={class_}\n            rightElement={rightIcon}\n            large\n          />\n        </Label>\n      );\n    }\n\n    return (\n      <Label>\n        <span className=\"label-text\">{label_}</span>\n        <InputGroup\n          placeholder={placeholder}\n          className={class_}\n          large\n        />\n      </Label>\n    );\n  }\n}\n// CustomInput.defaultProps = {\n//   class_: 'input',\n// };\n// CustomInput.propTypes = {\n//   placeholder: PropTypes.string.isRequired,\n//   iconName: PropTypes.string.isRequired,\n//   class_: PropTypes.string,\n//   label_: PropTypes.string.isRequired,\n// };\nexport default CustomInput;\n"]},"metadata":{},"sourceType":"module"}