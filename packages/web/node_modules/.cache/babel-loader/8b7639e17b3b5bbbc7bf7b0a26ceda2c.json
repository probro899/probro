{"ast":null,"code":"import _classCallCheck from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Nabin/workspace/probro/packages/web/src/common/Input.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { InputGroup, Icon, Label, Tooltip, Button, Position } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\n\nvar customIcon = function customIcon(iconName, handleLockClick, showPassword) {\n  if (iconName === 'Search') {\n    return {\n      leftIcon: React.createElement(Icon, {\n        icon: IconNames.SEARCH,\n        iconSize: Icon.SIZE_LARGE,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }),\n      rightIcon: null\n    };\n  }\n\n  if (iconName === 'Lock') {\n    var rightIcon = React.createElement(Tooltip, {\n      content: showPassword ? 'Show' : 'Hide',\n      position: Position.RIGHT,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: {\n        marginTop: 0\n      },\n      icon: showPassword ? IconNames.EYE_OFF : IconNames.EYE_ON,\n      onClick: handleLockClick,\n      minimal: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }));\n    return {\n      leftIcon: null,\n      rightIcon: rightIcon\n    };\n  }\n\n  return {\n    leftIcon: null,\n    rightIcon: null\n  };\n};\n\nvar CustomInput =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CustomInput, _React$Component);\n\n  function CustomInput(props) {\n    var _this;\n\n    _classCallCheck(this, CustomInput);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CustomInput).call(this, props));\n\n    _this.handleLockClick = function () {\n      var showPassword = _this.state.showPassword;\n\n      _this.setState({\n        showPassword: !showPassword\n      });\n    };\n\n    _this.state = {\n      showPassword: false\n    };\n    return _this;\n  }\n\n  _createClass(CustomInput, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          placeholder = _this$props.placeholder,\n          iconName = _this$props.iconName,\n          class_ = _this$props.class_,\n          label_ = _this$props.label_;\n      var showPassword = this.state.showPassword;\n\n      var _customIcon = customIcon(iconName, this.handleLockClick, {\n        showPassword: showPassword\n      }),\n          leftIcon = _customIcon.leftIcon,\n          rightIcon = _customIcon.rightIcon;\n\n      return React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"label-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, label_), React.createElement(InputGroup, {\n        placeholder: placeholder,\n        className: class_,\n        leftIcon: leftIcon,\n        rightElement: rightIcon,\n        type: showPassword ? 'text' : 'password',\n        large: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return CustomInput;\n}(React.Component);\n\nCustomInput.defaultProps = {\n  class_: 'input'\n};\nCustomInput.propTypes = {\n  placeholder: PropTypes.string.isRequired,\n  iconName: PropTypes.string.isRequired,\n  class_: PropTypes.string,\n  label_: PropTypes.string.isRequired\n};\nexport default CustomInput;","map":{"version":3,"sources":["/Users/Nabin/workspace/probro/packages/web/src/common/Input.js"],"names":["React","PropTypes","InputGroup","Icon","Label","Tooltip","Button","Position","IconNames","customIcon","iconName","handleLockClick","showPassword","leftIcon","SEARCH","SIZE_LARGE","rightIcon","RIGHT","marginTop","EYE_OFF","EYE_ON","CustomInput","props","state","setState","placeholder","class_","label_","Component","defaultProps","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { InputGroup, Icon, Label, Tooltip, Button, Position } from '@blueprintjs/core';\nimport { IconNames } from '@blueprintjs/icons';\n\nconst customIcon = (iconName, handleLockClick, showPassword) => {\n  if (iconName === 'Search') {\n    return (\n      { leftIcon: <Icon icon={IconNames.SEARCH} iconSize={Icon.SIZE_LARGE} />, rightIcon: null }\n    );\n  }\n  if (iconName === 'Lock') {\n    const rightIcon = (\n      <Tooltip content={showPassword ? 'Show' : 'Hide'} position={Position.RIGHT}>\n        <Button\n          style={{ marginTop: 0 }}\n          icon={showPassword ? IconNames.EYE_OFF : IconNames.EYE_ON}\n          onClick={handleLockClick}\n          minimal\n        />\n      </Tooltip>\n    );\n    return (\n      { leftIcon: null, rightIcon }\n    );\n  }\n  return ({ leftIcon: null, rightIcon: null });\n};\n\nclass CustomInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { showPassword: false };\n  }\n\n  handleLockClick = () => {\n    const { showPassword } = this.state;\n    this.setState({ showPassword: !showPassword });\n  }\n\n  render() {\n    const { placeholder, iconName, class_, label_ } = this.props;\n    const { showPassword } = this.state;\n    const { leftIcon, rightIcon } = customIcon(iconName, this.handleLockClick, { showPassword });\n    return (\n      <Label>\n        <span className=\"label-text\">{label_}</span>\n        <InputGroup\n          placeholder={placeholder}\n          className={class_}\n          leftIcon={leftIcon}\n          rightElement={rightIcon}\n          type={showPassword ? 'text' : 'password'}\n          large\n        />\n      </Label>\n    );\n  }\n}\nCustomInput.defaultProps = {\n  class_: 'input',\n};\nCustomInput.propTypes = {\n  placeholder: PropTypes.string.isRequired,\n  iconName: PropTypes.string.isRequired,\n  class_: PropTypes.string,\n  label_: PropTypes.string.isRequired,\n};\nexport default CustomInput;\n"]},"metadata":{},"sourceType":"module"}