{"ast":null,"code":"import _classCallCheck from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Nabin/workspace/probro/packages/web/src/screens/home/component/slider.js\";\nimport React, { Component } from 'react';\nimport { Input } from '../../../common';\nvar colors = ['red', 'blue', 'yellow', 'green'];\nvar currentColorIndex = 0;\n\nvar Slider =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Slider, _Component);\n\n  function Slider(props) {\n    var _this;\n\n    _classCallCheck(this, Slider);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Slider).call(this, props));\n\n    _this.changeBackGroundColor = function () {\n      var prevColr = _this.state.postElem;\n\n      if (currentColorIndex === 4) {\n        currentColorIndex = 0;\n\n        _this.setState({\n          prevElem: prevColr,\n          postElem: colors[currentColorIndex]\n        });\n\n        currentColorIndex += 1;\n      } else {\n        _this.setState({\n          prevElem: prevColr,\n          postElem: colors[currentColorIndex]\n        });\n\n        currentColorIndex += 1;\n      }\n\n      var styleSheet = document.styleSheets[0];\n      var animationName = _this.state.animation;\n      var keyframes = \"@-webkit-keyframes \".concat(animationName, \" {\\n        from {background-color: \").concat(_this.state.prevElem, \";}\\n        to {background-color: \").concat(_this.state.postElem, \";}\\n    }\");\n      styleSheet.insertRule(keyframes, styleSheet.cssRules.length);\n\n      _this.setState({\n        animation: animationName\n      });\n    };\n\n    _this.state = {\n      prevElem: colors[0],\n      postElem: colors[1],\n      animation: 'slider'\n    };\n    return _this;\n  }\n\n  _createClass(Slider, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      setInterval(this.changeBackGroundColor, 2000);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var color = this.state.color;\n      var styles = {\n        animationName: this.state.animationName,\n        animationTimingFunction: 'ease-in-out',\n        animationDuration: '0.6s',\n        animationDelay: '0.0s',\n        animationIterationCount: 1,\n        animationDirection: 'normal',\n        animationFillMode: 'forwards'\n      };\n      return React.createElement(\"div\", {\n        className: \"slider-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"slider\",\n        style: {\n          backgroundColor: color\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"search-box-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Input, {\n        placeholder: \"Enter a Keyword\",\n        iconName: \"Search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Slider;\n}(Component);\n\nexport default Slider;","map":{"version":3,"sources":["/Users/Nabin/workspace/probro/packages/web/src/screens/home/component/slider.js"],"names":["React","Component","Input","colors","currentColorIndex","Slider","props","changeBackGroundColor","prevColr","state","postElem","setState","prevElem","styleSheet","document","styleSheets","animationName","animation","keyframes","insertRule","cssRules","length","setInterval","color","styles","animationTimingFunction","animationDuration","animationDelay","animationIterationCount","animationDirection","animationFillMode","backgroundColor"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,iBAAtB;AAEA,IAAMC,MAAM,GAAG,CAAC,KAAD,EAAQ,MAAR,EAAgB,QAAhB,EAA0B,OAA1B,CAAf;AACA,IAAIC,iBAAiB,GAAG,CAAxB;;IAEMC,M;;;;;AACJ,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,gFAAMA,KAAN;;AADiB,UASnBC,qBATmB,GASK,YAAM;AAC5B,UAAMC,QAAQ,GAAG,MAAKC,KAAL,CAAWC,QAA5B;;AACA,UAAIN,iBAAiB,KAAK,CAA1B,EAA6B;AAC3BA,QAAAA,iBAAiB,GAAG,CAApB;;AACA,cAAKO,QAAL,CAAc;AAAEC,UAAAA,QAAQ,EAAEJ,QAAZ;AAAsBE,UAAAA,QAAQ,EAAEP,MAAM,CAACC,iBAAD;AAAtC,SAAd;;AACAA,QAAAA,iBAAiB,IAAI,CAArB;AACD,OAJD,MAIO;AACL,cAAKO,QAAL,CAAc;AAAEC,UAAAA,QAAQ,EAAEJ,QAAZ;AAAsBE,UAAAA,QAAQ,EAAEP,MAAM,CAACC,iBAAD;AAAtC,SAAd;;AACAA,QAAAA,iBAAiB,IAAI,CAArB;AACD;;AACD,UAAMS,UAAU,GAAGC,QAAQ,CAACC,WAAT,CAAqB,CAArB,CAAnB;AACA,UAAMC,aAAa,GAAG,MAAKP,KAAL,CAAWQ,SAAjC;AACA,UAAMC,SAAS,gCAAyBF,aAAzB,iDACe,MAAKP,KAAL,CAAWG,QAD1B,+CAEa,MAAKH,KAAL,CAAWC,QAFxB,cAAf;AAIAG,MAAAA,UAAU,CAACM,UAAX,CAAsBD,SAAtB,EAAiCL,UAAU,CAACO,QAAX,CAAoBC,MAArD;;AACA,YAAKV,QAAL,CAAc;AACZM,QAAAA,SAAS,EAAED;AADC,OAAd;AAGD,KA7BkB;;AAEjB,UAAKP,KAAL,GAAa;AAAEG,MAAAA,QAAQ,EAAET,MAAM,CAAC,CAAD,CAAlB;AAAuBO,MAAAA,QAAQ,EAAEP,MAAM,CAAC,CAAD,CAAvC;AAA4Cc,MAAAA,SAAS,EAAE;AAAvD,KAAb;AAFiB;AAGlB;;;;wCAEmB;AAClBK,MAAAA,WAAW,CAAC,KAAKf,qBAAN,EAA6B,IAA7B,CAAX;AACD;;;6BAwBQ;AAAA,UACCgB,KADD,GACW,KAAKd,KADhB,CACCc,KADD;AAEP,UAAIC,MAAM,GAAG;AACXR,QAAAA,aAAa,EAAE,KAAKP,KAAL,CAAWO,aADf;AAEXS,QAAAA,uBAAuB,EAAE,aAFd;AAGXC,QAAAA,iBAAiB,EAAE,MAHR;AAIXC,QAAAA,cAAc,EAAE,MAJL;AAKXC,QAAAA,uBAAuB,EAAE,CALd;AAMXC,QAAAA,kBAAkB,EAAE,QANT;AAOXC,QAAAA,iBAAiB,EAAE;AAPR,OAAb;AASA,aACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAwB,QAAA,KAAK,EAAE;AAAEC,UAAAA,eAAe,EAAER;AAAnB,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,WAAW,EAAC,iBAAnB;AAAqC,QAAA,QAAQ,EAAC,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAFF,CADF;AAQD;;;;EAnDkBtB,S;;AAsDrB,eAAeI,MAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Input } from '../../../common';\n\nconst colors = ['red', 'blue', 'yellow', 'green'];\nlet currentColorIndex = 0;\n\nclass Slider extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { prevElem: colors[0], postElem: colors[1], animation: 'slider' };\n  }\n\n  componentDidMount() {\n    setInterval(this.changeBackGroundColor, 2000);\n  }\n\n  changeBackGroundColor = () => {\n    const prevColr = this.state.postElem;\n    if (currentColorIndex === 4) {\n      currentColorIndex = 0;\n      this.setState({ prevElem: prevColr, postElem: colors[currentColorIndex] });\n      currentColorIndex += 1;\n    } else {\n      this.setState({ prevElem: prevColr, postElem: colors[currentColorIndex] });\n      currentColorIndex += 1;\n    }\n    const styleSheet = document.styleSheets[0];\n    const animationName = this.state.animation;\n    const keyframes = `@-webkit-keyframes ${animationName} {\n        from {background-color: ${this.state.prevElem};}\n        to {background-color: ${this.state.postElem};}\n    }`;\n    styleSheet.insertRule(keyframes, styleSheet.cssRules.length);\n    this.setState({\n      animation: animationName,\n    });\n  }\n\n  render() {\n    const { color } = this.state;\n    let styles = {\n      animationName: this.state.animationName,\n      animationTimingFunction: 'ease-in-out',\n      animationDuration: '0.6s',\n      animationDelay: '0.0s',\n      animationIterationCount: 1,\n      animationDirection: 'normal',\n      animationFillMode: 'forwards'\n    };\n    return (\n      <div className=\"slider-container\">\n        <div className=\"slider\" style={{ backgroundColor: color }} />\n        <div className=\"search-box-container\">\n          <Input placeholder=\"Enter a Keyword\" iconName=\"Search\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Slider;\n"]},"metadata":{},"sourceType":"module"}