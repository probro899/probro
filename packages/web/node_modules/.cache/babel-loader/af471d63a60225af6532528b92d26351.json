{"ast":null,"code":"import _regeneratorRuntime from \"/home/bhagya/workspace/reactjs/projects/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/bhagya/workspace/reactjs/projects/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/bhagya/workspace/reactjs/projects/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bhagya/workspace/reactjs/projects/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/bhagya/workspace/reactjs/projects/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bhagya/workspace/reactjs/projects/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/bhagya/workspace/reactjs/projects/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/bhagya/workspace/reactjs/projects/probro/packages/web/src/common/ClassComponents/NewColumn.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport client from '../../socket';\nimport { PopoverForm } from '../../components';\nimport ColumnFormStructure from './structure';\n\nvar NewColumn =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NewColumn, _Component);\n\n  function NewColumn() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NewColumn);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NewColumn)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      // if to open the popover to add the title to the new column.\n      popOpen: false,\n      api: {}\n    };\n\n    _this.handlePopOverForm = function () {\n      var popOpen = _this.state.popOpen;\n\n      _this.setState({\n        popOpen: !popOpen\n      });\n    };\n\n    _this.addNewColumn =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(data) {\n        var _this$props, classId, account, database, api, pos;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this$props = _this.props, classId = _this$props.classId, account = _this$props.account, database = _this$props.database;\n                api = _this.state.api;\n                pos = Object.keys(database.BoardColumn.byId).reduce(function (count, obj) {\n                  if (database.BoardColumn.byId[obj].boardId === classId) {\n                    // eslint-disable-next-line no-param-reassign\n                    count += 16384;\n                  }\n\n                  return count;\n                }, 16384);\n                _context.next = 5;\n                return api.addBoardColumn({\n                  userId: account.user.id,\n                  timeStamp: Date.now(),\n                  name: data.name,\n                  position: pos,\n                  boardId: classId\n                });\n\n              case 5:\n                _this.handlePopOverForm();\n\n                return _context.abrupt(\"return\", {\n                  response: 200\n                });\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(NewColumn, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var api;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return client.scope('Mentee');\n\n              case 2:\n                api = _context2.sent;\n                this.setState({\n                  api: api\n                });\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var popOpen = this.state.popOpen;\n      return React.createElement(\"div\", {\n        className: \"add-new-column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(PopoverForm, {\n        isOpen: popOpen,\n        onClose: this.handlePopOverForm,\n        callback: this.addNewColumn,\n        structure: ColumnFormStructure,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        role: \"button\",\n        tabIndex: 0,\n        onKeyDown: this.handlePopOverForm,\n        className: \"title\",\n        onClick: this.handlePopOverForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"+ New Column\")));\n    }\n  }]);\n\n  return NewColumn;\n}(Component);\n\nNewColumn.defaultProps = {\n  classId: ''\n};\nNewColumn.propTypes = {\n  account: PropTypes.objectOf(PropTypes.any).isRequired,\n  database: PropTypes.objectOf(PropTypes.any).isRequired,\n  classId: PropTypes.number\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return state;\n};\n\nexport default connect(mapStateToProps)(NewColumn);","map":{"version":3,"sources":["/home/bhagya/workspace/reactjs/projects/probro/packages/web/src/common/ClassComponents/NewColumn.js"],"names":["React","Component","connect","PropTypes","client","PopoverForm","ColumnFormStructure","NewColumn","state","popOpen","api","handlePopOverForm","setState","addNewColumn","data","props","classId","account","database","pos","Object","keys","BoardColumn","byId","reduce","count","obj","boardId","addBoardColumn","userId","user","id","timeStamp","Date","now","name","position","response","scope","defaultProps","propTypes","objectOf","any","isRequired","number","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport client from '../../socket';\nimport { PopoverForm } from '../../components';\nimport ColumnFormStructure from './structure';\n\nclass NewColumn extends Component {\n  state = {\n    // if to open the popover to add the title to the new column.\n    popOpen: false,\n    api: {},\n  };\n\n  async componentWillMount() {\n    const api = await client.scope('Mentee');\n    this.setState({\n      api,\n    });\n  }\n\n  handlePopOverForm = () => {\n    const { popOpen } = this.state;\n    this.setState({\n      popOpen: !popOpen,\n    });\n  }\n\n  addNewColumn = async (data) => {\n    const { classId, account, database } = this.props;\n    const { api } = this.state;\n    const pos = Object.keys(database.BoardColumn.byId).reduce((count, obj) => {\n      if (database.BoardColumn.byId[obj].boardId === classId) {\n        // eslint-disable-next-line no-param-reassign\n        count += 16384;\n      }\n      return count;\n    }, 16384);\n    await api.addBoardColumn({\n      userId: account.user.id,\n      timeStamp: Date.now(),\n      name: data.name,\n      position: pos,\n      boardId: classId,\n    });\n    this.handlePopOverForm();\n    return { response: 200 };\n  };\n\n  render() {\n    const { popOpen } = this.state;\n    return (\n      <div className=\"add-new-column\">\n        <PopoverForm\n          isOpen={popOpen}\n          onClose={this.handlePopOverForm}\n          callback={this.addNewColumn}\n          structure={ColumnFormStructure}\n        />\n        <div role=\"button\" tabIndex={0} onKeyDown={this.handlePopOverForm} className=\"title\" onClick={this.handlePopOverForm}>\n          <span>+ New Column</span>\n        </div>\n      </div>\n    );\n  }\n}\n\nNewColumn.defaultProps = {\n  classId: '',\n};\n\nNewColumn.propTypes = {\n  account: PropTypes.objectOf(PropTypes.any).isRequired,\n  database: PropTypes.objectOf(PropTypes.any).isRequired,\n  classId: PropTypes.number,\n};\n\nconst mapStateToProps = state => state;\nexport default connect(mapStateToProps)(NewColumn);\n"]},"metadata":{},"sourceType":"module"}