{"ast":null,"code":"import _regeneratorRuntime from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Nabin/workspace/probro/packages/web/src/common/Form.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormGroup } from '@blueprintjs/core';\nimport Input from './Input';\nimport Button from './Button';\n\nvar Element = function Element(props) {\n  var data = props.data;\n\n  if (!data.fieldtype) {\n    return null;\n  }\n\n  switch (data.fieldtype) {\n    case 'input':\n      return React.createElement(Input, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }));\n\n    case 'button':\n      return React.createElement(Button, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }));\n\n    default:\n      return null;\n  }\n};\n\nvar Form =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Form, _React$Component);\n\n  function Form() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Form);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Form)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      error: null,\n      loading: false,\n      fields: {}\n    };\n\n    _this.componentWillMount = function () {\n      var data = _this.props.data;\n      var fields = data.filter(function (obj) {\n        if (obj.fieldtype === 'input') {\n          return _defineProperty({}, obj.id, '');\n        }\n      }).map(function (obj) {\n        if (obj.fieldtype === 'input') {\n          return _defineProperty({}, obj.id, '');\n        }\n      });\n\n      _this.setState({\n        fields: _objectSpread({}, fields)\n      });\n    };\n\n    _this.onChange = function (key, value) {\n      var fields = _this.state.fields;\n\n      _this.setState({\n        fields: _objectSpread({}, fields, _defineProperty({}, key, value))\n      });\n    };\n\n    _this.onSubmit =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var callback, fields, res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              callback = _this.props.callback;\n              fields = _this.state.fields;\n\n              _this.setState({\n                loading: true\n              });\n\n              _context.next = 5;\n              return callback(fields);\n\n            case 5:\n              res = _context.sent;\n\n              if (res.response === 200) {\n                _this.setState({\n                  loading: false,\n                  error: null\n                });\n              } else {\n                _this.setState({\n                  loading: false,\n                  error: res.error\n                });\n              }\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _this;\n  }\n\n  _createClass(Form, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var data = this.props.data;\n      var fields = this.state.fields;\n      return React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, data.map(function (obj, idx) {\n        return React.createElement(Element, {\n          key: idx,\n          data: obj,\n          onChange: _this2.onChange,\n          onSubmit: _this2.onSubmit,\n          value: fields[obj.id],\n          state: _this2.state,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        });\n      })));\n    }\n  }]);\n\n  return Form;\n}(React.Component);\n\nForm.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.any).isRequired,\n  callback: PropTypes.func.isRequired\n};\nexport default Form;","map":{"version":3,"sources":["/Users/Nabin/workspace/probro/packages/web/src/common/Form.js"],"names":["React","PropTypes","FormGroup","Input","Button","Element","props","data","fieldtype","Form","state","error","loading","fields","componentWillMount","filter","obj","id","map","setState","onChange","key","value","onSubmit","callback","res","response","idx","Component","propTypes","arrayOf","any","isRequired","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormGroup } from '@blueprintjs/core';\nimport Input from './Input';\nimport Button from './Button';\n\nconst Element = (props) => {\n  const { data } = props;\n  if (!data.fieldtype) {\n    return null;\n  }\n  switch (data.fieldtype) {\n    case 'input':\n      return (<Input {...props} />);\n    case 'button':\n      return (<Button {...props} />);\n    default:\n      return null;\n  }\n};\n\nclass Form extends React.Component {\n  state = {\n    error: null,\n    loading: false,\n    fields: {},\n  };\n\n  componentWillMount = () => {\n    const { data } = this.props;\n    const fields = data.filter((obj) => {\n      if (obj.fieldtype === 'input') {\n        return { [obj.id]: '' };\n      }\n    }).map((obj) => {\n      if (obj.fieldtype === 'input') {\n        return { [obj.id]: '' };\n      }\n    });\n    this.setState({\n      fields: { ...fields },\n    });\n  }\n\n  onChange = (key, value) => {\n    const { fields } = this.state;\n    this.setState({ fields: { ...fields, [key]: value } });\n  }\n\n  onSubmit = async () => {\n    const { callback } = this.props;\n    const { fields } = this.state;\n    this.setState({ loading: true });\n    const res = await callback(fields);\n    if (res.response === 200) {\n      this.setState({ loading: false, error: null });\n    } else {\n      this.setState({ loading: false, error: res.error });\n    }\n  }\n\n  render() {\n    const { data } = this.props;\n    const { fields } = this.state;\n    return (\n      <form>\n        <FormGroup>\n          {\n            data.map((obj, idx) => (\n              <Element\n                key={idx}\n                data={obj}\n                onChange={this.onChange}\n                onSubmit={this.onSubmit}\n                value={fields[obj.id]}\n                state={this.state}\n              />\n            ))\n          }\n        </FormGroup>\n      </form>\n    );\n  }\n}\n\nForm.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.any).isRequired,\n  callback: PropTypes.func.isRequired,\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}