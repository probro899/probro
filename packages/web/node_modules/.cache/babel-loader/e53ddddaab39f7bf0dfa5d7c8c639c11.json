{"ast":null,"code":"import _classCallCheck from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Nabin/workspace/probro/packages/web/src/screens/home/component/slider.js\";\nimport React, { Component } from 'react';\nimport { Input } from '../../../common';\nvar elems = ['red', 'blue', 'yellow', 'green'];\nvar animationIndex = 0;\n\nvar Slider =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Slider, _Component);\n\n  function Slider(props) {\n    var _this;\n\n    _classCallCheck(this, Slider);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Slider).call(this, props));\n\n    _this.changeBackGroundColor = function () {\n      if (animationIndex === elems.length + 1) {\n        animationIndex = 0;\n      } else {\n        animationIndex += 1;\n      }\n    };\n\n    _this.state = {\n      animationName: []\n    };\n    return _this;\n  }\n\n  _createClass(Slider, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var styleSheet = document.styleSheets[0]; //eslint-disable-line\n\n      var animations = [];\n      var i = 0;\n\n      for (i; i < elems.length; i += 1) {\n        var animationName = \"animation\".concat(Math.round(Math.random() * 100));\n        var keyframes = \"@keyframes \".concat(animationName, \" {\\n        from {background-color: \").concat(elems[i], \";}\\n        to {background-color: \").concat(elems[i + 1], \";}\\n      }\");\n        styleSheet.insertRule(keyframes, styleSheet.cssRules.length);\n        animations.push(animationName);\n      }\n\n      if (i === elems.length) {\n        var _animationName = \"animation\".concat(Math.round(Math.random() * 100));\n\n        var _keyframes = \"@keyframes \".concat(_animationName, \" {\\n        from {background-color: \").concat(elems[i - 1], \";}\\n        to {background-color: \").concat(elems[0], \";}\\n      }\");\n\n        styleSheet.insertRule(_keyframes, styleSheet.cssRules.length);\n        animations.push(_animationName);\n      }\n\n      this.setState({\n        animationName: animations\n      });\n      setInterval(this.changeBackGroundColor, 3000);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var animationName = this.state.animationName;\n      var styles = {\n        animationName: animationName[animationIndex],\n        animationDuration: '1s'\n      };\n      return React.createElement(\"div\", {\n        className: \"slider-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"slider\",\n        style: styles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"search-box-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Input, {\n        placeholder: \"Enter a Keyword\",\n        iconName: \"Search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Slider;\n}(Component);\n\nexport default Slider;","map":{"version":3,"sources":["/Users/Nabin/workspace/probro/packages/web/src/screens/home/component/slider.js"],"names":["React","Component","Input","elems","animationIndex","Slider","props","changeBackGroundColor","length","state","animationName","styleSheet","document","styleSheets","animations","i","Math","round","random","keyframes","insertRule","cssRules","push","setState","setInterval","styles","animationDuration"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Input } from '../../../common';\n\nconst elems = ['red', 'blue', 'yellow', 'green'];\nlet animationIndex = 0;\n\nclass Slider extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { animationName: [] };\n  }\n\n  componentDidMount() {\n    const styleSheet = document.styleSheets[0]; //eslint-disable-line\n    const animations = [];\n    let i = 0;\n    for (i; i < elems.length; i += 1) {\n      const animationName = `animation${Math.round(Math.random() * 100)}`;\n      const keyframes = `@keyframes ${animationName} {\n        from {background-color: ${elems[i]};}\n        to {background-color: ${elems[i + 1]};}\n      }`;\n      styleSheet.insertRule(keyframes, styleSheet.cssRules.length);\n      animations.push(animationName);\n    }\n    if (i === elems.length) {\n      const animationName = `animation${Math.round(Math.random() * 100)}`;\n      const keyframes = `@keyframes ${animationName} {\n        from {background-color: ${elems[i - 1]};}\n        to {background-color: ${elems[0]};}\n      }`;\n      styleSheet.insertRule(keyframes, styleSheet.cssRules.length);\n      animations.push(animationName);\n    }\n    this.setState({ animationName: animations });\n    setInterval(this.changeBackGroundColor, 3000);\n  }\n\n  changeBackGroundColor = () => {\n    if (animationIndex === elems.length + 1) {\n      animationIndex = 0;\n    } else {\n      animationIndex += 1;\n    }\n  }\n\n  render() {\n    const { animationName } = this.state;\n    const styles = {\n      animationName: animationName[animationIndex],\n      animationDuration: '1s',\n    };\n    return (\n      <div className=\"slider-container\">\n        <div className=\"slider\" style={styles} />\n        <div className=\"search-box-container\">\n          <Input placeholder=\"Enter a Keyword\" iconName=\"Search\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Slider;\n"]},"metadata":{},"sourceType":"module"}