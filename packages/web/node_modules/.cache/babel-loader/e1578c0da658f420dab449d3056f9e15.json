{"ast":null,"code":"import _classCallCheck from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Nabin/workspace/probro/packages/web/src/common/ClassComponents/Column.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport Task from './Task';\nimport NewTask from './NewTask';\n\nvar Column =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Column, _Component);\n\n  function Column() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Column);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Column)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(Column, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          column = _this$props.column,\n          tasks = _this$props.tasks,\n          index = _this$props.index;\n      return React.createElement(Draggable, {\n        draggableId: column.id,\n        index: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, function (provided) {\n        return React.createElement(\"div\", Object.assign({\n          className: \"column-container\",\n          ref: provided.innerRef\n        }, provided.draggableProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"column-inner-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, React.createElement(\"div\", Object.assign({\n          className: \"column-title\"\n        }, provided.dragHandleProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, column.title)), React.createElement(Droppable, {\n          droppableId: column.id,\n          type: \"task\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, function (provided) {\n          return React.createElement(\"div\", Object.assign({\n            className: \"task-list\",\n            ref: provided.innerRef\n          }, provided.droppableProps, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37\n            },\n            __self: this\n          }), tasks.map(function (task, index) {\n            return React.createElement(Task, {\n              key: task.id,\n              task: task,\n              index: index,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 42\n              },\n              __self: this\n            });\n          }), provided.placeholder);\n        })), provided.placeholder, React.createElement(NewTask, {\n          columnId: column.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }));\n      });\n    }\n  }]);\n\n  return Column;\n}(Component);\n\nColumn.propTypes = {\n  column: PropTypes.objectOf(PropTypes.any).isRequired,\n  tasks: PropTypes.arrayOf(PropTypes.any).isRequired,\n  index: PropTypes.number.isRequired\n};\nexport default Column;","map":{"version":3,"sources":["/Users/Nabin/workspace/probro/packages/web/src/common/ClassComponents/Column.js"],"names":["React","Component","PropTypes","Droppable","Draggable","Task","NewTask","Column","state","props","column","tasks","index","id","provided","innerRef","draggableProps","dragHandleProps","title","droppableProps","map","task","placeholder","propTypes","objectOf","any","isRequired","arrayOf","number"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,qBAArC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,OAAP,MAAoB,WAApB;;IAEMC,M;;;;;;;;;;;;;;;;;UACJC,K,GAAQ,E;;;;;;6BAEC;AAAA,wBAC0B,KAAKC,KAD/B;AAAA,UACCC,MADD,eACCA,MADD;AAAA,UACSC,KADT,eACSA,KADT;AAAA,UACgBC,KADhB,eACgBA,KADhB;AAEP,aACE,oBAAC,SAAD;AACE,QAAA,WAAW,EAAEF,MAAM,CAACG,EADtB;AAEE,QAAA,KAAK,EAAED,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIG,UAAAE,QAAQ;AAAA,eACP;AACE,UAAA,SAAS,EAAC,kBADZ;AAEE,UAAA,GAAG,EAAEA,QAAQ,CAACC;AAFhB,WAGMD,QAAQ,CAACE,cAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAKE;AAAK,UAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AACE,UAAA,SAAS,EAAC;AADZ,WAEMF,QAAQ,CAACG,eAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGP,MAAM,CAACQ,KADV,CAJF,CADF,EASE,oBAAC,SAAD;AACE,UAAA,WAAW,EAAER,MAAM,CAACG,EADtB;AAEE,UAAA,IAAI,EAAC,MAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAIG,UAAAC,QAAQ;AAAA,iBACP;AACE,YAAA,SAAS,EAAC,WADZ;AAEE,YAAA,GAAG,EAAEA,QAAQ,CAACC;AAFhB,aAGMD,QAAQ,CAACK,cAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAKGR,KAAK,CAACS,GAAN,CAAU,UAACC,IAAD,EAAOT,KAAP;AAAA,mBAAiB,oBAAC,IAAD;AAAM,cAAA,GAAG,EAAES,IAAI,CAACR,EAAhB;AAAoB,cAAA,IAAI,EAAEQ,IAA1B;AAAgC,cAAA,KAAK,EAAET,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAjB;AAAA,WAAV,CALH,EAMGE,QAAQ,CAACQ,WANZ,CADO;AAAA,SAJX,CATF,CALF,EA8BGR,QAAQ,CAACQ,WA9BZ,EA+BE,oBAAC,OAAD;AAAS,UAAA,QAAQ,EAAEZ,MAAM,CAACG,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UA/BF,CADO;AAAA,OAJX,CADF;AA0CD;;;;EA/CkBZ,S;;AAkDrBM,MAAM,CAACgB,SAAP,GAAmB;AACjBb,EAAAA,MAAM,EAAER,SAAS,CAACsB,QAAV,CAAmBtB,SAAS,CAACuB,GAA7B,EAAkCC,UADzB;AAEjBf,EAAAA,KAAK,EAAET,SAAS,CAACyB,OAAV,CAAkBzB,SAAS,CAACuB,GAA5B,EAAiCC,UAFvB;AAGjBd,EAAAA,KAAK,EAAEV,SAAS,CAAC0B,MAAV,CAAiBF;AAHP,CAAnB;AAMA,eAAenB,MAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport Task from './Task';\nimport NewTask from './NewTask';\n\nclass Column extends Component {\n  state = {};\n\n  render() {\n    const { column, tasks, index } = this.props;\n    return (\n      <Draggable\n        draggableId={column.id}\n        index={index}\n      >\n        {provided => (\n          <div\n            className=\"column-container\"\n            ref={provided.innerRef}\n            {...provided.draggableProps}\n          >\n            <div className=\"column-inner-container\">\n              <div\n                className=\"column-title\"\n                {...provided.dragHandleProps}\n              >\n                <span>\n                  {column.title}\n                </span>\n              </div>\n              <Droppable\n                droppableId={column.id}\n                type=\"task\"\n              >\n                {provided => (\n                  <div\n                    className=\"task-list\"\n                    ref={provided.innerRef}\n                    {...provided.droppableProps}\n                  >\n                    {tasks.map((task, index) => <Task key={task.id} task={task} index={index} />)}\n                    {provided.placeholder}\n                  </div>\n                )}\n              </Droppable>\n            </div>\n            {provided.placeholder}\n            <NewTask columnId={column.id} />\n          </div>\n        )}\n      </Draggable>\n    );\n  }\n}\n\nColumn.propTypes = {\n  column: PropTypes.objectOf(PropTypes.any).isRequired,\n  tasks: PropTypes.arrayOf(PropTypes.any).isRequired,\n  index: PropTypes.number.isRequired,\n};\n\nexport default Column;\n"]},"metadata":{},"sourceType":"module"}