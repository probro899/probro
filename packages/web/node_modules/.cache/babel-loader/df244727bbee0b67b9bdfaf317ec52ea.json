{"ast":null,"code":"import _regeneratorRuntime from \"/home/bhagya/workspace/reactjs/projects/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/bhagya/workspace/reactjs/projects/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport client from '../../../../../../socket';\nimport { onIceConnectionStateChange } from '../common';\nimport onIceCandidateHandler from './onIceCandidate';\n\nfunction gotRemoteStream(e) {\n  var videoElement = document.getElementById('video1');\n\n  if (videoElement.srcObject !== e.streams[0]) {\n    videoElement.srcObject = e.streams[0];\n  }\n}\n\nvar mediaSelector =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(mediaType) {\n    var stream;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            stream = null;\n            _context.t0 = mediaType;\n            _context.next = _context.t0 === 'audio' ? 4 : _context.t0 === 'video' ? 8 : _context.t0 === 'screenshare' ? 12 : 16;\n            break;\n\n          case 4:\n            _context.next = 6;\n            return navigator.mediaDevices.getUserMedia({\n              video: false,\n              audio: true\n            });\n\n          case 6:\n            stream = _context.sent;\n            return _context.abrupt(\"return\", stream);\n\n          case 8:\n            _context.next = 10;\n            return navigator.mediaDevices.getUserMedia({\n              video: true,\n              audio: true\n            });\n\n          case 10:\n            stream = _context.sent;\n            return _context.abrupt(\"return\", stream);\n\n          case 12:\n            _context.next = 14;\n            return navigator.mediaDevices.getDisplayMedia({\n              video: true\n            });\n\n          case 14:\n            stream = _context.sent;\n            return _context.abrupt(\"return\", stream);\n\n          case 16:\n            return _context.abrupt(\"return\", stream);\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function mediaSelector(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee4() {\n  var server, offerOptions, pc, setLocalDescription, setRemoteDescription, createOffer, createAnswer, addIceCandidate;\n  return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          // server configuration\n          server = null;\n          offerOptions = {\n            offerToRecieveAudio: 1,\n            offerToRecieveVideo: 1\n          }; // Initialize peerconnection\n          // eslint-disable-next-line\n\n          pc = new RTCPeerConnection(server); // Adding icecandidate listner\n\n          pc.addEventListener('icecandidate', function (e) {\n            return onIceCandidateHandler(e, pc);\n          }); // Adding IceConnection State Change\n\n          pc.addEventListener('iceconnectionstatechange', function (e) {\n            return onIceConnectionStateChange(e, pc);\n          }); // Adding Ontrack listner\n\n          pc.addEventListener('track', gotRemoteStream); // setLocal Description\n\n          setLocalDescription = function setLocalDescription(data) {\n            pc.setLocalDescription(data);\n          }; // setRemote Description\n\n\n          setRemoteDescription = function setRemoteDescription(data) {\n            pc.setRemoteDescription(data);\n          }; // creating offer for list of users\n\n\n          createOffer =\n          /*#__PURE__*/\n          function () {\n            var _ref3 = _asyncToGenerator(\n            /*#__PURE__*/\n            _regeneratorRuntime.mark(function _callee2(mediaType) {\n              var stream, offer;\n              return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                while (1) {\n                  switch (_context2.prev = _context2.next) {\n                    case 0:\n                      _context2.next = 2;\n                      return mediaSelector(mediaType);\n\n                    case 2:\n                      stream = _context2.sent;\n                      stream.getTracks().forEach(function (track) {\n                        return pc.addTrack(track, stream);\n                      });\n                      _context2.next = 6;\n                      return pc.createOffer(offerOptions);\n\n                    case 6:\n                      offer = _context2.sent;\n                      setLocalDescription(offer);\n                      return _context2.abrupt(\"return\", offer);\n\n                    case 9:\n                    case \"end\":\n                      return _context2.stop();\n                  }\n                }\n              }, _callee2);\n            }));\n\n            return function createOffer(_x2) {\n              return _ref3.apply(this, arguments);\n            };\n          }(); // creating Answer for offer\n\n\n          createAnswer =\n          /*#__PURE__*/\n          function () {\n            var _ref4 = _asyncToGenerator(\n            /*#__PURE__*/\n            _regeneratorRuntime.mark(function _callee3(data, mediaType) {\n              var stream, answer;\n              return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                while (1) {\n                  switch (_context3.prev = _context3.next) {\n                    case 0:\n                      _context3.next = 2;\n                      return mediaSelector(mediaType);\n\n                    case 2:\n                      stream = _context3.sent;\n                      stream.getTracks().forEach(function (track) {\n                        return pc.addTrack(track, stream);\n                      });\n                      setRemoteDescription(data);\n                      _context3.next = 7;\n                      return pc.createAnswer();\n\n                    case 7:\n                      answer = _context3.sent;\n                      setLocalDescription(answer);\n                      return _context3.abrupt(\"return\", answer);\n\n                    case 10:\n                    case \"end\":\n                      return _context3.stop();\n                  }\n                }\n              }, _callee3);\n            }));\n\n            return function createAnswer(_x3, _x4) {\n              return _ref4.apply(this, arguments);\n            };\n          }(); // Add remoteIceCandidate\n\n\n          addIceCandidate = function addIceCandidate(candidate) {\n            // eslint-disable-next-line\n            pc.addIceCandidate(new RTCIceCandidate(JSON.parse(candidate)));\n          };\n\n          return _context4.abrupt(\"return\", {\n            pc: pc,\n            createOffer: createOffer,\n            createAnswer: createAnswer,\n            addIceCandidate: addIceCandidate\n          });\n\n        case 12:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _callee4);\n}));","map":{"version":3,"sources":["/home/bhagya/workspace/reactjs/projects/probro/packages/web/src/screens/users/components/communication/helper-functions/main/index.js"],"names":["client","onIceConnectionStateChange","onIceCandidateHandler","gotRemoteStream","e","videoElement","document","getElementById","srcObject","streams","mediaSelector","mediaType","stream","navigator","mediaDevices","getUserMedia","video","audio","getDisplayMedia","server","offerOptions","offerToRecieveAudio","offerToRecieveVideo","pc","RTCPeerConnection","addEventListener","setLocalDescription","data","setRemoteDescription","createOffer","getTracks","forEach","track","addTrack","offer","createAnswer","answer","addIceCandidate","candidate","RTCIceCandidate","JSON","parse"],"mappings":"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","sourcesContent":["import client from '../../../../../../socket';\nimport { onIceConnectionStateChange } from '../common';\nimport onIceCandidateHandler from './onIceCandidate';\n\nfunction gotRemoteStream(e) {\n  const videoElement = document.getElementById('video1');\n  if (videoElement.srcObject !== e.streams[0]) {\n    videoElement.srcObject = e.streams[0];\n  }\n}\n\nconst mediaSelector = async (mediaType) => {\n  let stream = null;\n  switch (mediaType) {\n    case 'audio':\n      stream = await navigator.mediaDevices.getUserMedia({ video: false, audio: true });\n      return stream;\n    case 'video':\n      stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\n      return stream;\n    case 'screenshare':\n      stream = await navigator.mediaDevices.getDisplayMedia({ video: true });\n      return stream;\n    default:\n      return stream;\n  }\n};\n\nexport default async () => {\n  // server configuration\n  const server = null;\n  const offerOptions = {\n    offerToRecieveAudio: 1,\n    offerToRecieveVideo: 1,\n  };\n  // Initialize peerconnection\n  // eslint-disable-next-line\n  const pc = new RTCPeerConnection(server);\n\n  // Adding icecandidate listner\n  pc.addEventListener('icecandidate', e => onIceCandidateHandler(e, pc));\n\n  // Adding IceConnection State Change\n  pc.addEventListener('iceconnectionstatechange', e => onIceConnectionStateChange(e, pc));\n\n  // Adding Ontrack listner\n  pc.addEventListener('track', gotRemoteStream);\n\n  // setLocal Description\n  const setLocalDescription = (data) => {\n    pc.setLocalDescription(data);\n  };\n\n  // setRemote Description\n  const setRemoteDescription = (data) => {\n    pc.setRemoteDescription(data);\n  };\n\n  // creating offer for list of users\n  const createOffer = async (mediaType) => {\n    const stream = await mediaSelector(mediaType);\n    stream.getTracks().forEach(track => pc.addTrack(track, stream));\n    const offer = await pc.createOffer(offerOptions);\n    setLocalDescription(offer);\n    return offer;\n  };\n\n  // creating Answer for offer\n  const createAnswer = async (data, mediaType) => {\n    const stream = await mediaSelector(mediaType);\n    stream.getTracks().forEach(track => pc.addTrack(track, stream));\n    setRemoteDescription(data);\n    const answer = await pc.createAnswer();\n    setLocalDescription(answer);\n    return answer;\n  };\n\n  // Add remoteIceCandidate\n  const addIceCandidate = (candidate) => {\n    // eslint-disable-next-line\n    pc.addIceCandidate(new RTCIceCandidate(JSON.parse(candidate)));\n  };\n\n  return { pc, createOffer, createAnswer, addIceCandidate };\n};\n"]},"metadata":{},"sourceType":"module"}