{"ast":null,"code":"import _objectSpread from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Nabin/workspace/probro/packages/web/src/screens/users/components/SideNav.js\";\nimport React, { Component } from 'react';\nimport { Icon } from '@blueprintjs/core';\nimport { connect } from 'react-redux';\nimport { IconNames } from '@blueprintjs/icons';\nimport PropTypes from 'prop-types';\nimport * as actions from '../../../actions';\n\nvar NavElement = function NavElement(props) {\n  var iconName = props.iconName,\n      name = props.name,\n      active = props.active,\n      onClick = props.onClick,\n      onKeyDown = props.onKeyDown,\n      role = props.role;\n  return (// eslint-disable-next-line jsx-a11y/no-static-element-interactions\n    React.createElement(\"div\", {\n      role: role,\n      className: active ? 'sideNavElement active' : 'sideNavElement',\n      onClick: onClick,\n      onKeyDown: onKeyDown,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      icon: IconNames[iconName],\n      iconSize: \"15\",\n      color: \"rgba(78, 185, 255, 1)\",\n      style: {\n        verticalAlign: 'baseline'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"\\xA0\\xA0\", name))\n  );\n};\n\nNavElement.defaultProps = {\n  active: false\n};\nNavElement.propTypes = {\n  role: PropTypes.string.isRequired,\n  onKeyDown: PropTypes.func.isRequired,\n  onClick: PropTypes.func.isRequired,\n  iconName: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  active: PropTypes.bool\n};\n\nvar SideNav =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SideNav, _Component);\n\n  function SideNav() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SideNav);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SideNav)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {};\n\n    _this.onClick = function (_name) {\n      var updateMainValue = _this.props.updateMainValue;\n      updateMainValue('activeNav', {\n        name: _name\n      });\n    };\n\n    _this.onKeyDown = function (ev) {\n      if (ev.keyCode === 13) {\n        _this.focus();\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(SideNav, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var navElements = [{\n        iconName: 'PERSON',\n        name: 'Profile'\n      }, {\n        iconName: 'HOME',\n        name: 'Classes'\n      }, {\n        iconName: 'COG',\n        name: 'Settings'\n      }];\n      var main = this.props.main;\n      return React.createElement(\"div\", {\n        className: \"sideNav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, navElements.map(function (obj) {\n        return React.createElement(NavElement, {\n          role: \"menuitem\",\n          onClick: function onClick() {\n            return _this2.onClick(obj.name);\n          },\n          onKeyDown: _this2.onKeyDown,\n          name: obj.name,\n          key: obj.name,\n          iconName: obj.iconName,\n          active: main.activeNav.name === obj.name ? true : false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return SideNav;\n}(Component);\n\nSideNav.propTypes = {\n  updateMainValue: PropTypes.func.isRequired,\n  main: PropTypes.objectOf(PropTypes.any).isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return state;\n};\n\nexport default connect(mapStateToProps, _objectSpread({}, actions))(SideNav);","map":{"version":3,"sources":["/Users/Nabin/workspace/probro/packages/web/src/screens/users/components/SideNav.js"],"names":["React","Component","Icon","connect","IconNames","PropTypes","actions","NavElement","props","iconName","name","active","onClick","onKeyDown","role","verticalAlign","defaultProps","propTypes","string","isRequired","func","bool","SideNav","state","_name","updateMainValue","ev","keyCode","focus","navElements","main","map","obj","activeNav","objectOf","any","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Icon } from '@blueprintjs/core';\nimport { connect } from 'react-redux';\nimport { IconNames } from '@blueprintjs/icons';\nimport PropTypes from 'prop-types';\nimport * as actions from '../../../actions';\n\nconst NavElement = (props) => {\n  const {\n    iconName,\n    name,\n    active,\n    onClick,\n    onKeyDown,\n    role,\n  } = props;\n  return (\n    // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n    <div role={role} className={active ? 'sideNavElement active' : 'sideNavElement'} onClick={onClick} onKeyDown={onKeyDown}>\n      <Icon icon={IconNames[iconName]} iconSize=\"15\" color=\"rgba(78, 185, 255, 1)\" style={{ verticalAlign: 'baseline' }} />\n      <span>\n      &nbsp;&nbsp;\n        {name}\n      </span>\n    </div>\n  );\n};\n\nNavElement.defaultProps = {\n  active: false,\n};\n\nNavElement.propTypes = {\n  role: PropTypes.string.isRequired,\n  onKeyDown: PropTypes.func.isRequired,\n  onClick: PropTypes.func.isRequired,\n  iconName: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  active: PropTypes.bool,\n};\n\nclass SideNav extends Component {\n  state = {}\n\n  onClick = (_name) => {\n    const { updateMainValue } = this.props;\n    updateMainValue('activeNav', { name: _name });\n  }\n\n  // jus to handle the eslint error we have to pass a keyboard event handler for div\n  onKeyDown = (ev) => {\n    if (ev.keyCode === 13) {\n      this.focus();\n    }\n  }\n\n  render() {\n    const navElements = [{ iconName: 'PERSON', name: 'Profile' },\n      { iconName: 'HOME', name: 'Classes' },\n      { iconName: 'COG', name: 'Settings' },\n    ];\n    const { main } = this.props;\n    return (\n      <div className=\"sideNav\">\n        {\n          navElements.map((obj) => {\n            return (\n              <NavElement\n                role=\"menuitem\"\n                onClick={() => this.onClick(obj.name)}\n                onKeyDown={this.onKeyDown}\n                name={obj.name}\n                key={obj.name}\n                iconName={obj.iconName}\n                active={main.activeNav.name === obj.name ? true: false}\n              />\n            );\n          })\n        }\n      </div>\n    );\n  }\n}\n\nSideNav.propTypes = {\n  updateMainValue: PropTypes.func.isRequired,\n  main: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nconst mapStateToProps = state => state;\n\nexport default connect(mapStateToProps, { ...actions })(SideNav);\n"]},"metadata":{},"sourceType":"module"}