{"ast":null,"code":"import _classCallCheck from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Nabin/workspace/probro/packages/web/src/screens/home/component/slider.js\";\nimport React, { Component } from 'react';\nimport { Input } from '../../../common';\nvar colors = ['red', 'blue', 'yellow', 'green'];\nvar currentColorIndex = 0;\n\nvar Slider =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Slider, _Component);\n\n  function Slider(props) {\n    var _this;\n\n    _classCallCheck(this, Slider);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Slider).call(this, props));\n\n    _this.changeBackGroundColor = function () {\n      var _this$state = _this.state,\n          prevElem = _this$state.prevElem,\n          postElem = _this$state.postElem,\n          animation = _this$state.animation;\n\n      if (currentColorIndex === 4) {\n        currentColorIndex = 0;\n\n        _this.setState({\n          prevElem: postElem,\n          postElem: colors[currentColorIndex]\n        });\n\n        currentColorIndex += 1;\n      } else {\n        _this.setState({\n          prevElem: postElem,\n          postElem: colors[currentColorIndex]\n        });\n\n        currentColorIndex += 1;\n      }\n\n      var styleSheet = document.styleSheets[0]; //eslint-disable-line\n\n      var animationName = animation;\n      var keyframes = \"@keyframes \".concat(animationName, \" {\\n        from {background-color: \").concat(prevElem, \";}\\n        to {background-color: \").concat(postElem, \";}\\n    }\");\n      styleSheet.insertRule(keyframes, styleSheet.cssRules.length);\n\n      _this.setState({\n        animation: animationName\n      });\n    };\n\n    _this.state = {\n      prevElem: colors[0],\n      postElem: colors[1],\n      animation: 'slider'\n    };\n    return _this;\n  }\n\n  _createClass(Slider, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      setInterval(this.changeBackGroundColor, 3000);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var animation = this.state.animation;\n      var styles = {\n        animationName: animation,\n        animationDuration: '1s'\n      };\n      return React.createElement(\"div\", {\n        className: \"slider-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"slider\",\n        style: styles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"search-box-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Input, {\n        placeholder: \"Enter a Keyword\",\n        iconName: \"Search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Slider;\n}(Component);\n\nexport default Slider;","map":{"version":3,"sources":["/Users/Nabin/workspace/probro/packages/web/src/screens/home/component/slider.js"],"names":["React","Component","Input","colors","currentColorIndex","Slider","props","changeBackGroundColor","state","prevElem","postElem","animation","setState","styleSheet","document","styleSheets","animationName","keyframes","insertRule","cssRules","length","setInterval","styles","animationDuration"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,iBAAtB;AAEA,IAAMC,MAAM,GAAG,CAAC,KAAD,EAAQ,MAAR,EAAgB,QAAhB,EAA0B,OAA1B,CAAf;AACA,IAAIC,iBAAiB,GAAG,CAAxB;;IAEMC,M;;;;;AACJ,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,gFAAMA,KAAN;;AADiB,UASnBC,qBATmB,GASK,YAAM;AAAA,wBACc,MAAKC,KADnB;AAAA,UACpBC,QADoB,eACpBA,QADoB;AAAA,UACVC,QADU,eACVA,QADU;AAAA,UACAC,SADA,eACAA,SADA;;AAE5B,UAAIP,iBAAiB,KAAK,CAA1B,EAA6B;AAC3BA,QAAAA,iBAAiB,GAAG,CAApB;;AACA,cAAKQ,QAAL,CAAc;AAAEH,UAAAA,QAAQ,EAAEC,QAAZ;AAAsBA,UAAAA,QAAQ,EAAEP,MAAM,CAACC,iBAAD;AAAtC,SAAd;;AACAA,QAAAA,iBAAiB,IAAI,CAArB;AACD,OAJD,MAIO;AACL,cAAKQ,QAAL,CAAc;AAAEH,UAAAA,QAAQ,EAAEC,QAAZ;AAAsBA,UAAAA,QAAQ,EAAEP,MAAM,CAACC,iBAAD;AAAtC,SAAd;;AACAA,QAAAA,iBAAiB,IAAI,CAArB;AACD;;AACD,UAAMS,UAAU,GAAGC,QAAQ,CAACC,WAAT,CAAqB,CAArB,CAAnB,CAV4B,CAUgB;;AAC5C,UAAMC,aAAa,GAAGL,SAAtB;AACA,UAAMM,SAAS,wBAAiBD,aAAjB,iDACeP,QADf,+CAEaC,QAFb,cAAf;AAIAG,MAAAA,UAAU,CAACK,UAAX,CAAsBD,SAAtB,EAAiCJ,UAAU,CAACM,QAAX,CAAoBC,MAArD;;AACA,YAAKR,QAAL,CAAc;AACZD,QAAAA,SAAS,EAAEK;AADC,OAAd;AAGD,KA7BkB;;AAEjB,UAAKR,KAAL,GAAa;AAAEC,MAAAA,QAAQ,EAAEN,MAAM,CAAC,CAAD,CAAlB;AAAuBO,MAAAA,QAAQ,EAAEP,MAAM,CAAC,CAAD,CAAvC;AAA4CQ,MAAAA,SAAS,EAAE;AAAvD,KAAb;AAFiB;AAGlB;;;;wCAEmB;AAClBU,MAAAA,WAAW,CAAC,KAAKd,qBAAN,EAA6B,IAA7B,CAAX;AACD;;;6BAwBQ;AAAA,UACCI,SADD,GACe,KAAKH,KADpB,CACCG,SADD;AAEP,UAAMW,MAAM,GAAG;AACbN,QAAAA,aAAa,EAAEL,SADF;AAEbY,QAAAA,iBAAiB,EAAE;AAFN,OAAf;AAIA,aACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAwB,QAAA,KAAK,EAAED,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,WAAW,EAAC,iBAAnB;AAAqC,QAAA,QAAQ,EAAC,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAFF,CADF;AAQD;;;;EA9CkBrB,S;;AAiDrB,eAAeI,MAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Input } from '../../../common';\n\nconst colors = ['red', 'blue', 'yellow', 'green'];\nlet currentColorIndex = 0;\n\nclass Slider extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { prevElem: colors[0], postElem: colors[1], animation: 'slider' };\n  }\n\n  componentDidMount() {\n    setInterval(this.changeBackGroundColor, 3000);\n  }\n\n  changeBackGroundColor = () => {\n    const { prevElem, postElem, animation } = this.state;\n    if (currentColorIndex === 4) {\n      currentColorIndex = 0;\n      this.setState({ prevElem: postElem, postElem: colors[currentColorIndex] });\n      currentColorIndex += 1;\n    } else {\n      this.setState({ prevElem: postElem, postElem: colors[currentColorIndex] });\n      currentColorIndex += 1;\n    }\n    const styleSheet = document.styleSheets[0]; //eslint-disable-line\n    const animationName = animation;\n    const keyframes = `@keyframes ${animationName} {\n        from {background-color: ${prevElem};}\n        to {background-color: ${postElem};}\n    }`;\n    styleSheet.insertRule(keyframes, styleSheet.cssRules.length);\n    this.setState({\n      animation: animationName,\n    });\n  }\n\n  render() {\n    const { animation } = this.state;\n    const styles = {\n      animationName: animation,\n      animationDuration: '1s',\n    };\n    return (\n      <div className=\"slider-container\">\n        <div className=\"slider\" style={styles} />\n        <div className=\"search-box-container\">\n          <Input placeholder=\"Enter a Keyword\" iconName=\"Search\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Slider;\n"]},"metadata":{},"sourceType":"module"}