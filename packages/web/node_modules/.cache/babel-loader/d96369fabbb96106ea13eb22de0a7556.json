{"ast":null,"code":"/* global document */\nexport default {\n  get: function get(cookie) {\n    var chk = \"\".concat(cookie.trim(), \"=\");\n    var cookies = document.cookie.split(';');\n    var r = cookies.find(function (c) {\n      return c.trim().indexOf(chk) === 0;\n    });\n\n    if (!r) {\n      return null;\n    }\n\n    var res = r.trim().substr(chk.length);\n    return res;\n  },\n  set: function set(cookie, value) {\n    document.cookie = \"\".concat(cookie.trim(), \"=\").concat(value);\n  },\n  clear: function clear(cookie) {\n    document.cookie = \"\".concat(cookie.trim, \"= ;expires=\").concat(new Date(Date.now() - 1).toUTCString());\n  }\n};","map":{"version":3,"sources":["/home/bhagya/workspace/reactjs/projects/probro/packages/web/src/redux/account/cookies.js"],"names":["get","cookie","chk","trim","cookies","document","split","r","find","c","indexOf","res","substr","length","set","value","clear","Date","now","toUTCString"],"mappings":"AAAA;AAEA,eAAe;AACbA,EAAAA,GAAG,EAAE,aAACC,MAAD,EAAY;AACf,QAAMC,GAAG,aAAMD,MAAM,CAACE,IAAP,EAAN,MAAT;AACA,QAAMC,OAAO,GAAGC,QAAQ,CAACJ,MAAT,CAAgBK,KAAhB,CAAsB,GAAtB,CAAhB;AACA,QAAMC,CAAC,GAAGH,OAAO,CAACI,IAAR,CAAa,UAAAC,CAAC;AAAA,aAAIA,CAAC,CAACN,IAAF,GAASO,OAAT,CAAiBR,GAAjB,MAA0B,CAA9B;AAAA,KAAd,CAAV;;AAEA,QAAI,CAACK,CAAL,EAAQ;AACN,aAAO,IAAP;AACD;;AAED,QAAMI,GAAG,GAAGJ,CAAC,CAACJ,IAAF,GAASS,MAAT,CAAgBV,GAAG,CAACW,MAApB,CAAZ;AACA,WAAOF,GAAP;AACD,GAZY;AAcbG,EAAAA,GAAG,EAAE,aAACb,MAAD,EAASc,KAAT,EAAmB;AACtBV,IAAAA,QAAQ,CAACJ,MAAT,aAAqBA,MAAM,CAACE,IAAP,EAArB,cAAsCY,KAAtC;AACD,GAhBY;AAkBbC,EAAAA,KAAK,EAAE,eAACf,MAAD,EAAY;AACjBI,IAAAA,QAAQ,CAACJ,MAAT,aAAqBA,MAAM,CAACE,IAA5B,wBAA+C,IAAIc,IAAJ,CAASA,IAAI,CAACC,GAAL,KAAa,CAAtB,CAAD,CAA2BC,WAA3B,EAA9C;AACD;AApBY,CAAf","sourcesContent":["/* global document */\n\nexport default {\n  get: (cookie) => {\n    const chk = `${cookie.trim()}=`;\n    const cookies = document.cookie.split(';');\n    const r = cookies.find(c => c.trim().indexOf(chk) === 0);\n\n    if (!r) {\n      return null;\n    }\n\n    const res = r.trim().substr(chk.length);\n    return res;\n  },\n\n  set: (cookie, value) => {\n    document.cookie = `${cookie.trim()}=${value}`;\n  },\n\n  clear: (cookie) => {\n    document.cookie = `${cookie.trim}= ;expires=${(new Date(Date.now() - 1)).toUTCString()}`;\n  },\n};\n"]},"metadata":{},"sourceType":"module"}