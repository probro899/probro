{"ast":null,"code":"import _classCallCheck from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Nabin/workspace/probro/packages/web/src/common/ClassComponents/ToolBar.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Button } from '@blueprintjs/core';\n\nvar ToolBar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ToolBar, _React$Component);\n\n  function ToolBar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ToolBar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ToolBar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(ToolBar, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          boards = _this$props.boards,\n          boardId = _this$props.boardId;\n      return React.createElement(\"div\", {\n        className: \"tool-bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"toolbar-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"left-tools\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, boards.allIds.map(function (id) {\n        if (id === boardId) {\n          return React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 18\n            },\n            __self: this\n          }, \"boards.byId[id].name\");\n        }\n      })), React.createElement(\"div\", {\n        className: \"right-tools\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(Button, {\n        icon: \"plus\",\n        text: \"Add User\",\n        minimal: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return ToolBar;\n}(React.Component);\n\nToolBar.propTypes = {\n  boards: PropTypes.objectOf(PropTypes.any).isRequired,\n  boardId: PropTypes.number.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var database = state.database;\n  var boards = database.Board;\n  return {\n    boards: boards\n  };\n};\n\nexport default connect(mapStateToProps)(ToolBar);","map":{"version":3,"sources":["/Users/Nabin/workspace/probro/packages/web/src/common/ClassComponents/ToolBar.js"],"names":["React","PropTypes","connect","Button","ToolBar","state","props","boards","boardId","allIds","map","id","Component","propTypes","objectOf","any","isRequired","number","mapStateToProps","database","Board"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,QAAuB,mBAAvB;;IAEMC,O;;;;;;;;;;;;;;;;;UACJC,K,GAAQ,E;;;;;;6BAEC;AAAA,wBACqB,KAAKC,KAD1B;AAAA,UACCC,MADD,eACCA,MADD;AAAA,UACSC,OADT,eACSA,OADT;AAEP,aACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEID,MAAM,CAACE,MAAP,CAAcC,GAAd,CAAkB,UAACC,EAAD,EAAQ;AACxB,YAAIA,EAAE,KAAKH,OAAX,EAAoB;AAClB,iBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAAP;AACD;AACF,OAJD,CAFJ,CADF,EAUE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,OAAO,MAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAVF,CADF,CADF;AAsBD;;;;EA3BmBR,KAAK,CAACY,S;;AA6B5BR,OAAO,CAACS,SAAR,GAAoB;AAClBN,EAAAA,MAAM,EAAEN,SAAS,CAACa,QAAV,CAAmBb,SAAS,CAACc,GAA7B,EAAkCC,UADxB;AAElBR,EAAAA,OAAO,EAAEP,SAAS,CAACgB,MAAV,CAAiBD;AAFR,CAApB;;AAKA,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAACb,KAAD,EAAW;AAAA,MACzBc,QADyB,GACZd,KADY,CACzBc,QADyB;AAEjC,MAAMZ,MAAM,GAAGY,QAAQ,CAACC,KAAxB;AACA,SAAO;AACLb,IAAAA,MAAM,EAANA;AADK,GAAP;AAGD,CAND;;AAOA,eAAeL,OAAO,CAACgB,eAAD,CAAP,CAAyBd,OAAzB,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Button } from '@blueprintjs/core';\n\nclass ToolBar extends React.Component {\n  state = {};\n\n  render() {\n    const { boards, boardId } = this.props;\n    return (\n      <div className=\"tool-bar\">\n        <div className=\"toolbar-container\">\n          <div className=\"left-tools\">\n            {\n              boards.allIds.map((id) => {\n                if (id === boardId) {\n                  return <span>boards.byId[id].name</span>;\n                }\n              })\n            }\n          </div>\n          <div className=\"right-tools\">\n            <Button\n              icon=\"plus\"\n              text=\"Add User\"\n              minimal\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nToolBar.propTypes = {\n  boards: PropTypes.objectOf(PropTypes.any).isRequired,\n  boardId: PropTypes.number.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  const { database } = state;\n  const boards = database.Board;\n  return {\n    boards,\n  };\n};\nexport default connect(mapStateToProps)(ToolBar);\n"]},"metadata":{},"sourceType":"module"}