{"ast":null,"code":"import _regeneratorRuntime from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { UPDATE_FORM_VALUE } from './types';\nimport { registerFormHandler, loginFormHandler } from './helper-functions';\nexport var updateFormValue = function updateFormValue(schema, data) {\n  return {\n    type: UPDATE_FORM_VALUE,\n    payload: {\n      schema: schema,\n      data: data\n    }\n  };\n};\nexport var mainFormHandler = function mainFormHandler(schema) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch, getState) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.t0 = schema;\n                _context.next = _context.t0 === 'registerForm' ? 3 : _context.t0 === 'loginForm' ? 5 : 7;\n                break;\n\n              case 3:\n                registerFormHandler(dispatch, getState);\n                return _context.abrupt(\"break\", 8);\n\n              case 5:\n                loginFormHandler(dispatch, getState);\n                return _context.abrupt(\"break\", 8);\n\n              case 7:\n                return _context.abrupt(\"return\", null);\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/Users/Nabin/workspace/probro/packages/web/src/actions/formHandler.js"],"names":["UPDATE_FORM_VALUE","registerFormHandler","loginFormHandler","updateFormValue","schema","data","type","payload","mainFormHandler","dispatch","getState"],"mappings":";;AAAA,SAASA,iBAAT,QAAkC,SAAlC;AACA,SAASC,mBAAT,EAA8BC,gBAA9B,QAAsD,oBAAtD;AAEA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,MAAD,EAASC,IAAT;AAAA,SAC7B;AACEC,IAAAA,IAAI,EAAEN,iBADR;AAEEO,IAAAA,OAAO,EAAE;AAAEH,MAAAA,MAAM,EAANA,MAAF;AAAUC,MAAAA,IAAI,EAAJA;AAAV;AAFX,GAD6B;AAAA,CAAxB;AAOP,OAAO,IAAMG,eAAe,GAAG,SAAlBA,eAAkB,CAACJ,MAAD,EAAY;AACzC;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,iBAAOK,QAAP,EAAiBC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,8BACGN,MADH;AAAA,gDAEE,cAFF,uBAKE,WALF;AAAA;;AAAA;AAGDH,gBAAAA,mBAAmB,CAACQ,QAAD,EAAWC,QAAX,CAAnB;AAHC;;AAAA;AAMDR,gBAAAA,gBAAgB,CAACO,QAAD,EAAWC,QAAX,CAAhB;AANC;;AAAA;AAAA,iDASM,IATN;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAYD,CAbM","sourcesContent":["import { UPDATE_FORM_VALUE } from './types';\nimport { registerFormHandler, loginFormHandler } from './helper-functions';\n\nexport const updateFormValue = (schema, data) => (\n  {\n    type: UPDATE_FORM_VALUE,\n    payload: { schema, data },\n  }\n);\n\nexport const mainFormHandler = (schema) => {\n  return async (dispatch, getState) => {\n    switch (schema) {\n      case 'registerForm':\n        registerFormHandler(dispatch, getState);\n        break;\n      case 'loginForm':\n        loginFormHandler(dispatch, getState);\n        break;\n      default:\n        return null;\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}