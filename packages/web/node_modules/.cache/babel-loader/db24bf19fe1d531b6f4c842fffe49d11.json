{"ast":null,"code":"import _defineProperty from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Nabin/workspace/probro/packages/web/src/screens/users/components/Classes.js\";\nimport React, { Component } from 'react';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { Column } from '../../../common/ClassComponents';\nvar initialData = {\n  tasks: {\n    'task-1': {\n      id: 'task-1',\n      content: 'Take out the garbage'\n    },\n    'task-2': {\n      id: 'task-2',\n      content: 'Wash clothes'\n    },\n    'task-3': {\n      id: 'task-3',\n      content: 'Cook your food'\n    },\n    'task-4': {\n      id: 'task-4',\n      content: 'Do proper class in a proper way'\n    },\n    'task-5': {\n      id: 'task-5',\n      content: 'Deadline is coming'\n    }\n  },\n  columns: {\n    'column-1': {\n      id: 'column-1',\n      title: 'todo',\n      taskIds: ['task-1', 'task-2', 'task-3', 'task-4', 'task-5']\n    },\n    'column-2': {\n      id: 'column-2',\n      title: 'Progress',\n      taskIds: []\n    },\n    'column-3': {\n      id: 'column-3',\n      title: 'Done',\n      taskIds: []\n    }\n  },\n  columnOrder: ['column-1', 'column-2', 'column-3']\n};\n\nvar Classes =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Classes, _Component);\n\n  function Classes() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Classes);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Classes)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = initialData;\n\n    _this.onDragEnd = function (result) {\n      var source = result.source,\n          destination = result.destination,\n          draggableId = result.draggableId;\n      var columns = _this.state.columns;\n\n      if (!destination) {\n        return;\n      }\n\n      var dropColumn = columns[source.droppableId];\n      var newTaskIds = Array.from(dropColumn.taskIds);\n      newTaskIds.splice(source.index, 1);\n      newTaskIds.splice(destination.index, 0, draggableId);\n\n      var newColumn = _objectSpread({}, dropColumn, {\n        taskIds: newTaskIds\n      });\n\n      var newState = _objectSpread({}, _this.state, {\n        columns: _objectSpread({}, columns, _defineProperty({}, newColumn.id, newColumn))\n      });\n\n      _this.setState(newState);\n    };\n\n    return _this;\n  }\n\n  _createClass(Classes, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          tasks = _this$state.tasks,\n          columns = _this$state.columns,\n          columnOrder = _this$state.columnOrder;\n      return React.createElement(\"div\", {\n        className: \"classes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        style: {\n          fontSize: '25px',\n          fontWeight: 500\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Classes\")), React.createElement(DragDropContext, {\n        onDragEnd: this.onDragEnd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, columnOrder.map(function (columnId) {\n        var column = columns[columnId];\n        var allTask = column.taskIds.map(function (taskId) {\n          return tasks[taskId];\n        });\n        return React.createElement(Column, {\n          key: column.id,\n          column: column,\n          tasks: allTask,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        });\n      }))));\n    }\n  }]);\n\n  return Classes;\n}(Component);\n\nexport default Classes;","map":{"version":3,"sources":["/Users/Nabin/workspace/probro/packages/web/src/screens/users/components/Classes.js"],"names":["React","Component","DragDropContext","Column","initialData","tasks","id","content","columns","title","taskIds","columnOrder","Classes","state","onDragEnd","result","source","destination","draggableId","dropColumn","droppableId","newTaskIds","Array","from","splice","index","newColumn","newState","setState","fontSize","fontWeight","map","columnId","column","allTask","taskId"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { Column } from '../../../common/ClassComponents';\n\nconst initialData = {\n  tasks: {\n    'task-1': { id: 'task-1', content: 'Take out the garbage' },\n    'task-2': { id: 'task-2', content: 'Wash clothes' },\n    'task-3': { id: 'task-3', content: 'Cook your food' },\n    'task-4': { id: 'task-4', content: 'Do proper class in a proper way' },\n    'task-5': { id: 'task-5', content: 'Deadline is coming' },\n  },\n  columns: {\n    'column-1': {\n      id: 'column-1',\n      title: 'todo',\n      taskIds: ['task-1', 'task-2', 'task-3', 'task-4', 'task-5'],\n    },\n    'column-2': {\n      id: 'column-2',\n      title: 'Progress',\n      taskIds: [],\n    },\n    'column-3': {\n      id: 'column-3',\n      title: 'Done',\n      taskIds: [],\n    },\n  },\n  columnOrder: ['column-1', 'column-2', 'column-3'],\n};\n\nclass Classes extends Component {\n  state = initialData;\n\n  onDragEnd = (result) => {\n    const { source, destination, draggableId } = result;\n    const { columns } = this.state;\n    if (!destination) {\n      return;\n    }\n    const dropColumn = columns[source.droppableId];\n    const newTaskIds = Array.from(dropColumn.taskIds);\n    newTaskIds.splice(source.index, 1);\n    newTaskIds.splice(destination.index, 0, draggableId);\n    const newColumn = {\n      ...dropColumn,\n      taskIds: newTaskIds,\n    };\n    const newState = {\n      ...this.state,\n      columns: {\n        ...columns,\n        [newColumn.id]: newColumn,\n      },\n    };\n    this.setState(newState);\n  }\n\n  render() {\n    const { tasks, columns, columnOrder } = this.state;\n    return (\n      <div className=\"classes\">\n        <div>\n          <span style={{ fontSize: '25px', fontWeight: 500 }}>\n            Classes\n          </span>\n        </div>\n        <DragDropContext\n          onDragEnd={this.onDragEnd}\n        >\n          <div className=\"columns\">\n            {\n              columnOrder.map((columnId) => {\n                const column = columns[columnId];\n                const allTask = column.taskIds.map(taskId => tasks[taskId]);\n                return (\n                  <Column\n                    key={column.id}\n                    column={column}\n                    tasks={allTask}\n                  />\n                );\n              })\n            }\n          </div>\n        </DragDropContext>\n      </div>\n    );\n  }\n}\n\nexport default Classes;\n"]},"metadata":{},"sourceType":"module"}