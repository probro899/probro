{"ast":null,"code":"import _classCallCheck from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Nabin/workspace/probro/packages/web/src/screens/home/component/slider.js\";\nimport React, { Component } from 'react';\nimport { Input } from '../../../common';\nvar elems = ['red', 'blue', 'yellow', 'green'];\nvar background = 1;\n\nvar Slider =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Slider, _Component);\n\n  function Slider() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Slider);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Slider)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      animationName: [],\n      animationIndex: 0,\n      search: ''\n    };\n\n    _this.changeBackGround = function () {\n      _this.changeBackGroundElem();\n\n      var animationIndex = _this.state.animationIndex;\n\n      if (animationIndex === elems.length - 1) {\n        _this.setState({\n          animationIndex: 0\n        });\n      } else {\n        _this.setState({\n          animationIndex: animationIndex + 1\n        });\n      }\n    };\n\n    _this.changeBackGroundElem = function () {\n      background += 1;\n\n      if (background === elems.length) {\n        background = 0;\n      }\n    };\n\n    _this.searchChange = function (val) {\n      console.log(val, 'fuck');\n\n      _this.setState({\n        search: val\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Slider, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var styleSheet = document.styleSheets[0]; //eslint-disable-line\n\n      var animations = [];\n      var i = 0;\n\n      for (i; i < elems.length - 1; i += 1) {\n        var animationName = \"slider\".concat(Math.round(Math.random() * 100));\n        var keyframes = \"@keyframes \".concat(animationName, \" {\\n        from {background-color: \").concat(elems[i], \";}\\n        to {background-color: \").concat(elems[i + 1], \";}\\n      }\");\n        styleSheet.insertRule(keyframes, styleSheet.cssRules.length);\n        animations.push(animationName);\n      }\n\n      if (i === elems.length - 1) {\n        var _animationName = \"slider\".concat(Math.round(Math.random() * 100));\n\n        var _keyframes = \"@keyframes \".concat(_animationName, \" {\\n        from {background-color: \").concat(elems[i], \";}\\n        to {background-color: \").concat(elems[0], \";}\\n      }\");\n\n        styleSheet.insertRule(_keyframes, styleSheet.cssRules.length);\n        animations.push(_animationName);\n      }\n\n      this.setState({\n        animationName: animations\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        timer: setInterval(this.changeBackGround, 5000)\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var timer = this.state.timer;\n      clearInterval(timer);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          animationName = _this$state.animationName,\n          animationIndex = _this$state.animationIndex,\n          search = _this$state.search;\n      var styles = {\n        animationName: animationName[animationIndex],\n        animationDuration: '3s',\n        backgroundColor: elems[background]\n      };\n      var data = {\n        id: 'search',\n        fieldtype: 'input',\n        placeholder: 'Eg, ........',\n        icon: {\n          side: 'left',\n          name: 'search'\n        }\n      };\n      return React.createElement(\"div\", {\n        className: \"slider-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"slider\",\n        style: styles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"search-box-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Input, {\n        data: data,\n        value: search,\n        onChange: this.searchChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Slider;\n}(Component);\n\nexport default Slider;","map":{"version":3,"sources":["/Users/Nabin/workspace/probro/packages/web/src/screens/home/component/slider.js"],"names":["React","Component","Input","elems","background","Slider","state","animationName","animationIndex","search","changeBackGround","changeBackGroundElem","length","setState","searchChange","val","console","log","styleSheet","document","styleSheets","animations","i","Math","round","random","keyframes","insertRule","cssRules","push","timer","setInterval","clearInterval","styles","animationDuration","backgroundColor","data","id","fieldtype","placeholder","icon","side","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Input } from '../../../common';\n\nconst elems = ['red', 'blue', 'yellow', 'green'];\nlet background = 1;\nclass Slider extends Component {\n  state = {\n    animationName: [],\n    animationIndex: 0,\n    search: '',\n  };\n\n  componentWillMount() {\n    const styleSheet = document.styleSheets[0]; //eslint-disable-line\n    const animations = [];\n    let i = 0;\n    for (i; i < elems.length - 1; i += 1) {\n      const animationName = `slider${Math.round(Math.random() * 100)}`;\n      const keyframes = `@keyframes ${animationName} {\n        from {background-color: ${elems[i]};}\n        to {background-color: ${elems[i + 1]};}\n      }`;\n      styleSheet.insertRule(keyframes, styleSheet.cssRules.length);\n      animations.push(animationName);\n    }\n    if (i === elems.length - 1) {\n      const animationName = `slider${Math.round(Math.random() * 100)}`;\n      const keyframes = `@keyframes ${animationName} {\n        from {background-color: ${elems[i]};}\n        to {background-color: ${elems[0]};}\n      }`;\n      styleSheet.insertRule(keyframes, styleSheet.cssRules.length);\n      animations.push(animationName);\n    }\n    this.setState({ animationName: animations });\n  }\n\n  componentDidMount() {\n    this.setState({ timer: setInterval(this.changeBackGround, 5000) });\n  }\n\n  componentWillUnmount() {\n    const { timer } = this.state;\n    clearInterval(timer);\n  }\n\n  changeBackGround = () => {\n    this.changeBackGroundElem();\n    const { animationIndex } = this.state;\n\n    if (animationIndex === elems.length - 1) {\n      this.setState({ animationIndex: 0 });\n    } else {\n      this.setState({ animationIndex: animationIndex + 1 });\n    }\n  }\n\n  changeBackGroundElem = () => {\n    background += 1;\n    if (background === elems.length) {\n      background = 0;\n    }\n  }\n\n  searchChange = (val) => {\n    console.log(val,'fuck');\n    this.setState({ search: val });\n  }\n\n  render() {\n    const { animationName, animationIndex, search } = this.state;\n    const styles = {\n      animationName: animationName[animationIndex],\n      animationDuration: '3s',\n      backgroundColor: elems[background],\n    };\n    const data = {\n      id: 'search',\n      fieldtype: 'input',\n      placeholder: 'Eg, ........',\n      icon: {\n        side: 'left',\n        name: 'search',\n      },\n    };\n    return (\n      <div className=\"slider-container\">\n        <div className=\"slider\" style={styles} />\n        <div className=\"search-box-container\">\n          <Input data={data} value={search} onChange={this.searchChange} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Slider;\n"]},"metadata":{},"sourceType":"module"}