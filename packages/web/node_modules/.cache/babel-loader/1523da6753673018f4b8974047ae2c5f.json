{"ast":null,"code":"var _jsxFileName = \"/Users/Nabin/workspace/probro/packages/web/src/common/Button.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Intent, Spinner, Label } from '@blueprintjs/core';\n\nvar CustomButton = function CustomButton(props) {\n  var onSubmit = props.onSubmit,\n      data = props.data,\n      state = props.state;\n  return React.createElement(\"div\", {\n    className: \"btn-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      flexWrap: 'wrap',\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, state.loading && React.createElement(Spinner, {\n    intent: Intent.PRIMARY,\n    size: 40,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }), state.error && React.createElement(Label, {\n    style: {\n      fontSize: 16,\n      color: 'red'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, state.error)), React.createElement(Button, Object.assign({\n    fill: true,\n    large: true,\n    onClick: onSubmit,\n    disabled: state.loading\n  }, data, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  })));\n};\n\nCustomButton.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  state: PropTypes.objectOf(PropTypes.any).isRequired,\n  data: PropTypes.objectOf(PropTypes.any).isRequired\n};\nexport default CustomButton;","map":{"version":3,"sources":["/Users/Nabin/workspace/probro/packages/web/src/common/Button.js"],"names":["React","PropTypes","Button","Intent","Spinner","Label","CustomButton","props","onSubmit","data","state","display","justifyContent","flexWrap","alignItems","loading","PRIMARY","error","fontSize","color","propTypes","func","isRequired","objectOf","any"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,OAAzB,EAAkCC,KAAlC,QAA+C,mBAA/C;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAAA,MACtBC,QADsB,GACID,KADJ,CACtBC,QADsB;AAAA,MACZC,IADY,GACIF,KADJ,CACZE,IADY;AAAA,MACNC,KADM,GACIH,KADJ,CACNG,KADM;AAG9B,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,cAAc,EAAE,QAAnC;AAA6CC,MAAAA,QAAQ,EAAE,MAAvD;AAA+DC,MAAAA,UAAU,EAAE;AAA3E,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,KAAK,CAACK,OAAN,IAAiB,oBAAC,OAAD;AAAS,IAAA,MAAM,EAAEZ,MAAM,CAACa,OAAxB;AAAiC,IAAA,IAAI,EAAE,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADpB,EAEGN,KAAK,CAACO,KAAN,IAAe,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE,EAAZ;AAAgBC,MAAAA,KAAK,EAAE;AAAvB,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+CT,KAAK,CAACO,KAArD,CAFlB,CADF,EAKE,oBAAC,MAAD;AACE,IAAA,IAAI,MADN;AAEE,IAAA,KAAK,MAFP;AAGE,IAAA,OAAO,EAAET,QAHX;AAIE,IAAA,QAAQ,EAAEE,KAAK,CAACK;AAJlB,KAKMN,IALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KALF,CADF;AAeD,CAlBD;;AAoBAH,YAAY,CAACc,SAAb,GAAyB;AACvBZ,EAAAA,QAAQ,EAAEP,SAAS,CAACoB,IAAV,CAAeC,UADF;AAEvBZ,EAAAA,KAAK,EAAET,SAAS,CAACsB,QAAV,CAAmBtB,SAAS,CAACuB,GAA7B,EAAkCF,UAFlB;AAGvBb,EAAAA,IAAI,EAAER,SAAS,CAACsB,QAAV,CAAmBtB,SAAS,CAACuB,GAA7B,EAAkCF;AAHjB,CAAzB;AAKA,eAAehB,YAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Intent, Spinner, Label } from '@blueprintjs/core';\n\nconst CustomButton = (props) => {\n  const { onSubmit, data, state } = props;\n\n  return (\n    <div className=\"btn-group\">\n      <div style={{ display: 'flex', justifyContent: 'center', flexWrap: 'wrap', alignItems: 'center' }}>\n        {state.loading && <Spinner intent={Intent.PRIMARY} size={40} /> }\n        {state.error && <Label style={{ fontSize: 16, color: 'red' }}>{state.error}</Label>}\n      </div>\n      <Button\n        fill\n        large\n        onClick={onSubmit}\n        disabled={state.loading}\n        {...data}\n      />\n    </div>\n  );\n};\n\nCustomButton.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  state: PropTypes.objectOf(PropTypes.any).isRequired,\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n};\nexport default CustomButton;\n"]},"metadata":{},"sourceType":"module"}