{"ast":null,"code":"import _regeneratorRuntime from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport { updateMainValue } from '../index';\nimport { ENDPOINT } from '../../config';\nexport default\n/*#__PURE__*/\n(function () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(dispatch, getState) {\n    var token, res, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            token = sessionStorage.getItem('SESSION_ID');\n            _context.prev = 1;\n            _context.next = 4;\n            return axios.get(\"\".concat(ENDPOINT, \"/web/fetch-initial-data?token=\").concat(token));\n\n          case 4:\n            res = _context.sent;\n            dispatch(updateMainValue('user', _objectSpread({}, data)));\n            data = res.data;\n\n            if (res.status === 200 && data.token) {\n              dispatch(updateMainValue('user', _objectSpread({}, data)));\n            }\n\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](1);\n            console.log('Error!');\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this, [[1, 10]]);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n})();","map":{"version":3,"sources":["/Users/Nabin/workspace/probro/packages/web/src/actions/helper-functions/fetchUserCredentials.js"],"names":["axios","updateMainValue","ENDPOINT","dispatch","getState","token","sessionStorage","getItem","get","res","data","status","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,UAAhC;AACA,SAASC,QAAT,QAAyB,cAAzB;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAe,iBAAOC,QAAP,EAAiBC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AACPC,YAAAA,KADO,GACCC,cAAc,CAACC,OAAf,CAAuB,YAAvB,CADD;AAAA;AAAA;AAAA,mBAGOP,KAAK,CAACQ,GAAN,WAAaN,QAAb,2CAAsDG,KAAtD,EAHP;;AAAA;AAGLI,YAAAA,GAHK;AAIXN,YAAAA,QAAQ,CAACF,eAAe,CAAC,MAAD,oBAAcS,IAAd,EAAhB,CAAR;AACQA,YAAAA,IALG,GAKMD,GALN,CAKHC,IALG;;AAMX,gBAAID,GAAG,CAACE,MAAJ,KAAe,GAAf,IAAsBD,IAAI,CAACL,KAA/B,EAAsC;AACpCF,cAAAA,QAAQ,CAACF,eAAe,CAAC,MAAD,oBAAcS,IAAd,EAAhB,CAAR;AACD;;AARU;AAAA;;AAAA;AAAA;AAAA;AAUXE,YAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;;AAVW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAf;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import axios from 'axios';\nimport { updateMainValue } from '../index';\nimport { ENDPOINT } from '../../config';\n\nexport default async (dispatch, getState) => {\n  const token = sessionStorage.getItem('SESSION_ID');\n  try {\n    const res = await axios.get(`${ENDPOINT}/web/fetch-initial-data?token=${token}`);\n    dispatch(updateMainValue('user', { ...data }));\n    const { data } = res;\n    if (res.status === 200 && data.token) {\n      dispatch(updateMainValue('user', { ...data }));\n    }\n  } catch {\n    console.log('Error!');\n  }\n};\n"]},"metadata":{},"sourceType":"module"}