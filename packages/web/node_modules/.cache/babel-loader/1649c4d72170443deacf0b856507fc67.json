{"ast":null,"code":"import _regeneratorRuntime from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Nabin/workspace/probro/packages/web/src/common/ClassComponents/Column.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport Task from './Task';\nimport NewTask from './NewTask';\nimport sorting from '../../screens/users/utility-functions';\nimport { MoreButton } from '../../components';\n\nvar Column =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Column, _Component);\n\n  function Column() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Column);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Column)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {};\n\n    _this.onMore =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(action, id) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log(action, id);\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(Column, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          column = _this$props.column,\n          columnId = _this$props.columnId,\n          index = _this$props.index,\n          tasks = _this$props.tasks;\n      return React.createElement(Draggable, {\n        draggableId: \"\".concat(column.id),\n        index: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, function (provided) {\n        return React.createElement(\"div\", Object.assign({\n          className: \"column-container\",\n          ref: provided.innerRef\n        }, provided.draggableProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"column-inner-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, React.createElement(\"div\", Object.assign({\n          className: \"column-title\"\n        }, provided.dragHandleProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }), React.createElement(MoreButton, {\n          id: columnId,\n          onMore: _this2.onMore,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, column.name)), React.createElement(Droppable, {\n          droppableId: \"\".concat(column.id),\n          type: \"task\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, function (provided) {\n          return React.createElement(\"div\", Object.assign({\n            className: \"task-list\",\n            ref: provided.innerRef\n          }, provided.droppableProps, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          }), tasks.sort(sorting).map(function (obj, index) {\n            if (obj.boardColumnId === columnId) {\n              var task = obj;\n              return React.createElement(Task, {\n                key: task.id,\n                task: task,\n                index: index,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 58\n                },\n                __self: this\n              });\n            }\n          }), provided.placeholder);\n        }), provided.placeholder, React.createElement(NewTask, {\n          columnId: column.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        })));\n      });\n    }\n  }]);\n\n  return Column;\n}(Component);\n\nColumn.propTypes = {\n  column: PropTypes.objectOf(PropTypes.any).isRequired,\n  tasks: PropTypes.arrayOf(PropTypes.any).isRequired,\n  index: PropTypes.number.isRequired,\n  columnId: PropTypes.number.isRequired\n};\nexport default Column;","map":{"version":3,"sources":["/Users/Nabin/workspace/probro/packages/web/src/common/ClassComponents/Column.js"],"names":["React","Component","PropTypes","Droppable","Draggable","Task","NewTask","sorting","MoreButton","Column","state","onMore","action","id","console","log","props","column","columnId","index","tasks","provided","innerRef","draggableProps","dragHandleProps","name","droppableProps","sort","map","obj","boardColumnId","task","placeholder","propTypes","objectOf","any","isRequired","arrayOf","number"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport Task from './Task';\nimport NewTask from './NewTask';\nimport sorting from '../../screens/users/utility-functions';\nimport { MoreButton } from '../../components';\n\nclass Column extends Component {\n  state = {};\n\n  // this is more button handle function\n  onMore = async (action, id) => {\n    console.log(action, id);\n  }\n\n  render() {\n    const {\n      column,\n      columnId,\n      index,\n      tasks,\n    } = this.props;\n    return (\n      <Draggable\n        draggableId={`${column.id}`}\n        index={index}\n      >\n        {provided => (\n          <div\n            className=\"column-container\"\n            ref={provided.innerRef}\n            {...provided.draggableProps}\n          >\n            <div className=\"column-inner-container\">\n              <div\n                className=\"column-title\"\n                {...provided.dragHandleProps}\n              >\n                <MoreButton id={columnId} onMore={this.onMore} />\n                <span>\n                  {column.name}\n                </span>\n              </div>\n              <Droppable\n                droppableId={`${column.id}`}\n                type=\"task\"\n              >\n                {provided => (\n                  <div\n                    className=\"task-list\"\n                    ref={provided.innerRef}\n                    {...provided.droppableProps}\n                  >\n                    {tasks.sort(sorting).map((obj, index) => {\n                      if (obj.boardColumnId === columnId) {\n                        const task = obj;\n                        return <Task key={task.id} task={task} index={index} />;\n                      }\n                    })}\n                    {provided.placeholder}\n                  </div>\n                )}\n              </Droppable>\n              {provided.placeholder}\n              <NewTask columnId={column.id} />\n            </div>\n          </div>\n        )}\n      </Draggable>\n    );\n  }\n}\n\nColumn.propTypes = {\n  column: PropTypes.objectOf(PropTypes.any).isRequired,\n  tasks: PropTypes.arrayOf(PropTypes.any).isRequired,\n  index: PropTypes.number.isRequired,\n  columnId: PropTypes.number.isRequired,\n};\n\nexport default Column;\n"]},"metadata":{},"sourceType":"module"}