{"ast":null,"code":"import _regeneratorRuntime from \"/home/bhagya/workspace/reactjs/projects/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/bhagya/workspace/reactjs/projects/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { onIceConnectionStateChange } from '../common';\n\nfunction gotRemoteStream(e) {\n  var videoElement = document.getElementById('video1');\n\n  if (videoElement.srcObject !== e.streams[0]) {\n    videoElement.srcObject = e.streams[0];\n  }\n}\n\nvar mediaSelector =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(mediaType) {\n    var stream;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            stream = null;\n            _context.t0 = mediaType;\n            _context.next = _context.t0 === 'audio' ? 4 : _context.t0 === 'video' ? 6 : _context.t0 === 'screenshare' ? 10 : 14;\n            break;\n\n          case 4:\n            try {\n              navigator.getWebcam = navigator.getUserMedia || navigator.webKitGetUserMedia || navigator.moxGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;\n\n              if (navigator.mediaDevices.getUserMedia) {\n                stream = navigator.mediaDevices.getUserMedia({\n                  audio: true,\n                  video: true\n                });\n              } else {\n                stream = navigator.getWebcam({\n                  audio: true,\n                  video: true\n                });\n              }\n            } catch (e) {\n              console.log('getUSermeida error', e);\n            }\n\n            return _context.abrupt(\"return\", stream);\n\n          case 6:\n            _context.next = 8;\n            return navigator.mediaDevices.getUserMedia({\n              video: true,\n              audio: true\n            });\n\n          case 8:\n            stream = _context.sent;\n            return _context.abrupt(\"return\", stream);\n\n          case 10:\n            _context.next = 12;\n            return navigator.mediaDevices.getDisplayMedia({\n              video: true\n            });\n\n          case 12:\n            stream = _context.sent;\n            return _context.abrupt(\"return\", stream);\n\n          case 14:\n            return _context.abrupt(\"return\", stream);\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function mediaSelector(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default\n/*#__PURE__*/\n(function () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee4(onIceCandidateHandler) {\n    var server, offerOptions, pc, setLocalDescription, addCandidate, setRemoteDescription, createOffer, createAnswer, addIceCandidate;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            // server configuration\n            server = null;\n            offerOptions = {\n              offerToRecieveAudio: 1,\n              offerToRecieveVideo: 1\n            }; // Initialize peerconnection\n            // eslint-disable-next-line\n\n            pc = new RTCPeerConnection(server); // Adding icecandidate listner\n\n            pc.addEventListener('icecandidate', onIceCandidateHandler); // Adding IceConnection State Change\n\n            pc.addEventListener('iceconnectionstatechange', function (e) {\n              return onIceConnectionStateChange(e, pc);\n            }); // Adding Ontrack listner\n\n            pc.addEventListener('track', gotRemoteStream); // setLocal Description\n\n            setLocalDescription = function setLocalDescription(data) {\n              pc.setLocalDescription(data);\n            };\n\n            addCandidate = function addCandidate(data) {\n              // eslint-disable-next-line\n              pc.addIceCandidate(new RTCIceCandidate(JSON.parse(data)));\n            }; // setRemote Description\n\n\n            setRemoteDescription = function setRemoteDescription(data) {\n              pc.setRemoteDescription(data);\n            }; // creating offer for list of users\n\n\n            createOffer =\n            /*#__PURE__*/\n            function () {\n              var _ref3 = _asyncToGenerator(\n              /*#__PURE__*/\n              _regeneratorRuntime.mark(function _callee2(mediaType) {\n                var stream, offer;\n                return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        _context2.next = 2;\n                        return mediaSelector(mediaType);\n\n                      case 2:\n                        stream = _context2.sent;\n                        stream.getTracks().forEach(function (track) {\n                          return pc.addTrack(track, stream);\n                        });\n                        _context2.next = 6;\n                        return pc.createOffer(offerOptions);\n\n                      case 6:\n                        offer = _context2.sent;\n                        setLocalDescription(offer);\n                        return _context2.abrupt(\"return\", offer);\n\n                      case 9:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2);\n              }));\n\n              return function createOffer(_x3) {\n                return _ref3.apply(this, arguments);\n              };\n            }(); // creating Answer for offer\n\n\n            createAnswer =\n            /*#__PURE__*/\n            function () {\n              var _ref4 = _asyncToGenerator(\n              /*#__PURE__*/\n              _regeneratorRuntime.mark(function _callee3(data, mediaType) {\n                var stream, answer;\n                return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        _context3.next = 2;\n                        return mediaSelector(mediaType);\n\n                      case 2:\n                        stream = _context3.sent;\n                        stream.getTracks().forEach(function (track) {\n                          return pc.addTrack(track, stream);\n                        });\n                        setRemoteDescription(data);\n                        _context3.next = 7;\n                        return pc.createAnswer();\n\n                      case 7:\n                        answer = _context3.sent;\n                        setLocalDescription(answer);\n                        return _context3.abrupt(\"return\", answer);\n\n                      case 10:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3);\n              }));\n\n              return function createAnswer(_x4, _x5) {\n                return _ref4.apply(this, arguments);\n              };\n            }(); // Add remoteIceCandidate\n\n\n            addIceCandidate = function addIceCandidate(candidate) {\n              // eslint-disable-next-line\n              pc.addIceCandidate(new RTCIceCandidate(JSON.parse(candidate)));\n            };\n\n            return _context4.abrupt(\"return\", {\n              pc: pc,\n              createOffer: createOffer,\n              createAnswer: createAnswer,\n              addIceCandidate: addIceCandidate,\n              setRemoteDescription: setRemoteDescription,\n              addCandidate: addCandidate\n            });\n\n          case 13:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function (_x2) {\n    return _ref2.apply(this, arguments);\n  };\n})();","map":{"version":3,"sources":["/home/bhagya/workspace/reactjs/projects/probro/packages/web/src/screens/users/components/communication/helper-functions/main/index.js"],"names":["onIceConnectionStateChange","gotRemoteStream","e","videoElement","document","getElementById","srcObject","streams","mediaSelector","mediaType","stream","navigator","getWebcam","getUserMedia","webKitGetUserMedia","moxGetUserMedia","mozGetUserMedia","msGetUserMedia","mediaDevices","audio","video","console","log","getDisplayMedia","onIceCandidateHandler","server","offerOptions","offerToRecieveAudio","offerToRecieveVideo","pc","RTCPeerConnection","addEventListener","setLocalDescription","data","addCandidate","addIceCandidate","RTCIceCandidate","JSON","parse","setRemoteDescription","createOffer","getTracks","forEach","track","addTrack","offer","createAnswer","answer","candidate"],"mappings":"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","sourcesContent":["import { onIceConnectionStateChange } from '../common';\n\nfunction gotRemoteStream(e) {\n  const videoElement = document.getElementById('video1');\n  if (videoElement.srcObject !== e.streams[0]) {\n    videoElement.srcObject = e.streams[0];\n  }\n}\n\nconst mediaSelector = async (mediaType) => {\n  let stream = null;\n\n  switch (mediaType) {\n    case 'audio':\n      try {\n        navigator.getWebcam = (navigator.getUserMedia || navigator.webKitGetUserMedia || navigator.moxGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia);\n        if (navigator.mediaDevices.getUserMedia) {\n          stream =  navigator.mediaDevices.getUserMedia({ audio: true, video: true });\n        } else {\n          stream =  navigator.getWebcam({ audio: true, video: true });\n        }\n      } catch (e) {\n        console.log('getUSermeida error', e);\n      }\n      return stream;\n    case 'video':\n      stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\n      return stream;\n    case 'screenshare':\n      stream = await navigator.mediaDevices.getDisplayMedia({ video: true });\n      return stream;\n    default:\n      return stream;\n  }\n};\n\nexport default async (onIceCandidateHandler) => {\n  // server configuration\n  const server = null;\n  const offerOptions = {\n    offerToRecieveAudio: 1,\n    offerToRecieveVideo: 1,\n  };\n  // Initialize peerconnection\n  // eslint-disable-next-line\n  const pc = new RTCPeerConnection(server);\n\n  // Adding icecandidate listner\n  pc.addEventListener('icecandidate', onIceCandidateHandler);\n\n  // Adding IceConnection State Change\n  pc.addEventListener('iceconnectionstatechange', e => onIceConnectionStateChange(e, pc));\n\n  // Adding Ontrack listner\n  pc.addEventListener('track', gotRemoteStream);\n\n  // setLocal Description\n  const setLocalDescription = (data) => {\n    pc.setLocalDescription(data);\n  };\n\n  const addCandidate = (data) => {\n    // eslint-disable-next-line\n    pc.addIceCandidate(new RTCIceCandidate(JSON.parse(data)));\n  };\n\n  // setRemote Description\n  const setRemoteDescription = (data) => {\n    pc.setRemoteDescription(data);\n  };\n\n  // creating offer for list of users\n  const createOffer = async (mediaType) => {\n    const stream = await mediaSelector(mediaType);\n    stream.getTracks().forEach(track => pc.addTrack(track, stream));\n    const offer = await pc.createOffer(offerOptions);\n    setLocalDescription(offer);\n    return offer;\n  };\n\n  // creating Answer for offer\n  const createAnswer = async (data, mediaType) => {\n    const stream = await mediaSelector(mediaType);\n    stream.getTracks().forEach(track => pc.addTrack(track, stream));\n    setRemoteDescription(data);\n    const answer = await pc.createAnswer();\n    setLocalDescription(answer);\n    return answer;\n  };\n\n  // Add remoteIceCandidate\n  const addIceCandidate = (candidate) => {\n    // eslint-disable-next-line\n    pc.addIceCandidate(new RTCIceCandidate(JSON.parse(candidate)));\n  };\n\n  return { pc, createOffer, createAnswer, addIceCandidate, setRemoteDescription, addCandidate };\n};\n"]},"metadata":{},"sourceType":"module"}