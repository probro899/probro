{"ast":null,"code":"var _jsxFileName = \"/Users/Nabin/workspace/probro/packages/web/src/common/Button.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Intent, Spinner, Label } from '@blueprintjs/core';\n\nvar CustomButton = function CustomButton(props) {\n  var onClick = props.onClick,\n      data = props.data;\n  return React.createElement(\"div\", {\n    className: \"btn-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(Button, Object.assign({\n    onClick: onClick\n  }, data, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  })));\n};\n\nCustomButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  schema: PropTypes.string.isRequired,\n  data: PropTypes.objectOf(PropTypes.any).isRequired\n};\nexport default CustomButton;","map":{"version":3,"sources":["/Users/Nabin/workspace/probro/packages/web/src/common/Button.js"],"names":["React","PropTypes","Button","Intent","Spinner","Label","CustomButton","props","onClick","data","propTypes","func","isRequired","schema","string","objectOf","any"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,OAAzB,EAAkCC,KAAlC,QAA+C,mBAA/C;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAAA,MACtBC,OADsB,GACJD,KADI,CACtBC,OADsB;AAAA,MACbC,IADa,GACJF,KADI,CACbE,IADa;AAG9B,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAcE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAED;AAAjB,KAA8BC,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAdF,CADF;AAkBD,CArBD;;AAuBAH,YAAY,CAACI,SAAb,GAAyB;AACvBF,EAAAA,OAAO,EAAEP,SAAS,CAACU,IAAV,CAAeC,UADD;AAEvBC,EAAAA,MAAM,EAAEZ,SAAS,CAACa,MAAV,CAAiBF,UAFF;AAGvBH,EAAAA,IAAI,EAAER,SAAS,CAACc,QAAV,CAAmBd,SAAS,CAACe,GAA7B,EAAkCJ;AAHjB,CAAzB;AAKA,eAAeN,YAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Intent, Spinner, Label } from '@blueprintjs/core';\n\nconst CustomButton = (props) => {\n  const { onClick, data } = props;\n  \n  return (\n    <div className=\"btn-group\">\n      {/* <div style={{ display: 'flex', justifyContent: 'center', flexWrap: 'wrap', alignItems: 'center' }}>\n        {form[schema].loading && <Spinner intent={Intent.PRIMARY} size={40} /> }\n        {form[schema].error && <Label style={{ fontSize: 16, color: 'red' }}>{form[schema].error}</Label>}\n      </div> */}\n      {/* <Button\n        text={text}\n        intent={Intent.PRIMARY}\n        fill\n        large\n        onClick={() => mainFormHandler(schema, apis)}\n        className={class_}\n        disabled={form[schema].loading}\n      /> */}\n      <Button onClick={onClick} {...data} />\n    </div>\n  );\n};\n\nCustomButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  schema: PropTypes.string.isRequired,\n  data: PropTypes.objectOf(PropTypes.any).isRequired,\n};\nexport default CustomButton;\n"]},"metadata":{},"sourceType":"module"}