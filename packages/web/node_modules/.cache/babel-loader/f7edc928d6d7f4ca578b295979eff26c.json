{"ast":null,"code":"import _classCallCheck from \"/home/bhagya/workspace/reactjs/projects/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bhagya/workspace/reactjs/projects/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/bhagya/workspace/reactjs/projects/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bhagya/workspace/reactjs/projects/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/bhagya/workspace/reactjs/projects/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/bhagya/workspace/reactjs/projects/probro/packages/web/src/common/NotifyBar.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Position, Toast, Toaster } from '@blueprintjs/core';\n\nvar NotifyBar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(NotifyBar, _React$Component);\n\n  function NotifyBar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NotifyBar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NotifyBar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      dismiss: false\n    };\n\n    _this.onDismiss = function () {\n      _this.setState({\n        dismiss: true\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(NotifyBar, [{\n    key: \"render\",\n    value: function render() {\n      var dismiss = this.state.dismiss;\n      var _this$props = this.props,\n          message = _this$props.message,\n          intent = _this$props.intent;\n      return React.createElement(Toaster, {\n        position: Position.TOP,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, !dismiss && React.createElement(Toast, {\n        message: message,\n        intent: intent,\n        onDismiss: this.onDismiss,\n        timeout: 500000,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return NotifyBar;\n}(React.Component);\n\nNotifyBar.propTypes = {\n  message: PropTypes.string.isRequired,\n  intent: PropTypes.string.isRequired\n};\nexport default NotifyBar;","map":{"version":3,"sources":["/home/bhagya/workspace/reactjs/projects/probro/packages/web/src/common/NotifyBar.js"],"names":["React","PropTypes","Position","Toast","Toaster","NotifyBar","state","dismiss","onDismiss","setState","props","message","intent","TOP","Component","propTypes","string","isRequired"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,EAAmBC,KAAnB,EAA0BC,OAA1B,QAAyC,mBAAzC;;IAEMC,S;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,OAAO,EAAE;AADH,K;;UAIRC,S,GAAY,YAAM;AAChB,YAAKC,QAAL,CAAc;AACZF,QAAAA,OAAO,EAAE;AADG,OAAd;AAGD,K;;;;;;;6BAEQ;AAAA,UACCA,OADD,GACa,KAAKD,KADlB,CACCC,OADD;AAAA,wBAEqB,KAAKG,KAF1B;AAAA,UAECC,OAFD,eAECA,OAFD;AAAA,UAEUC,MAFV,eAEUA,MAFV;AAGP,aACE,oBAAC,OAAD;AACE,QAAA,QAAQ,EAAEV,QAAQ,CAACW,GADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGI,CAACN,OAAD,IAEE,oBAAC,KAAD;AACE,QAAA,OAAO,EAAEI,OADX;AAEE,QAAA,MAAM,EAAEC,MAFV;AAGE,QAAA,SAAS,EAAE,KAAKJ,SAHlB;AAIE,QAAA,OAAO,EAAE,MAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALN,CADF;AAgBD;;;;EA9BqBR,KAAK,CAACc,S;;AAiC9BT,SAAS,CAACU,SAAV,GAAsB;AACpBJ,EAAAA,OAAO,EAAEV,SAAS,CAACe,MAAV,CAAiBC,UADN;AAEpBL,EAAAA,MAAM,EAAEX,SAAS,CAACe,MAAV,CAAiBC;AAFL,CAAtB;AAKA,eAAeZ,SAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Position, Toast, Toaster } from '@blueprintjs/core';\n\nclass NotifyBar extends React.Component {\n  state = {\n    dismiss: false,\n  };\n\n  onDismiss = () => {\n    this.setState({\n      dismiss: true,\n    });\n  }\n\n  render() {\n    const { dismiss } = this.state;\n    const { message, intent } = this.props;\n    return (\n      <Toaster\n        position={Position.TOP}\n      >\n        { !dismiss\n          && (\n            <Toast\n              message={message}\n              intent={intent}\n              onDismiss={this.onDismiss}\n              timeout={500000}\n            />\n          )\n        }\n      </Toaster>\n    );\n  }\n}\n\nNotifyBar.propTypes = {\n  message: PropTypes.string.isRequired,\n  intent: PropTypes.string.isRequired,\n};\n\nexport default NotifyBar;\n"]},"metadata":{},"sourceType":"module"}