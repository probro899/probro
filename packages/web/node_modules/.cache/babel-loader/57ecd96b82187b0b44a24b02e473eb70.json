{"ast":null,"code":"import _regeneratorRuntime from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport { ENDPOINT } from '../../../../config';\nimport connect from '../../../../socket/connect';\nexport default\n/*#__PURE__*/\n(function () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(args) {\n    var res, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return axios.post(\"\".concat(ENDPOINT, \"/auth/login\"), args);\n\n          case 2:\n            res = _context.sent;\n            data = res.data;\n\n            if (res.status === 200 && data.token) {\n              connect(data);\n            }\n\n            return _context.abrupt(\"return\", {\n              response: 200\n            });\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n})();","map":{"version":3,"sources":["/Users/Nabin/workspace/probro/packages/web/src/screens/home/auth/helper-functions/login.js"],"names":["axios","ENDPOINT","connect","args","post","res","data","status","token","response"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,OAAP,MAAoB,4BAApB;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAe,iBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACKH,KAAK,CAACI,IAAN,WAAcH,QAAd,kBAAqCE,IAArC,CADL;;AAAA;AACPE,YAAAA,GADO;AAELC,YAAAA,IAFK,GAEID,GAFJ,CAELC,IAFK;;AAGb,gBAAID,GAAG,CAACE,MAAJ,KAAe,GAAf,IAAsBD,IAAI,CAACE,KAA/B,EAAsC;AACpCN,cAAAA,OAAO,CAACI,IAAD,CAAP;AACD;;AALY,6CAMN;AAAEG,cAAAA,QAAQ,EAAE;AAAZ,aANM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAf;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import axios from 'axios';\nimport { ENDPOINT } from '../../../../config';\nimport connect from '../../../../socket/connect';\n\nexport default async (args) => {\n  const res = await axios.post(`${ENDPOINT}/auth/login`, args);\n  const { data } = res;\n  if (res.status === 200 && data.token) {\n    connect(data);\n  }\n  return { response: 200 };\n};\n"]},"metadata":{},"sourceType":"module"}