{"ast":null,"code":"import _defineProperty from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Nabin/workspace/probro/packages/web/src/common/ClassComponents/NewColumn.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nvar NewColumn =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NewColumn, _Component);\n\n  function NewColumn() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NewColumn);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NewColumn)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {};\n\n    _this.onClick = function () {\n      var _this$props = _this.props,\n          _class = _this$props._class,\n          updateClassValue = _this$props.updateClassValue;\n      var columns = _class.columns,\n          columnOrder = _class.columnOrder;\n      var colId = Math.random().toString(36).substring(7);\n\n      var newColumns = _objectSpread({}, columns, _defineProperty({}, colId, {\n        id: colId,\n        title: 'New Column',\n        taskIds: []\n      }));\n\n      columnOrder.push(colId);\n      updateClassValue('columns', newColumns);\n      updateClassValue('columnOrder', columnOrder);\n    };\n\n    return _this;\n  }\n\n  _createClass(NewColumn, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"add-new-column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        role: \"button\",\n        tabIndex: 0,\n        onKeyDown: this.onClick,\n        className: \"title\",\n        onClick: this.onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"+ New Column\")));\n    }\n  }]);\n\n  return NewColumn;\n}(Component);\n\nNewColumn.propTypes = {\n  _class: PropTypes.objectOf(PropTypes.any).isRequired,\n  updateClassValue: PropTypes.func.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return state;\n};\n\nexport default connect(mapStateToProps)(NewColumn);","map":{"version":3,"sources":["/Users/Nabin/workspace/probro/packages/web/src/common/ClassComponents/NewColumn.js"],"names":["React","Component","connect","PropTypes","NewColumn","state","onClick","props","_class","updateClassValue","columns","columnOrder","colId","Math","random","toString","substring","newColumns","id","title","taskIds","push","propTypes","objectOf","any","isRequired","func","mapStateToProps"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;IAEMC,S;;;;;;;;;;;;;;;;;UACJC,K,GAAQ,E;;UAERC,O,GAAU,YAAM;AAAA,wBACuB,MAAKC,KAD5B;AAAA,UACNC,MADM,eACNA,MADM;AAAA,UACEC,gBADF,eACEA,gBADF;AAAA,UAENC,OAFM,GAEmBF,MAFnB,CAENE,OAFM;AAAA,UAEGC,WAFH,GAEmBH,MAFnB,CAEGG,WAFH;AAGd,UAAMC,KAAK,GAAGC,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,SAA3B,CAAqC,CAArC,CAAd;;AACA,UAAMC,UAAU,qBACXP,OADW,sBAEbE,KAFa,EAEL;AAAEM,QAAAA,EAAE,EAAEN,KAAN;AAAaO,QAAAA,KAAK,EAAE,YAApB;AAAkCC,QAAAA,OAAO,EAAE;AAA3C,OAFK,EAAhB;;AAIAT,MAAAA,WAAW,CAACU,IAAZ,CAAiBT,KAAjB;AACAH,MAAAA,gBAAgB,CAAC,SAAD,EAAYQ,UAAZ,CAAhB;AACAR,MAAAA,gBAAgB,CAAC,aAAD,EAAgBE,WAAhB,CAAhB;AACD,K;;;;;;;6BAEQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,IAAI,EAAC,QAAV;AAAmB,QAAA,QAAQ,EAAE,CAA7B;AAAgC,QAAA,SAAS,EAAE,KAAKL,OAAhD;AAAyD,QAAA,SAAS,EAAC,OAAnE;AAA2E,QAAA,OAAO,EAAE,KAAKA,OAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CADF,CADF;AAOD;;;;EAxBqBL,S;;AA2BxBG,SAAS,CAACkB,SAAV,GAAsB;AACpBd,EAAAA,MAAM,EAAEL,SAAS,CAACoB,QAAV,CAAmBpB,SAAS,CAACqB,GAA7B,EAAkCC,UADtB;AAEpBhB,EAAAA,gBAAgB,EAAEN,SAAS,CAACuB,IAAV,CAAeD;AAFb,CAAtB;;AAKA,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAAAtB,KAAK;AAAA,SAAIA,KAAJ;AAAA,CAA7B;;AACA,eAAeH,OAAO,CAACyB,eAAD,CAAP,CAAyBvB,SAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nclass NewColumn extends Component {\n  state = {};\n\n  onClick = () => {\n    const { _class, updateClassValue } = this.props;\n    const { columns, columnOrder } = _class;\n    const colId = Math.random().toString(36).substring(7);\n    const newColumns = {\n      ...columns,\n      [colId]: { id: colId, title: 'New Column', taskIds: [] },\n    };\n    columnOrder.push(colId);\n    updateClassValue('columns', newColumns);\n    updateClassValue('columnOrder', columnOrder);\n  };\n\n  render() {\n    return (\n      <div className=\"add-new-column\">\n        <div role=\"button\" tabIndex={0} onKeyDown={this.onClick} className=\"title\" onClick={this.onClick}>\n          <span>+ New Column</span>\n        </div>\n      </div>\n    );\n  }\n}\n\nNewColumn.propTypes = {\n  _class: PropTypes.objectOf(PropTypes.any).isRequired,\n  updateClassValue: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => state;\nexport default connect(mapStateToProps)(NewColumn);\n"]},"metadata":{},"sourceType":"module"}