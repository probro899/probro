{"ast":null,"code":"import _regeneratorRuntime from \"/home/bhagya/workspace/reactjs/projects/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/bhagya/workspace/reactjs/projects/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport client from '../../../../../../socket';\nimport { onIceConnectionStateChange } from '../common';\nimport onIceCandidateHandler from './onIceCandidate';\n\nfunction gotRemoteStream(e) {\n  var videoElement = document.getElementById('video1');\n\n  if (videoElement.srcObject !== e.streams[0]) {\n    videoElement.srcObject = e.streams[0];\n  }\n}\n\nvar mediaSelector =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(mediaType) {\n    var stream;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            stream = null;\n            _context.t0 = mediaType;\n            _context.next = _context.t0 === 'audio' ? 4 : _context.t0 === 'video' ? 8 : _context.t0 === 'screenshare' ? 12 : 16;\n            break;\n\n          case 4:\n            _context.next = 6;\n            return navigator.mediaDevices.getUserMedia({\n              video: false,\n              audio: true\n            });\n\n          case 6:\n            stream = _context.sent;\n            return _context.abrupt(\"return\", stream);\n\n          case 8:\n            _context.next = 10;\n            return navigator.mediaDevices.getUserMedia({\n              video: true,\n              audio: true\n            });\n\n          case 10:\n            stream = _context.sent;\n            return _context.abrupt(\"return\", stream);\n\n          case 12:\n            _context.next = 14;\n            return navigator.mediaDevices.getDisplayMedia({\n              video: true\n            });\n\n          case 14:\n            stream = _context.sent;\n            return _context.abrupt(\"return\", stream);\n\n          case 16:\n            return _context.abrupt(\"return\", stream);\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function mediaSelector(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default\n/*#__PURE__*/\n(function () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee4(apis) {\n    var server, offerOptions, pc, createOffer;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            // server configuration\n            server = null;\n            offerOptions = {\n              offerToRecieveAudio: 1,\n              offerToRecieveVideo: 1\n            }; // Initialize PeerConnection\n\n            pc = new RTCPeerConnection(server); // Adding icecandidate listner\n\n            pc.addEventListener('icecandidate', function (e) {\n              return onIceCandidateHandler(e, pc, apis);\n            }); // Adding IceConnection State Change\n\n            pc.addEventListener('iceconnectionstatechange', function (e) {\n              return onIceConnectionStateChange(e, pc);\n            }); // Adding Ontrack listner\n\n            pc.addEventListener('track', gotRemoteStream); // creating offer for list of users\n\n            createOffer =\n            /*#__PURE__*/\n            function () {\n              var _ref3 = _asyncToGenerator(\n              /*#__PURE__*/\n              _regeneratorRuntime.mark(function _callee2(mediaType) {\n                var stream, offer;\n                return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        _context2.next = 2;\n                        return mediaSelector(mediaType);\n\n                      case 2:\n                        stream = _context2.sent;\n                        console.log('get Video mediaSelector', stream);\n                        stream.getTracks().forEach(function (track) {\n                          return pc.addTrack(track, stream);\n                        });\n                        _context2.next = 7;\n                        return pc.createOffer(offerOptions);\n\n                      case 7:\n                        offer = _context2.sent;\n                        _context2.next = 10;\n                        return pc.setLocalDescription(offer);\n\n                      case 10:\n                        _context2.next = 12;\n                        return apis.createOffer([offer, [{\n                          userId: 3\n                        }]]);\n\n                      case 12:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2);\n              }));\n\n              return function createOffer(_x3) {\n                return _ref3.apply(this, arguments);\n              };\n            }();\n\n            client.on('answer', function (data) {\n              console.log('On Aswer handler called', data);\n              pc.setRemoteDescription(data);\n            });\n            client.on('offer',\n            /*#__PURE__*/\n            function () {\n              var _ref4 = _asyncToGenerator(\n              /*#__PURE__*/\n              _regeneratorRuntime.mark(function _callee3(data) {\n                var answer;\n                return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        // const { users, offerData } = data;\n                        // delete data.users;\n                        pc.setRemoteDescription(data);\n                        _context3.next = 3;\n                        return pc.createAnswer();\n\n                      case 3:\n                        answer = _context3.sent;\n                        pc.setLocalDescription(answer);\n                        apis.createAnswer([answer, [{\n                          userId: 2\n                        }]]);\n\n                      case 6:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3);\n              }));\n\n              return function (_x4) {\n                return _ref4.apply(this, arguments);\n              };\n            }());\n            client.on('icecandidate', function (data) {\n              console.log('icecandidate handler called', data);\n              pc.addIceCandidate(new RTCIceCandidate(JSON.parse(data)));\n            });\n            return _context4.abrupt(\"return\", {\n              pc: pc,\n              createOffer: createOffer\n            });\n\n          case 11:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function (_x2) {\n    return _ref2.apply(this, arguments);\n  };\n})();","map":{"version":3,"sources":["/home/bhagya/workspace/reactjs/projects/probro/packages/web/src/screens/users/components/communication/helper-functions/main/index.js"],"names":["client","onIceConnectionStateChange","onIceCandidateHandler","gotRemoteStream","e","videoElement","document","getElementById","srcObject","streams","mediaSelector","mediaType","stream","navigator","mediaDevices","getUserMedia","video","audio","getDisplayMedia","apis","server","offerOptions","offerToRecieveAudio","offerToRecieveVideo","pc","RTCPeerConnection","addEventListener","createOffer","console","log","getTracks","forEach","track","addTrack","offer","setLocalDescription","userId","on","data","setRemoteDescription","createAnswer","answer","addIceCandidate","RTCIceCandidate","JSON","parse"],"mappings":"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","sourcesContent":["import client from '../../../../../../socket';\nimport { onIceConnectionStateChange } from '../common';\nimport onIceCandidateHandler from './onIceCandidate';\n\n\nfunction gotRemoteStream(e) {\n  const videoElement = document.getElementById('video1');\n  if (videoElement.srcObject !== e.streams[0]) {\n    videoElement.srcObject = e.streams[0];\n  }\n}\n\n\nconst mediaSelector = async (mediaType) => {\n  let stream = null;\n  switch (mediaType) {\n    case 'audio':\n      stream = await navigator.mediaDevices.getUserMedia({ video: false, audio: true });\n      return stream;\n    case 'video':\n      stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\n      return stream;\n    case 'screenshare':\n      stream = await navigator.mediaDevices.getDisplayMedia({ video: true });\n      return stream;\n    default:\n      return stream;\n  }\n};\n\nexport default async (apis) => {\n  // server configuration\n  const server = null;\n\n  const offerOptions = {\n    offerToRecieveAudio: 1,\n    offerToRecieveVideo: 1,\n  };\n\n  // Initialize PeerConnection\n  const pc = new RTCPeerConnection(server);\n\n  // Adding icecandidate listner\n  pc.addEventListener('icecandidate', e => onIceCandidateHandler(e, pc, apis));\n\n  // Adding IceConnection State Change\n  pc.addEventListener('iceconnectionstatechange', e => onIceConnectionStateChange(e, pc));\n\n  // Adding Ontrack listner\n  pc.addEventListener('track', gotRemoteStream);\n\n  // creating offer for list of users\n  const createOffer = async (mediaType) => {\n\n    const stream = await mediaSelector(mediaType);\n    console.log('get Video mediaSelector', stream);\n    stream.getTracks().forEach(track => pc.addTrack(track, stream));\n\n    const offer = await pc.createOffer(offerOptions);\n    await pc.setLocalDescription(offer);\n    await apis.createOffer([offer, [{ userId: 3 }]]);\n  };\n\n  client.on('answer', (data) => {\n    console.log('On Aswer handler called', data);\n    pc.setRemoteDescription(data);\n  });\n\n  client.on('offer', async (data) => {\n    // const { users, offerData } = data;\n    // delete data.users;\n\n    pc.setRemoteDescription(data);\n    const answer = await pc.createAnswer();\n    pc.setLocalDescription(answer);\n    apis.createAnswer([answer, [{ userId: 2 }]]);\n  });\n\n  client.on('icecandidate', (data) => {\n    console.log('icecandidate handler called', data);\n    pc.addIceCandidate(new RTCIceCandidate(JSON.parse(data)));\n  });\n\n  return { pc, createOffer };\n};\n"]},"metadata":{},"sourceType":"module"}