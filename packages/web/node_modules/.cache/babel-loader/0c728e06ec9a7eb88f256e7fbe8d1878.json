{"ast":null,"code":"import _objectSpread from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Nabin/workspace/probro/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Nabin/workspace/probro/packages/web/src/common/ClassComponents/Task.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions';\n\nvar Task =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Task, _Component);\n\n  function Task() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Task);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Task)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {};\n\n    _this.onClick = function () {\n      var _this$props = _this.props,\n          _class = _this$props._class,\n          updateClassValue = _this$props.updateClassValue,\n          task = _this$props.task;\n      var tasks = _class.tasks;\n      updateClassValue('overLayContent', {\n        isOpen: true,\n        taskId: tasks[task.id].id,\n        taskTitle: tasks[task.id].title,\n        taskDescription: tasks[task.id].description,\n        comments: tasks[task.id].comments\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Task, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          task = _this$props2.task,\n          index = _this$props2.index;\n      return React.createElement(Draggable, {\n        draggableId: \"\".concat(task.id),\n        index: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, function (provided) {\n        return React.createElement(\"div\", Object.assign({\n          className: \"task-container\",\n          ref: provided.innerRef\n        }, provided.draggableProps, provided.dragHandleProps, {\n          onClick: _this2.onClick,\n          onKeyDown: _this2.onClick,\n          role: \"menuitem\",\n          tabIndex: 0,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }), task.name);\n      });\n    }\n  }]);\n\n  return Task;\n}(Component);\n\nTask.propTypes = {\n  _class: PropTypes.objectOf(PropTypes.any).isRequired,\n  updateClassValue: PropTypes.func.isRequired,\n  task: PropTypes.objectOf(PropTypes.any).isRequired,\n  index: PropTypes.number.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state, ownprops) {\n  return _objectSpread({}, state, ownprops);\n};\n\nexport default connect(mapStateToProps, _objectSpread({}, actions))(Task);","map":{"version":3,"sources":["/Users/Nabin/workspace/probro/packages/web/src/common/ClassComponents/Task.js"],"names":["React","Component","PropTypes","Draggable","connect","actions","Task","state","onClick","props","_class","updateClassValue","task","tasks","isOpen","taskId","id","taskTitle","title","taskDescription","description","comments","index","provided","innerRef","draggableProps","dragHandleProps","name","propTypes","objectOf","any","isRequired","func","number","mapStateToProps","ownprops"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,eAAzB;;IAEMC,I;;;;;;;;;;;;;;;;;UACJC,K,GAAQ,E;;UAERC,O,GAAU,YAAM;AAAA,wBAC6B,MAAKC,KADlC;AAAA,UACNC,MADM,eACNA,MADM;AAAA,UACEC,gBADF,eACEA,gBADF;AAAA,UACoBC,IADpB,eACoBA,IADpB;AAAA,UAENC,KAFM,GAEIH,MAFJ,CAENG,KAFM;AAGdF,MAAAA,gBAAgB,CACd,gBADc,EAEd;AACEG,QAAAA,MAAM,EAAE,IADV;AAEEC,QAAAA,MAAM,EAAEF,KAAK,CAACD,IAAI,CAACI,EAAN,CAAL,CAAeA,EAFzB;AAGEC,QAAAA,SAAS,EAAEJ,KAAK,CAACD,IAAI,CAACI,EAAN,CAAL,CAAeE,KAH5B;AAIEC,QAAAA,eAAe,EAAEN,KAAK,CAACD,IAAI,CAACI,EAAN,CAAL,CAAeI,WAJlC;AAKEC,QAAAA,QAAQ,EAAER,KAAK,CAACD,IAAI,CAACI,EAAN,CAAL,CAAeK;AAL3B,OAFc,CAAhB;AAUD,K;;;;;;;6BAEQ;AAAA;;AAAA,yBACiB,KAAKZ,KADtB;AAAA,UACCG,IADD,gBACCA,IADD;AAAA,UACOU,KADP,gBACOA,KADP;AAEP,aACE,oBAAC,SAAD;AACE,QAAA,WAAW,YAAKV,IAAI,CAACI,EAAV,CADb;AAEE,QAAA,KAAK,EAAEM,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIG,UAAAC,QAAQ;AAAA,eACP;AACE,UAAA,SAAS,EAAC,gBADZ;AAEE,UAAA,GAAG,EAAEA,QAAQ,CAACC;AAFhB,WAGMD,QAAQ,CAACE,cAHf,EAIMF,QAAQ,CAACG,eAJf;AAKE,UAAA,OAAO,EAAE,MAAI,CAAClB,OALhB;AAME,UAAA,SAAS,EAAE,MAAI,CAACA,OANlB;AAOE,UAAA,IAAI,EAAC,UAPP;AAQE,UAAA,QAAQ,EAAE,CARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAUGI,IAAI,CAACe,IAVR,CADO;AAAA,OAJX,CADF;AAqBD;;;;EAzCgB1B,S;;AA4CnBK,IAAI,CAACsB,SAAL,GAAiB;AACflB,EAAAA,MAAM,EAAER,SAAS,CAAC2B,QAAV,CAAmB3B,SAAS,CAAC4B,GAA7B,EAAkCC,UAD3B;AAEfpB,EAAAA,gBAAgB,EAAET,SAAS,CAAC8B,IAAV,CAAeD,UAFlB;AAGfnB,EAAAA,IAAI,EAAEV,SAAS,CAAC2B,QAAV,CAAmB3B,SAAS,CAAC4B,GAA7B,EAAkCC,UAHzB;AAIfT,EAAAA,KAAK,EAAEpB,SAAS,CAAC+B,MAAV,CAAiBF;AAJT,CAAjB;;AAOA,IAAMG,eAAe,GAAG,SAAlBA,eAAkB,CAAC3B,KAAD,EAAQ4B,QAAR;AAAA,2BAA2B5B,KAA3B,EAAqC4B,QAArC;AAAA,CAAxB;;AACA,eAAe/B,OAAO,CAAC8B,eAAD,oBAAuB7B,OAAvB,EAAP,CAAyCC,IAAzC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions';\n\nclass Task extends Component {\n  state = {};\n\n  onClick = () => {\n    const { _class, updateClassValue, task } = this.props;\n    const { tasks } = _class;\n    updateClassValue(\n      'overLayContent',\n      {\n        isOpen: true,\n        taskId: tasks[task.id].id,\n        taskTitle: tasks[task.id].title,\n        taskDescription: tasks[task.id].description,\n        comments: tasks[task.id].comments,\n      }\n    );\n  };\n\n  render() {\n    const { task, index } = this.props;\n    return (\n      <Draggable\n        draggableId={`${task.id}`}\n        index={index}\n      >\n        {provided => (\n          <div\n            className=\"task-container\"\n            ref={provided.innerRef}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            onClick={this.onClick}\n            onKeyDown={this.onClick}\n            role=\"menuitem\"\n            tabIndex={0}\n          >\n            {task.name}\n          </div>\n        )}\n      </Draggable>\n    );\n  }\n}\n\nTask.propTypes = {\n  _class: PropTypes.objectOf(PropTypes.any).isRequired,\n  updateClassValue: PropTypes.func.isRequired,\n  task: PropTypes.objectOf(PropTypes.any).isRequired,\n  index: PropTypes.number.isRequired,\n};\n\nconst mapStateToProps = (state, ownprops) => ({ ...state, ...ownprops });\nexport default connect(mapStateToProps, { ...actions })(Task);\n"]},"metadata":{},"sourceType":"module"}